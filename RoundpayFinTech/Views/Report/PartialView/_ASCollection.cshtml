@model Fintech.AppCode.Model.Reports.ASCollection
<style>
    .cmb-0 {
        margin-bottom: 0.05rem !important;
    }
</style>

<div class="row">
    <div class="col-12">
        <input type="hidden" id="hdnUserPCID" value="@Model.UserID"/>

        <button type="button" class="close" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <h3 class="mb-0 mt-0 bg-white rounded text-info"> Account Statement Collection</h3>
        <hr />

        <div class="scroll-content">
            <div class="container">
                <div class="row">
                    <div class="col-sm-3">
                        <div class="btn-group btn-toggle" id="btnGroup">
                            <button class="btn btn-sm btn-outline-info active">Cash</button>
                            <button class="btn btn-sm btn-outline-info">Bank</button>
                        </div>
                    </div>
                    <div class="col-sm-9">
                        <div>
                            <h6 class="mb-0">
                                <span id="spnNam" class="text-monospace">
                                    @Model.OutletName [@Model.Mobile]
                                </span>
                            </h6>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="lbl" for="txtAmount">Amount</label>
                    <div class="input-group">
                        <input aria-describedby="amountHelp" class="form-control" id="txtAmount" maxlength="10" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" placeholder="Enter Amount" tabindex="1" type="text" value="">
                    </div>
                    <small id="amountHelp" class="form-text text-muted d-none"></small>
                </div>
                <div class="form-row d-none" id="dvBank">
                    <div class="col-md form-group">
                        @Html.Label("ddlBank", "Select Bank", new { @class = "lbl" })
                        @{ 
                            var list = new SelectList(Model.Banks, "BankID", "BankName");
                        }
                        <select id="ddlBank" aria-describedby="bankHelp" tabindex="4" class="custom-select custom-select-md mb3" asp-items="@list">
                            <option value="-1"> :: Select Bank :: </option>
                        </select>
                        <small id="bankHelp" class="form-text text-muted d-none"></small>
                    </div>
                </div>
                <div class="form-group d-none" id="dvUTR">
                    <label class="lbl" for="txtBankUTR">Bank UTR</label>
                    <div class="input-group">
                        <input aria-describedby="BankUTRHelp" class="form-control" id="txtBankUTR" placeholder="Enter Bank UTR" tabindex="1" type="text" value="">
                    </div>
                    <small id="BankUTRHelp" class="form-text text-muted d-none"></small>
                </div>
                <div class="form-group">
                    <label class="lbl" for="txtRemark">Remark</label>
                    <textarea aria-describedby="remarkHelp" class="form-control" id="txtRemark" placeholder="Enter Remark" tabindex="3"></textarea>
                    <small id="remarkHelp" class="form-text text-muted d-none"></small>
                </div>
                <button type="button" class="btn btn-dark" id="btnFCollect" tabindex="7">Collect</button>
                <button class="btn btn-danger" id="mdlCancel">Cancel</button>
            </div>
        </div>
    </div>
</div>
<script>
    $('#btnGroup').click(function () {
        $(this).find('.btn').toggleClass('active');
        if ($(this).find('.btn-dark').length > 0) {
            $(this).find('.btn').toggleClass('btn-dark');
        }
        if ($(this).find('.btn-outline-dark').length > 0) {
            $(this).find('.btn').toggleClass('btn-outline-dark');
        }
        if ($('#btnGroup.btn-toggle').find('.btn.active').text() === 'Bank') {
            $('#dvBank').removeClass('d-none');
            $('#dvUTR').removeClass('d-none');
        } else {
            $('#dvBank').addClass('d-none');
            $('#dvUTR').addClass('d-none');
        }
        
    });

    $('#btnFCollect').on('click', function () {
        var ct = {
            userId: $('#hdnUserPCID'),
            collectionMode: $('#btnGroup.btn-toggle').find('.btn.active'),
            amount: $('#txtAmount'),
            bank: $('#ddlBank'),
            bankName: $('#ddlBank :selected'),
            utr: $('#txtBankUTR'),
            remark: $('#txtRemark')
        }
        var IsE = { amt: ct.amount.val() < 1, bnk: (ct.collectionMode.text() === 'Bank' && ct.bank.val() == -1), utr: (ct.collectionMode.text() === 'Bank' && ct.utr.val() == '') }
        IsE.err = IsE.amt || IsE.bnk || IsE.utr;
        $v.showErrorFor(ct.amount, 'Invalid Amount', IsE.amt);
        $v.showErrorFor(ct.bank, 'Please Select Bank', IsE.bnk);
        $v.showErrorFor(ct.utr, 'Please Fill UTR', IsE.utr);
        if (IsE.err)
            return false;
        preloader.load();
        $.post('/a-s-c', { UserID: ct.userId.val(), CollectionMode: ct.collectionMode.text(), Amount: ct.amount.val(), Remark: ct.remark.val(), BankName: ct.bankName.text(), UTR: ct.utr.val() })
            .done(function (result) {
                resultReload(result);
                if (result.statuscode === -1) {
                    an.title = 'Oops';
                    an.content = result.msg;
                    an.alert(an.type.failed);
                    an.autoClose = 2;
                }
                else {
                    an.title = 'Welldone!';
                    an.content = result.msg;
                    an.alert(an.type.success);
                    mdlA.dispose();
                }
            }).catch(function (xhr, ex, message) {
                an.title = 'Oops';
                an.content = message;
                an.alert(an.type.failed);
                an.autoClose = 2;
            }).fail(function (xhr) {
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
            });
    });
</script>