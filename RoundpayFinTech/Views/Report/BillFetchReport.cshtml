@using Fintech.AppCode.StaticModel;
@model BillFetchReportModel
@{
    ViewData["Title"] = "Transaction Details";
}
<style>
    .filter-rpt .col-sm-2, .filter-rpt .col-md-2, .filter-rpt .col-xs-2 {
        padding-left: 2px;
        padding-right: 2px;
    }
    
</style>
<div aria-label="breadcrumb" class="breadcrumb" id="page-header">
    <div class="container-fluid">
        <h5 class="float-left"><i class="fa fa-users"></i> Recharge & Bill Payment Report</h5>
        <ol class="breadcrumb float-right">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item">User Report</li>
            <li class="breadcrumb-item active"> Bill Fetch Report</li>
        </ol>
    </div>
</div>

<div class="__p main-temp-body">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card mt-2">
                    <div class="card-header bg-gradientorange text-white text-monospace">
                        <i class="fas fa-link"></i> Bill Fetch Report
                    </div>
                    <div class="card-body">
                        <div class="row filter-rpt">

                            <div class="col-md-2 col-sm-2 col-xs-2">
                                <div class="mb-2">
                                    <label class="lbl" for="ddlTop">Top</label>
                                    <select id="ddlTop" tabindex="1" class="form-control">
                                        <option value="50">50</option>
                                        <option value="100">100</option>
                                        <option value="200">200</option>
                                        <option value="500">500</option>
                                        <option value="1000">1000</option>
                                        <option value="1500">1500</option>
                                        <option value="2000">2000</option>
                                        <option value="2500">2500</option>
                                        <option value="3000">3000</option>
                                        <option value="4000">4000</option>
                                        <option value="5000">ALL</option>
                                    </select>
                                </div>
                            </div>

                            <div class="col-md-2 col-sm-2 col-xs-2">
                                <div class="form-group">
                                    <label class="lbl" for="dtFromDate">From Date</label>
                                    <input aria-describedby="dtFromDate" class="form-control" id="dtFromDate" tabindex="5" type="text" readonly="readonly" value="@DateTime.Now.ToString(" dd MMM yyyy")" />
                                    <small id="Small3" class="form-text text-muted d-none"></small>
                                </div>
                            </div>

                            <div class="col-md-2 col-sm-2 col-xs-2">
                                <div class="form-group" id="asdf">
                                    <label class="lbl" for="dtToDate">To Date</label>
                                    <input aria-describedby="dtToDate" class="form-control" id="dtToDate" tabindex="6" type="text" readonly="readonly" value="@DateTime.Now.ToString(" dd MMM yyyy")">
                                    <small id="Small4" class="form-text text-muted d-none"></small>
                                </div>
                            </div>

                            <div class="col-md-2 col-sm-2 col-xs-2">
                                <div class="mb-2">
                                    <label class="lbl" for="ddlOpType">Choose OPType</label>
                                    @if (Model.OpTypes != null)
                                    {
                                        var OpTypes = new SelectList(Model.OpTypes, "ID", "OpType");
                                        <select id="ddlOpType" tabindex="2" class="form-control" asp-items="OpTypes">
                                            <option value="0">:: Select OPType :: </option>
                                        </select>
                                    }

                                </div>
                            </div>

                            <div class="col-md-2 col-sm-2 col-xs-2">
                                <div class="mb-2">
                                    <label class="lbl" for="ddlOperator">Choose Operator</label>
                                    @*@{
                        var listOperator = new SelectList(Model.Operators, "OID", "Name");
                    }*@
                                    @if (Model.Operators != null)
                                    {
                                        var listOperator = new SelectList(Model.Operators, "OID", "Name");
                                    }
                                    <select id="ddlOperator" tabindex="7" class="form-control">
                                        <option value="0">:: Select Operator :: </option>
                                    </select>
                                </div>
                            </div>

                            <div class="col-md-2 col-sm-2 col-xs-2">
                                <div class="form-group">
                                    <label class="lbl" for="ddlStatus">Choose Payment Status</label>
                                    <select id="ddlStatus" tabindex="7" class="form-control">
                                        @*<option value="0">:: Select Status :: </option>*@
                                        <option value="2">ALL</option>
                                        <option value="1">PAID</option>
                                        <option value="0">UNPAID</option>

                                    </select>
                                </div>
                            </div>

                            <div class="col-md-2 col-sm-2 col-xs-2">
                                <div class="mb-2">
                                    <label class="lbl" for="ddlCriteria">Choose Criteria</label>
                                    <select id="ddlCriteria" tabindex="3" class="form-control">
                                        <option value="0">:: Select Criteria :: </option>
                                        @if (Model.IsAdmin || Model.IsWLAPIAllowed)
                                        {
                                            <option value="@Criteria.OutletMobile">Outlet Mobile</option>

                                        }
                                        <option value="@Criteria.AccountNo">Account No.</option>
                                        <option value="@Criteria.BillNumber">TID</option>
                                    </select>
                                </div>
                            </div>

                            <div class="col-md-2 col-sm-2 col-xs-2">
                                <div class="mb-2">
                                    <label class="lbl" for="txtSearch">Select Criteria</label>
                                    <div class="input-group">
                                        <input aria-describedby="txtSearch" class="form-control" id="txtSearch" name="txtSearch" placeholder="Enter Search" tabindex="4" type="text" value="" />
                                        <div class="input-group-append">
                                            <span id="btnSearch" tabindex="8" class="btn btn-outline-dark"><i class="fa fa-search"></i></span>
                                            <span class="btn btn-outline-success far fa-file-excel pt-2" style="font-size:20px;" id="btnExport"></span>
                                        </div>
                                    </div>
                                    <small id="Small1" class="form-text text-muted d-none"></small>
                                    <input type="hidden" id="hidTrID" value="" class="d-none" />
                                </div>
                            </div>
                        </div>
                        <div id="reportGrid">

                        </div>
                        <!-- Cut Previous Code -->
                        <div class="row" id="t-summary">
                            <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2">
                                <span class="badge badge-secondary" title="<b>Number of Total  FetchBills</b>" data-toggle="tooltip" data-html="true">
                                    <i class="fas fa-tachometer-alt"></i>
                                    <span id="pa">@Model.BillFetchSummary.TotalFetchBill</span>
                                </span>

                            </div>
                            <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2">
                                <span class="badge badge-success" title="<b>Number of Total SUCCESS Bill</b>" data-toggle="tooltip" data-html="true">
                                    <i class="fas fa-tachometer-alt"></i> <span id="sc">@Model.BillFetchSummary.TotalSuccess</span>
                                </span>
                            </div>
                            <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2">
                                <span class="badge badge-success" title="<b>Number of Total Paid Bill</b>" data-toggle="tooltip" data-html="true">
                                    <i class="fas fa-tachometer-alt"></i>
                                    <span id="sa">@Model.BillFetchSummary.TotalPaid</span>
                                </span>
                            </div>
                            <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2">
                                <span class="badge badge-danger" title="<b>Number of Total FAILED Bill</b>" data-toggle="tooltip" data-html="true">
                                    <i class="fas fa-tachometer-alt"></i>
                                    <span id="fc">@Model.BillFetchSummary.TotalFailed</span>
                                </span>
                            </div>
                        </div>

                        <div class="table-responsive table-sm">
                            <table class="table table-bordered table-striped table-responsive-sm" id="tblRechReport">
                                <thead class="bg-tableth">
                                    <tr>
                                        <th scope="col" class="text-left">ID</th>
                                        <th scope="col" class="text-left">TID</th>
                                        <th scope="col" class="text-left">Outlet</th>
                                        <th scope="col" class="text-left">Account Number</th>
                                        <th scope="col" class="text-left">Operator</th>
                                        <th scope="col" class="text-left">Date Time</th>
                                        <th scope="col" class="text-left">Payment Status</th>
                                        <th scope="col" class="text-left">Status</th>
                                        <th scope="col" class="text-left">Reason</th>

                                        @if (Model.IsAdmin || Model.IsWLAPIAllowed)
                                        {
                                            <th scope="col" class="text-left">API</th>
                                        }

                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>

                    </div>
                    </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/lib/bootstrap/calendar/datepicker/js/bootstrap-datetimepicker.min.js"></script>
    <script src="~/js/datepickerHelper.js"></script>

    <script>
        $(document).ready(function () {
            an.autoClose = 5;
            var FDate = DTPicker($('#dtFromDate'), new Date().toDateString(), function () { }, function () {
                $('dp').addClass('d-none');
                var fdate = new Date($('#dtFromDate').val()), fy = fdate.getFullYear(), fm = fdate.getMonth();
                var lastDay_f = new Date(fy, fm + 1, 0);

                var tdate = new Date($('#dtToDate').val()), ty = tdate.getFullYear(), tm = tdate.getMonth();

                if (fdate > tdate) {
                    $('#dtToDate').val($('#dtFromDate').val());
                } else {
                    if (fy == ty) {
                        var curDate = new Date(moment(new Date()).format('D MMM YYYY')), cm = curDate.getMonth();
                        if (cm == fm) {
                            if (curDate == fdate && fdate != tdate) {
                                $('#dtToDate').val(moment(curDate).format('D MMM YYYY'));
                            } else if (fdate < curDate) {
                                curDate = curDate.setDate(curDate.getDate() - 1)
                                $('#dtToDate').val(moment(curDate).format('D MMM YYYY'));
                            }
                        }
                        else if (tm > fm) {
                            $('#dtToDate').val(moment(lastDay_f).format('D MMM YYYY'));
                        }
                    } else if (fy < ty) {
                        $('#dtToDate').val(moment(lastDay_f).format('D MMM YYYY'));
                    }
                }
            });
            var TDate = DTPicker($('#dtToDate'), new Date().toDateString(), function () { }, function () {
                $('dp').addClass('d-none');
                var fdate = new Date($('#dtFromDate').val()), fy = fdate.getFullYear(), fm = fdate.getMonth();

                var tdate = new Date($('#dtToDate').val()), ty = tdate.getFullYear(), tm = tdate.getMonth();
                var firstDay_t = new Date(ty, tm, 1);

                var curDate = new Date(moment(new Date()).format('D MMM YYYY'));

                if (curDate.toString() == tdate.toString()) {
                    $('#dtFromDate').val(moment(curDate).format('D MMM YYYY'));
                }
                else if (fdate > tdate) {
                    $('#dtFromDate').val($('#dtToDate').val());
                } else {
                    if (fy == ty) {
                        if (tm > fm) {
                            $('#dtFromDate').val(moment(firstDay_t).format('D MMM YYYY'));
                        }
                    } else if (fy < ty) {
                        $('#dtFromDate').val(moment(firstDay_t).format('D MMM YYYY'));
                    }
                }
            });
            $('#ddlCriteria').change(function () {
                $('label[for=txtSearch]').html("Select Criteria");
                if ($(this)[0].selectedIndex > 0) {
                    $('label[for=txtSearch]').html('Enter ' + $('#ddlCriteria :selected').text());
                }
            });
            $("#btnSearch,#btnExport").click(function () {
                search(this);
            });
            $('#ddlOpType').change(() => _loadPartial());
            $("#btnSearch").click();
        });

        var _loadPartial = function () {
            preloader.load();

            $.post('/BillFetchOperator', { opTypeID: $('#ddlOpType').val() })
                .done(function (result) {
                    console.log(result);
                    if (result != null) {
                        $('#ddlOperator').html('');
                        $('#ddlOperator').append('<option value="0">:: Select Operator :: </option>');
                        $.each(result, function (index, value) {
                            $('#ddlOperator').append('<option value="' + value.oid + '">' + value.name + '</option>');
                        });
                    }
                })
                .fail(xhr => {
                    an.title = 'Oops';
                    an.content = xhr.status == 0 ? 'Internet Connection was broken' : 'Server error'
                    an.alert(an.type.failed);
                })
                .always(() => {
                    preloader.remove();
                });
        }

        var search = function (sender) {
            var RRFilter = {
                TopRows: $('#ddlTop').val(),
                FromDate: $('#dtFromDate').val(),
                ToDate: $('#dtToDate').val(),
                OPTypeID: $('#ddlOpType').val(),
                //OPTypeID: $('#ddlOpType').val() != undefined ? $('#ddlOpType').val() : 0,
                //OID: $('#ddlOperator').val() != undefined ? $('#ddlOperator').val() : 0,
                OID: $('#ddlOperator').val(),
                Status: $('#ddlStatus').val(),
                APIID: $('#ddlAPI').val() != undefined ? $('#ddlAPI').val() : 0,
                Criteria: $('#ddlCriteria').val(),
                CriteriaText: $('#txtSearch').val(),
                IsExport: sender.id.indexOf('Export') > -1 || parseInt($('#ddlTop').val()) > 4000 ? true : false
            };

            if (RRFilter.TopRows > 4000 && sender.id.indexOf('Export') < 0) {
                an.title = 'Exporting to excel';
                an.content = 'Because you have selected all record!';
                an.alert(an.type.info);
                an.autoClose = 10;
            }

            if (RRFilter.IsExport) {
                window.location = "/BillFetch-Report?" + $.param(RRFilter);
            } else {
                btnLdr.addClass = 'btn-dark';
                btnLdr.removeClass = 'btn-outline-dark';
                btnLdr.Start($("#btnSearch"), 'Requesting');
                preloader.load();
                $.ajax({
                    type: 'POST',
                    url: '/BillFetch-Report',
                    contentType: 'application/json',
                    data: JSON.stringify(RRFilter),
                    success: function (result) {
                        resultReload(result);
                        $('#tblRechReport tbody').html(result);
                        //$('.__p tbody').html(result);
                        $(".dropdown-toggle").dropdown();
                        $('[data-toggle="tooltip"]').tooltip();
                        $(".a_modal").click(function () {
                            var Serviceid = $(this).data().ispes;
                            var td = $(this).parent("td");
                            var tid = $(this).attr("name");
                            var transid = $(td).find("#lbltid").val();

                            if (Serviceid == 'True') {
                                $.post('/PESDetails', { TID: tid, T: transid }, function (result) {
                                    resultReload(result);
                                    $('#' + an.id).remove();
                                    mdlA.id = 'mdlReqResp';
                                    mdlA.content = result;
                                    mdlA.options.backdrop = 'static';
                                    mdlA.alert(mdlA.size.large);
                                    $('button.close span').unbind().click(() => mdlA.dispose());
                                }).fail(xhr => {
                                    an.title = 'Oops';
                                    an.content = xhr.status === 0 ? 'Internet Connection was broken' : 'Server error';
                                    an.alert(an.type.failed);
                                }).always(() => preloader.remove());
                            }
                            else {


                                var BillNumber = $(td).find("#lbltid").val();
                                var Outlet = $(td).find("#lbloutlet").val();
                                var Account = $(td).find("#lblact").val();
                                var EntryDate = $(td).find("#lblentdate").val();
                                var PaymentStatus = $(td).find('#lblstatus').val();
                                var Status = $(td).find('#lblsts').val();
                                var Reason = $(td).find('#lblreason').val();
                                //var CustomerName = $(td).find('#hidCName').val();
                                //var Amount = $(td).find('#hidamt').val();
                                var API = $(td).find('#lblapi').val();

                                $.post('/BillFetch-APiUrl', { TID: tid, T: transid }, function (result) {
                                    resultReload(result);
                                    $('#' + an.id).remove();
                                    mdlA.id = 'myalert';
                                    mdlA.content = result;
                                    mdlA.options.backdrop = 'static';
                                    mdlA.alert(mdlA.size.large);
                                    $('button.close span,#mdlCancel').unbind().click(() => mdlA.dispose());
                                    $("#lbltranid").text(transid);
                                    $("#lblvendorid").text(Outlet);
                                    $("#lblapirequestid").text(Account);
                                    $("#lblmodifydate").text(EntryDate);
                                    $("#lbloption1").text(Status);
                                    $("#lbloption2").text(CustomerName);
                                    $("#lbloption3").text(Amount);
                                    $("#lbloption4").text(PaymentStatus);
                                    $('#lblCustNoShow').text(API);
                                    $('#lblCCName').text(Request);
                                    $('#lblCCMob').text(Response);


                                }).fail(xhr => {
                                    an.title = 'Oops';
                                    an.content = xhr.status === 0 ? 'Internet Connection was broken' : 'Server error';
                                    an.alert(an.type.failed);
                                }).always(() => preloader.remove());
                            }
                        });
                        $('.aupComm').click(function () {
                            var t = $(this).attr('id');
                            var tr = $(this).attr('name');
                            $.post('/u-comm', { t: t, tr: tr }, function (result) {
                                resultReload(result);
                                $('#' + an.id).remove();
                                mdlA.id = 'uplineAlert';
                                mdlA.content = result;
                                mdlA.options.backdrop = 'static';
                                mdlA.alert(mdlA.size.large);
                                $('button.close span,#mdlCancel').click(() => mdlA.dispose());
                            }).fail(xhr => {
                                an.title = 'Oops';
                                an.content = xhr.status === 0 ? 'Internet Connection was broken' : 'Server error';
                                an.alert(an.type.failed);
                            }).always(() => preloader.remove());
                        });
                        $('tr div.dropdown-menu a.dropdown-item').click(function () {
                            var id = $(this).closest('tr').data().itemId;
                            var transid = $($(this).closest('tr').find("td")[2]).find('#lbltid').val();
                            var _option = $(this).text();
                            if (_option.trim() == "Transaction Receipt") {
                                convenientFee(id, transid)
                            }
                            else if (_option.trim() == "Show Document") {
                                $.post('/show-pes-doc', { Id: id })
                                    .done(function (result) {
                                        resultReload(result);
                                        mdlA.content = result;
                                        mdlA.id = 'mymodal';
                                        mdlA.options.backdrop = 'static';
                                        mdlA.alert(mdlA.size.small);
                                        $('[data-toggle="tooltip"]').tooltip();
                                        $('button.close span,#mdlCancel').unbind().click(function () {
                                            mdlA.dispose();
                                        });
                                        setTimeout(function () {
                                            $('#txtRemark').focus();
                                        }, 500);
                                    })
                                    .fail(xhr => {
                                        an.title = 'Oops';
                                        an.content = xhr.status == 0 ? 'Internet Connection was broken' : 'Server error';
                                        an.alert(an.type.failed);
                                    })
                                    .always(() => preloader.remove());
                            }
                            else {
                                var status = this.id.toUpperCase()[0];
                                var td = $(this).closest('tr').children()[2];
                                var tdSts = $(this).closest('tr').children()[14];
                                var tdRSts = $(this).closest('tr').children()[15];
                                var transid = $(td).find("#lbltid").val();
                                var tdLive = $(this).closest('tr').children()[16];
                                if ($(tdSts).html().indexOf('badge') < 0) {
                                    tdSts = $(this).closest('tr').children()[12];
                                    tdRSts = $(this).closest('tr').children()[13];
                                    tdLive = $(this).closest('tr').children()[14];
                                }
                                if (status !== 'D') {
                                    preloader.load();
                                    $.post('/USF', { Status: status })
                                        .done(function (result) {
                                            resultReload(result);
                                            mdlA.content = result;
                                            mdlA.id = 'mymodal';
                                            mdlA.options.backdrop = 'static';
                                            mdlA.alert(mdlA.size.default);
                                            $('[data-toggle="tooltip"]').tooltip();
                                            $('button.close span,#mdlCancel').unbind().click(function () {
                                                mdlA.dispose();
                                            });
                                            setTimeout(function () {
                                                $('#txtRemark').focus();
                                            }, 500);
                                            $('#btnUpdateStatus').click(function () {
                                                btnLdr.addClass = 'btn-dark';
                                                btnLdr.removeClass = 'btn-outline-dark';
                                                var selfBtn = $(this);
                                                btnLdr.Start(selfBtn, 'Requesting');
                                                var rem = $('#txtRemark').val();
                                                if (status == 'W') {
                                                    preloader.load();
                                                    $.post('/w-2-r', { TID: id, TransactionID: transid, RightAccount: rem })
                                                        .done(function (result) {
                                                            resultReload(result);
                                                            if (result.statuscode !== undefined) {
                                                                an.title = result.statuscode == an.type.success ? "Well done" : "Oops";
                                                                an.content = result.status;
                                                                an.alert(result.statuscode);
                                                                mdlA.dispose();
                                                            }
                                                        })
                                                        .fail(xhr => {
                                                            an.title = 'Oops';
                                                            an.content = xhr.status == 0 ? 'Internet Connection was broken' : 'Server error';
                                                            an.alert(an.type.failed);
                                                        })
                                                        .always(function () {
                                                            btnLdr.Stop(selfBtn);
                                                            preloader.remove();
                                                        });
                                                }
                                                else {
                                                    USF(id, status, transid, rem,
                                                        function () {
                                                            btnLdr.Stop(selfBtn);
                                                            mdlA.dispose();
                                                        },
                                                        function () {
                                                            try {
                                                                $(tdSts).html(status === 'S' ? '<span class="badge badge-success">SUCCESS</span>' : '<span class="badge badge-danger">FAILED</span>');
                                                                $(tdLive).html(rem);
                                                            } catch (e) {

                                                            }
                                                        });
                                                }
                                            });
                                        })
                                        .fail(xhr => {
                                            an.title = 'Oops';
                                            an.content = xhr.status == 0 ? 'Internet Connection was broken' : 'Server error';
                                            an.alert(an.type.failed);
                                        })
                                        .always(() => preloader.remove());
                                }
                                else if (status === 'D') {
                                    preloader.load();
                                    $.post('/r-r', { TID: id, TransactionID: transid })
                                        .done(function (result) {
                                            resultReload(result);
                                            if (result.statuscode !== undefined) {
                                                an.title = result.statuscode == an.type.success ? "Well done" : "Oops";
                                                an.content = result.msg;
                                                an.alert(result.statuscode);
                                                if (result.statuscode == an.type.success) {
                                                    try {
                                                        $(tdRSts).html('REQUESTED');
                                                    }
                                                    catch (e) {
                                                    }
                                                }
                                            }
                                        })
                                        .fail(function (xhr) {
                                            an.title = 'Oops';
                                            an.content = xhr.status == 0 ? 'Internet Connection was broken' : 'Server error';
                                            an.alert(an.type.failed);
                                        })
                                        .always(() => preloader.remove());
                                }
                            }
                        });

                        var USF = function (id, sts, tranid, rem, fnc, fn_suc) {
                            preloader.load();
                            $.post('/U-S-F', { Status: sts, TID: id, TransactionID: tranid, Remark: rem })
                                .done(result => {
                                    resultReload(result);
                                    if (result.statuscode !== undefined) {
                                        an.title = result.statuscode == an.type.success ? "Well done" : "Oops";
                                        an.content = result.msg;
                                        an.alert(result.statuscode);
                                    }
                                })
                                .fail(xhr => {
                                    an.title = 'Oops';
                                    an.content = xhr.status == 0 ? 'Internet Connection was broken' : 'Server error';
                                    an.alert(an.type.failed);
                                })
                                .always(() => {
                                    fnc();
                                    preloader.remove();
                                });
                        }
                    },
                    statusCode: {
                        500: function () {
                            an.title = 'Oops';
                            an.content = 'Server error';
                            an.alert(an.type.failed);
                        },
                        0: function () {
                            an.title = 'Oops';
                            an.content = 'Internet Connection was broken';
                            an.alert(an.type.failed);
                        }
                    },
                    error: function (xhr, result) {
                        resultReload(result);
                        an.title = "Oops";
                        an.content = result;
                        an.alert(an.type.failed);
                    },
                    complete: function () {
                        btnLdr.Stop($("#btnSearch"));
                        preloader.remove();
                    }
                });
            }
        };

        var convenientFee = (tid, TransactionID) => {
            let _html = `<div class="col-md-12 mb-3"> <button type="button" class="close pull-right" aria-label="Close">
                                                                                                <span aria-hidden="true">&times;</span></button></div><div class="col-md-12">
                                                                                                <label>Enter Convenient Fee</label>
                                                                                                <input class="form-control mb-3" value = "0" id="txtconvenientFee"/>
                                                                                                <button class="btn btn-success mb-3" id="bntGo">GO</button>
                                                                                             </div>`;
            mdlA.content = _html;
            mdlA.options.backdrop = 'static';
            mdlA.alert(mdlA.size.small);
            $('button.close').click(() => mdlA.dispose());
            $('#bntGo').on('click', () => {
                let _id = $('#txtconvenientFee').val();
                mdlA.dispose(() => TransactionReciept(TransactionID, tid, _id));
            });
        }

        var TransactionReciept = (TransactionID, TID, convenientFee = 0) => {
            preloader.load();
            $.post('/Transaction-Receipt', { TransactionID, TID, IsInvoice: true, convenientFee })
                .done(result => {
                    resultReload(result);
                    $('#' + an.id).remove();
                    mdlA.id = 'mymodalTranR';
                    mdlA.content = result;
                    mdlA.options.backdrop = 'static';
                    mdlA.options.keyboard = false;
                    mdlA.alert(mdlA.size.default);
                    $('button.close span,#mdlCancel').click(() => mdlA.dispose());

                    $('#btnPrint').click(function () {
                        var win = window.open(`/TransactionReceipt/?TransactionID=${TransactionID}&TID=${TID}&IsInvoice=${true}&convenientFee=${convenientFee}`, "_blank", "toolbar=0,width=900,height=650,left=0,top=0");
                        win.focus();
                    });
                })
                .fail(xhr => {
                    an.title = 'Oops';
                    an.content = xhr.status == 0 ? 'Internet Connection was broken' : 'Server error';
                    an.alert(an.type.failed);
                }).always(() => preloader.remove());
        }

    </script>

}



