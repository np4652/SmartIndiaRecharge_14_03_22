@{
    ViewData["Title"] = "Auto Low Balance Alert";
}
<style>
    .cus_start_btn {
        font-size: 14px;
        margin-top: 3px;
        border-radius: 0;
        padding: 4px 5px;
    }

    .cus_card_body {
        padding: 10px;
        height: 25vh;
    }
   
        .cus_box_sec .task_sec {
            font-size: 24px;
        }
        .cus_box_sec .task_para_sec {
            font-size: 15px;
        }
        footer
        {
            position:absolute
        }
</style>
<div aria-label="breadcrumb" class="breadcrumb" id="page-header">
    <div class="container-fluid">
        <h5 class="float-left"><i class="fas fa-space-shuttle"></i> @ViewData["Title"] </h5>
        <ol class="breadcrumb float-right">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item">Auto Low Balance Alert Page</li>
            <li class="breadcrumb-item active"> @ViewData["Title"]</li>
        </ol>
    </div>
</div>
<div class="__p main-temp-body">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card mt-4">
                    <div class="card-header bg-gradientorange text-white">
                        Sending Alert!
                    </div>
                    <input type="hidden" id="hdnStsRech" value="0" />
                    
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-3">
                                <div class="card text-center">
                                    <div class="card-header bg-info text-white">Low Balance Alerts</div>
                                    <div class="card-body cus_card_body">
                                        <div class="row">
                                            <div class="col-md-6 pr-0">
                                                <div class="form-group">
                                                    <input type="text" class="form-control" id="txtRechTime" data-mvr="5" value="5" placeholder="Minutes...">
                                                </div>
                                            </div>
                                            <div class="col-md-6 pr-0 pl-0">
                                                <button class="btn btn-primary cus_start_btn" id="btnStsRech">Processing!</button>
                                            </div>
                                        </div>
                                        <div class="fa-3x cus_box_sec" id="spnRech">
                                            <h1 class="task_sec">Processing!</h1><p class="task_para_sec">New Hit will be in <span class="text-success">5:00</span> mins!</p>
                                        </div>
                                    </div>
                                    <div class="card-footer text-muted" data-ctrr="0" id="dvCtrR">Hit Count : <b> 0</b></div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>
        $(document).ready(() => {
            SendAlerts();
        });

        $('#btnStsRech').on('click', () => {
            var btnRech = $('#btnStsRech');
            var btRText = btnRech.html();
            if (btRText == "Stop") {
                $('#hdnStsRech').val("1");
                btnRech.html('Stopping!');
            }
            else if (btRText == "Start") {
                var mnt = $('#txtRechTime').val();
                if (mnt < 5) {
                    an.title = 'Error';
                    an.content = ' Minimum time is 5 minutes!';
                    an.alert(an.type.failed);
                    return;
                }
                $('#hdnStsRech').val("0");
                var mntR = $('#txtRechTime').val();
                $('#txtRechTime').data('mvr', mntR);
                btnRech.html('Stop');
                SendAlerts();
            }
        });

        var SendAlerts = () => {
            if ($('#hdnStsRech').val() == "1") {
                return false;
            }
            else {
                btnRechP = $('#btnStsRech');
                btnRechP.html('Stop');
                var ctr = $('#dvCtrR').data('ctrr');
                $('#dvCtrR b').html(++ctr);
                $('#dvCtrR').data('ctrr', ctr);
                $('#spnRech').html('<i class="fas fa-cog fa-spin text-info"></i>');
                $.post('/LowBalanceAlert')
                    .done(function (result) {
                        if (btnRechP.html() == "Stopping") {

                        }
                        else {
                            btnRechP.html('Start');
                            $('#hdnStsRech').val("0");
                            var mntR = $('#txtRechTime').data('mvr');
                            var dt = new Date();
                            var time = moment(dt.getTime() + mntR * 1000 * 60).format('DD MMM YY hh:mm:ss a');
                            $('#spnRech').html('<h1 class="task_sec">Task Completed!</h1><p class="task_para_sec">New Hit will be in <span class="text-success" >' + time + '</span> !</p>');
                        }
                    })
                    .catch(function (xhr, e, msg) {
                        an.title = 'Oops';
                        an.content = 'An error has been occured during request.Reload again!'
                        an.alert(an.type.failed);
                    })
                    .fail(function (xhr) {
                        if (xhr.status == 500) {
                            an.title = 'Oops';
                            an.content = 'Server error';
                            an.alert(an.type.failed);
                        }
                        if (xhr.status == 0) {
                            an.title = 'Oops';
                            an.content = 'Internet Connection was broken';
                            an.alert(an.type.failed);
                        }
                    })
                    .always(function () {
                        var mntR = $('#txtRechTime').data('mvr');
                        var dt = new Date();
                        var time = moment(dt.getTime() + mntR * 1000 * 60).format('DD MMM YY hh:mm:ss a');
                        $('#spnRech').html('<h1 class="task_sec">Task Completed!</h1><p class="task_para_sec">New Hit will be in <span class="text-success" >' + time +'</span> !</p>');
                        mntR = mntR < 5 ? (1000 * 60) : (mntR * 1000 * 60);
                        if ($('#hdnStsRech').val() == "0") {
                            setTimeout(function () { RechPendings(); }, mntR);
                        }
                    });
            }
        }

        
    </script>
}