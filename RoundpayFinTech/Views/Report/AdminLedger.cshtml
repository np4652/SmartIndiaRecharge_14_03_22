@using RoundpayFinTech.AppCode.StaticModel;
@using Fintech.AppCode.StaticModel;
@model LedgerReportModel
@{
    ViewData["Title"] = "AdminLedger";
}
<div aria-label="breadcrumb" class="breadcrumb" id="page-header">
    <div class="container-fluid">
        <h5 class="float-left"><i class="fa fa-users"></i> Admin Ledger</h5>
        <ol class="breadcrumb float-right">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item">Admin Report</li>
            <li class="breadcrumb-item active">Admin Ledger</li>
        </ol>
    </div>
</div>
<div class="__p main-temp-body">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card mt-4">
                    <div class="card-header bg-gradientorange text-white">
                        <i class="fas fa-link"></i> Admin Ledger
                    </div>

                    <div class="card-body" style="">
                        <div class="row">
                            <div class="col-md-3 col-sm-3 col-xs-3">
                                <div class="form-group">
                                    <label class="lbl" for="ddlTop">Choose for top records</label>
                                    <select id="ddlTop" tabindex="1" class="form-control">
                                        <option value="50">50</option>
                                        <option value="100">100</option>
                                        <option value="200">200</option>
                                        <option value="500">500</option>
                                        <option value="1000">1000</option>
                                        <option value="1500">1500</option>
                                        <option value="2000">2000</option>
                                        <option value="2500">2500</option>
                                        <option value="3000">3000</option>
                                        <option value="4000">4000</option>
                                        <option value="5000">ALL</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-3 col-sm-3 col-xs-3">
                                <div class="form-group">
                                    <label class="lbl" for="ddlType">Choose Credit/Debit</label>
                                    <select id="ddlType" tabindex="2" class="form-control">
                                        <option value="-1"> :: Select Type :: </option>
                                        <option value="0">Credit</option>
                                        <option value="1">Debit</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-3 col-sm-3 col-xs-3">
                                <div class="form-group">
                                    <label class="lbl" for="dtFromDate">From Date</label>
                                    <input aria-describedby="dtFromDate" class="form-control" id="dtFromDate" tabindex="3" type="text" readonly="readonly">
                                    <small id="dtFromDate" class="form-text text-muted d-none"></small>
                                </div>
                            </div>
                            <div class="col-md-3 col-sm-3 col-xs-3">
                                <div class="form-group">
                                    <label class="lbl" for="dtToDate">To Date</label>
                                    <input aria-describedby="dtToDate" class="form-control" id="dtToDate" tabindex="4" type="text" readonly="readonly">
                                    <small id="dtToDate" class="form-text text-muted d-none"></small>
                                </div>
                            </div>
                            <div class="col-md-3 col-sm-3 col-xs-3">
                                <div class="form-group">
                                    <label class="lbl" for="ddlServices">Choose Services</label>
                                    <select id="ddlServices" tabindex="5" class="form-control">
                                        <option value="-1"> :: Select Services :: </option>
                                        <option value="@ServiceType.AddWallet">Add Wallet</option>
                                        <option value="@ServiceType.FundTransfer">Fund Transfer</option>
                                        <option value="@ServiceType.FundDeduction">Fund Deduction</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-3 col-sm-3 col-xs-3">
                                <div class="form-group">
                                    <label class="lbl" for="ddlCriteria">Choose Criteria</label>
                                    <select id="ddlCriteria" tabindex="6" class="form-control">
                                        <option value="0">:: Select Criteria :: </option>
                                        @if (Model.IsAdmin)
                                        {
                                            <option value="@Criteria.UserID">UserID</option>
                                            <option value="@Criteria.CCID">Customerare ID</option>
                                            <option value="@Criteria.CCMobileNo">Customercare MobileNo</option>
                                        }
                                        <option value="@Criteria.OutletMobile">Outlet Mobile</option>
                                        <option value="@Criteria.TransactionID">Transaction ID</option>
                                        <option value="@Criteria.UTR">UTR No</option>

                                    </select>
                                </div>
                            </div>
                            <div class="col-md-3 col-sm-3 col-xs-3">
                                <div class="form-group">
                                    <label class="lbl" for="txtSearch">Select Criteria</label>
                                    <input aria-describedby="txtSearchH" class="form-control" id="txtSearch" name="txtSearch" placeholder="Enter Search" tabindex="7" type="text" value="">
                                    <small id="txtSearchH" class="form-text text-muted d-none"></small>
                                </div>
                            </div>

                            <div class="col-md-3 col-sm-3 col-xs-3">
                                <div class="form-group">
                                    <label class="lbl" for="ddlWType">Wallet Type</label>
                                    <div class="input-group">
                                        <select aria-describedby="helpddlWType" class="form-control" id="ddlWType">
                                            <option value="0"> :: Choose Wallet ::</option>
                                            <option value="@Wallet.Prepaid"> @Wallet._Prepaid </option>
                                            @if (Model.userBalnace.IsUBalance)
                                            {
                                                <option value="@Wallet.Utility"> @Wallet._Utility </option>
                                            }
                                            @if (Model.userBalnace.IsCBalance)
                                            {
                                                <option value="@Wallet.Card"> @Wallet._Card </option>
                                            }
                                            @if (Model.userBalnace.IsIDBalance)
                                            {
                                                <option value="@Wallet.RegID"> @Wallet._RegID </option>
                                            }
                                            @if (Model.userBalnace.IsPacakgeBalance)
                                            {
                                                <option value="@Wallet.Package"> @Wallet._Package </option>
                                            }
                                        </select>
                                        <div class="input-group-append">
                                            <button id="btnSearch" tabindex="8" class="btn btn-outline-dark" style="border-bottom-right-radius: 0;border-top-right-radius: 0;">Search</button>

                                            <span class="btn btn-success far fa-file-excel" style="font-size:20px;" id="btnExport"></span>
                                        </div>
                                    </div>
                                    <small id="Small1" class="form-text text-muted d-none"></small>
                                    <input type="hidden" id="hidTrID" value="" class="d-none" />
                                </div>
                            </div>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped table-responsive-sm" id="tblAdminLedgers">
                                <thead class="bg-tableth">
                                    <tr>
                                        <th scope="col" style="width:5%">#</th>
                                        <th scope="col" style="width:10%;">Transaction ID	</th>
                                        <th scope="col" style="width:10%;">Date Time	</th>
                                        <th scope="col" class="w-25"> Description</th>
                                        <th scope="col" class="w-25"> Role</th>
                                        <th scope="col" class="text-right" style="width:10%;">Old(<i class="fas fa-rupee-sign"></i>)</th>
                                        <th scope="col" class="text-right" style="width:10%;">Debit(<i class="fas fa-rupee-sign"></i>)</th>
                                        <th scope="col" class="text-right" style="width:10%;">Credit(<i class="fas fa-rupee-sign"></i>)</th>
                                        <th scope="col" class="text-right" style="width:10%;">Current(<i class="fas fa-rupee-sign"></i>)</th>
                                        <th scope="col">WalletType</th>
                                        <th scope="col" style="width:10%;">UTR No.</th>
                                        <th scope="col" style="width:10%;">Bank Name</th>
                                        <th scope="col" style="width:10%;">Remark</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/lib/jquery/dist/moment.min.js"></script>
    <script src="~/lib/bootstrap/calendar/datepicker/js/bootstrap-datetimepicker.min.js"></script>
    <script src="~/js/datepickerHelper.js"></script>
    <script>
        $(document).ready(function () {
            var FDate = DTPicker($('#dtFromDate'), new Date().toDateString(), function () { }, function () {
                $('dp').addClass('d-none');
                var fdate = new Date($('#dtFromDate').val()), fy = fdate.getFullYear(), fm = fdate.getMonth();
                var lastDay_f = new Date(fy, fm + 1, 0);

                var tdate = new Date($('#dtToDate').val()), ty = tdate.getFullYear(), tm = tdate.getMonth();

                if (fdate > tdate) {
                    $('#dtToDate').val($('#dtFromDate').val());
                } else {
                    if (fy == ty) {
                        var curDate = new Date(moment(new Date()).format('D MMM YYYY')), cm = curDate.getMonth();
                        if (cm == fm) {
                            if (curDate == fdate && fdate != tdate) {
                                $('#dtToDate').val(moment(curDate).format('D MMM YYYY'));
                            } else if (fdate < curDate) {
                                curDate = curDate.setDate(curDate.getDate() - 1)
                                $('#dtToDate').val(moment(curDate).format('D MMM YYYY'));
                            }
                        }
                        else if (tm > fm) {
                            $('#dtToDate').val(moment(lastDay_f).format('D MMM YYYY'));
                        }
                    } else if (fy < ty) {
                        $('#dtToDate').val(moment(lastDay_f).format('D MMM YYYY'));
                    }
                }
            });
            var TDate = DTPicker($('#dtToDate'), new Date().toDateString(), function () { }, function () {
                $('dp').addClass('d-none');
                var fdate = new Date($('#dtFromDate').val()), fy = fdate.getFullYear(), fm = fdate.getMonth();

                var tdate = new Date($('#dtToDate').val()), ty = tdate.getFullYear(), tm = tdate.getMonth();
                var firstDay_t = new Date(ty, tm, 1);

                var curDate = new Date(moment(new Date()).format('D MMM YYYY'));

                if (curDate.toString() == tdate.toString()) {
                    $('#dtFromDate').val(moment(curDate).format('D MMM YYYY'));
                }
                else if (fdate > tdate) {
                    $('#dtFromDate').val($('#dtToDate').val());
                } else {
                    if (fy == ty) {
                        if (tm > fm) {
                            $('#dtFromDate').val(moment(firstDay_t).format('D MMM YYYY'));
                        }
                    } else if (fy < ty) {
                        $('#dtFromDate').val(moment(firstDay_t).format('D MMM YYYY'));
                    }
                }
            });
            $('#ddlCriteria').change(function () {
                $('label[for=txtSearch]').html("Select Criteria");
                if ($(this)[0].selectedIndex > 0) {
                    $('label[for=txtSearch]').html('Enter ' + $('#ddlCriteria :selected').text());
                }
            });
            var search = function (sender) {
                var ALedgerReportFilter = {
                    DebitCredit_F: $("#ddlType").val(),
                    Service_F: $("#ddlServices").val(),
                    FromDate_F: $("#dtFromDate").val(),
                    ToDate_F: $("#dtToDate").val(),
                    TopRows: $("#ddlTop").val(),
                    Criteria: $('#ddlCriteria').val(),
                    CriteriaText: $('#txtSearch').val(),
                    WalletTypeID: parseInt($('#ddlWType').val().trim())
                };
                var IsExport = sender.id.indexOf('Export') > -1 || parseInt($('#ddlTop').val()) > 4000 ? true : false
                if (IsExport) {
                    window.location = "/Admin-Ledger?" + $.param(ALedgerReportFilter);
                }
                else {
                    preloader.load();
                    btnLdr.addClass = 'btn-dark';
                    btnLdr.removeClass = 'btn-outline-dark';
                    btnLdr.Start($("#btnSearch"), 'Requesting');
                    $.ajax({
                        type: 'POST',
                        url: '/Admin-Ledger',
                        contentType: 'application/json',
                        data: JSON.stringify(ALedgerReportFilter),
                        success: function (result) {
                            $('.__p tbody').html(result);
                        },
                        statusCode: {
                            500: function () {
                                an.title = 'Oops';
                                an.content = 'Server error';
                                an.alert(an.type.failed);
                            },
                            0: function () {
                                an.title = 'Oops';
                                an.content = 'Internet Connection was broken';
                                an.alert(an.type.failed);
                            }
                        },
                        error: function (xhr, result) {
                            an.title = "Oops";
                            an.content = result;
                            an.alert(a.type.failed);
                            if (result === 'parsererror') {
                                reload();
                            }
                        },
                        complete: function () {
                            btnLdr.Stop($("#btnSearch"));
                            preloader.remove();
                        }
                    });
                }
            };
            $("#btnSearch,#btnExport").click(function () {
                search(this);
            });
            $("#btnSearch").click();
        });

    </script>


}

