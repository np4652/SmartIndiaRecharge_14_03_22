@{
    ViewData["Title"] = "Circle Blocking";
}
<div aria-label="breadcrumb" class="breadcrumb" id="page-header">
    <div class="container-fluid">
        <h5 class="float-left"><i class="fa fa-users"></i> @ViewData["Title"]</h5>
        <ol class="breadcrumb float-right">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item">API Management</li>
            <li class="breadcrumb-item active">@ViewData["Title"]</li>
        </ol>
    </div>
</div>
<div id="__p" class="main-temp-body">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card mt-4">
                    <div class="card-header bg-gradientorange text-white">
                        <i class="fas fa-link"></i> @ViewData["Title"]
                    </div>

                    <div class="card-body" style="">
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped table-responsive-sm">
                                <thead class="bg-tableth">
                                    <tr>
                                        <th scope="col" style="width:1%;">#</th>
                                        <th scope="col" style="width:15%;">Operator</th>
                                        <th scope="col" style="width:80%">Circle List</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@if (ApplicationSetting.IsCircleSlabShow)
{
    @section scripts{
        <script>
            $(document).ready(function () {
                preloader.load();
                $.post('/circle-blocked', {})
                    .done(function (result) {
                        an.remove();
                        $('#__p tbody').html(result);
                        $('[id^=chbCircle]').change(function () {
                            var oid = 0, circleid = 0, isactive = false;
                            var lbl = $('label[for="' + this.id + '"]')
                            oid = $(this).closest('tr').data().itemId;
                            circleid = this.id.split('_')[2];
                            isactive = $(this).is(':checked');
                            var Circle = { ID: circleid, OID: oid, IsActive: isactive }
                            preloader.load();
                            $.ajax({
                                type: 'POST',
                                url: '/csb',
                                dataType: 'json',
                                contentType: 'application/json',
                                data: JSON.stringify(Circle),
                                success: function (result) {
                                    if (result.statuscode == an.type.failed) {
                                        an.title = "Oops";
                                        an.content = result.msg;
                                        an.alert(result.statuscode);
                                        lbl.addClass('is-invalid');
                                    }
                                    else if (result.statuscode == an.type.success) {
                                        an.title = "Well done";
                                        an.content = result.msg;
                                        an.alert(result.statuscode);
                                        lbl.addClass('is-valid');
                                    }
                                },
                                statusCode: {
                                    500: function () {
                                        an.title = 'Oops';
                                        an.content = 'Server error';
                                        an.alert(an.type.failed);
                                    },
                                    0: function () {
                                        an.title = 'Oops';
                                        an.content = 'Internet Connection was broken';
                                        an.alert(an.type.failed);
                                    }
                                },
                                error: function (result) {
                                    checkError(result);
                                    an.title = 'Oops';
                                    an.content = 'An error occured!';
                                    an.alert(an.type.failed);
                                },
                                complete: function () {
                                    preloader.remove();
                                }
                            });
                        });
                    }).catch(function (xhr, e, m) {

                    }).fail(function (xhr) {
                        $(this).attr('checked', Is == false);
                        if (xhr.status == 500) {
                            an.title = 'Oops';
                            an.content = 'Server error';
                            an.alert(an.type.failed);
                        }
                        if (xhr.status == 0) {
                            an.title = 'Oops';
                            an.content = 'Internet Connection was broken';
                            an.alert(an.type.failed);
                        }
                    })
                    .always(function () {
                        preloader.remove();
                    });
            });
        </script>
    }
}



