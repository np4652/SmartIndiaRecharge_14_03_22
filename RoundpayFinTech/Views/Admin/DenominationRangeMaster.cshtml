@model int
@{
//ViewData["Title"] = "Denomination Range Master";
}
<div aria-label="breadcrumb" class="breadcrumb" id="page-header">
    <div class="container-fluid">
        <h5 class="float-left"><i class="fa fa-users"></i> Denomination Range Master</h5>
        <ol class="breadcrumb float-right">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item">Setting</li>
            <li class="breadcrumb-item active">Denomination Range Master</li>
        </ol>
    </div>
</div>
<div id="__p" class="main-temp-body">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card mt-4">
                    <div class="card-header bg-gradientorange text-white">
                        <i class="fas fa-link"></i> Denomination Range Master
                        @if (Model == 1)
                        {
                            <div class="float-right">  <button id="btnNew" class="btn btn-default btn-sm btnNew">New</button></div>
                        }
                    </div>
                    <div class="card-body" style="">
                        <div class="row mb-1 form-group">
                            <div class="col-md-4 col-sm-4 col-xs-4">
                                <input id="txtSearch" class="form-control text-left" placeholder="Search" />
                            </div>

                        </div>
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped table-responsive-sm" id="tblDetail">
                                <thead class="bg-tableth">
                                    <tr>
                                        <th scope="col">#</th>
                                        @if (Model == 1)
                                        {
                                            <th scope="col">Actions</th>
                                        }
                                        <th scope="col">Min Value</th>
                                        <th scope="col">Max Value</th>
                                        <th scope="col">Last Updated On</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        var  Model = @Model;;
        $(document).ready(function () {
            an.id = 'alretID';
            an.autoClose = 5;
            setTimeout(function () {
                $('#txtSearch').focus();
                $("#txtSearch").on("keyup", function () {
                    var value = $(this).val().toLowerCase();
                    $('#tblDetail tbody tr').filter(function () {
                        $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                    });
                });
            }, 500);
            loadGrid();
        });

        var loadGrid = function () {
            preloader.load();
            $.post('/DenominationRange-Master')
                .done(function (result) {
                    $('#__p tbody').html(result);
                    $(".dropdown-toggle").dropdown();
                    $('#btnNew,tr div.dropdown-menu a.dropdown-item').on('click', function () {
                        editAdd(this);
                    })
                }).always(function () {
                    preloader.remove();
                });
        }

        var editAdd = function (sender) {
            var id = 0, IsDel = 0;
            if ($(sender).text() === 'Edit' || $(sender).text() === 'New' || $(sender).text() === 'Delete') {
                if ($(sender).text() === 'Edit') {
                    id = $(sender).closest('tr').data().itemId;
                }
                if ($(sender).text() === 'Delete') {
                    id = $(sender).closest('tr').data().itemId;
                    IsDel = 1;
                    submit(id,IsDel);
                    return
                }
                $.post('/DenominationRange-Edit/' + id)
                    .done(function (result) {
                        resultReload(result);
                        mdlA.content = result;
                        mdlA.id = 'mymodal';
                        mdlA.options.backdrop = 'static';
                        mdlA.alert(mdlA.size.default);
                        $('button.close span,#mdlCancel').unbind().click(function () {
                            mdlA.dispose();
                        });

                        $('#btnErrDetails').on('click', function () {
                            submit();
                        })
                    })
                    .catch(function (xhr, e, msg) {

                    })
                    .fail(function () {
                        $(this).attr('checked', Is == false);
                        if (xhr.status == 500) {
                            an.title = 'Oops';
                            an.content = 'Server error';
                            an.alert(an.type.failed);
                        }
                        if (xhr.status == 0) {
                            an.title = 'Oops';
                            an.content = 'Internet Connection was broken';
                            an.alert(an.type.failed);
                        }
                    })
                    .always(function () {
                        preloader.remove();
                    });
            }
        }

        var submit = function (id = 0, IsDel = 0) {
            id = IsDel == 1 ? id : $('#hid').val();
            var EM = { ID: id, Min: $('#txtMin').val(), Max: $('#txtMax').val(), IsDel: IsDel}
            preloader.load();
            $.ajax({
                type: 'POST',
                url: '/DenominationRange-Edit',
                data: JSON.stringify(EM),
                dataType: 'json',
                contentType: 'application/json',
                success: function (result) {
                    resultReload(result);
                    an.title = result.statuscode == an.type.success ? 'Success' : 'Oops';
                    an.content = result.msg;
                    an.alert(result.statuscode);
                    if (result.statuscode == an.type.success) {
                        mdlA.dispose();
                        loadGrid();
                    }
                },
                statusCode: {
                    500: function () {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    },
                    0: function () {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                },
                error: function (xhr, result, msg) {
                    an.title = "Oops";
                    an.content = msg;
                    an.alert(an.type.failed);
                    if (result === 'parsererror') {
                        rel(1);
                    }
                },
                complete: function () {
                    preloader.remove();
                }
            }).always(function () {
                preloader.remove();
            });
        }

    </script>
}

