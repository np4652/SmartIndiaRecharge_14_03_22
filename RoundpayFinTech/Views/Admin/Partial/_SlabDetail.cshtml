@model RoundpayFinTech.AppCode.Model.ProcModel.SlabDetailModel
@{
    var mdl = Model.SlabDetails;
    var mdlParent = Model.ParentSlabDetails;
}

<div class="row">    
    <div class="col-md-12">
        <button type="button" class="close" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <h5 class="text-info">Commission Detail hello</h5><hr />
    </div>
    <div class="col-sm-4">
        @{
            var Oplist = new SelectList(Model.OpTypes, "ID", "OpType");
            var OpTypeID = @Model.OpTypeID == 0 ? 1 : @Model.OpTypeID;
        }
        <select id="ddlOType" class="form-control" asp-items="@Oplist" asp-for="@OpTypeID">
            <option value="">:: Operator Type ::</option>
        </select>
    </div>
    <div class="col-sm-4">
        <input class="form-control" id="txtSearchRSD" type="text" placeholder="Search" />
    </div>
    <div class="col-sm-4">
        <div class="input-group">
            <input type="text" id="txtAmtForAll" class="form-control" value="0" />
            <div class="input-group-append" id="btnComTypeForAll">
                <div class="btn-group btn-toggle">
                    <button class="btn btn-sm btn-dark active" style="border-radius:0">C</button>
                    <button class="btn btn-sm btn-outline-dark" style="border-radius:0">S</button>
                </div>
                <div class="btn-group btn-toggle" id="btnAmtTypeForAll">
                    <button class="btn btn-sm btn-dark active" style="border-radius:0">P</button>
                    <button class="btn btn-sm btn-outline-dark" style="border-radius:0">F</button>
                </div>
            </div>
            <div class="input-group-append">
                <button class="btn btn-sm btn-success text-monospace" id="btnSetAll">SET</button>
            </div>
        </div>
    </div>
    <div class="col-sm-12 table-responsive">
        <table class="table table-bordered table-striped table-responsive-sm" id="tblRSD">
            <thead class="bg-tableth">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col" style="width:29%">
                        Operator
                    </th>
                    <th scope="col" style="width: 12%;">CommAmt</th>
                    <th scope="col">CommType/AmtType</th>
                    @*Real Slab Colums*@
                    <th scope="col" style="width: 12%;">CommAmt</th>
                    <th scope="col">CommType/AmtType</th>
                </tr>
                <tr>
                    <th colspan="2" class="pb-1">
                        
                    </th>
                    <th colspan="2" class="pb-1 text-center text-uppercase">
                        <h6 class="text-info">Genral Slab</h6>
                    </th>
                    <th colspan="2" class="pb-1 text-center text-uppercase">
                        <h6 class="text-info">Real Slab</h6>
                    </th>
                </tr>
            </thead>
            <tbody>
                @{int i = 1; }
                @foreach (var item in mdl)
                {
                    if (Model.IsChannel)
                    {
                        <tr data-item-id="@item.OID">
                            <th style="width:1em;" scope="row" class="align-middle">@i</th>
                            <td style="width:25em;" class="align-middle">
                                <input type="hidden" id="hid" value="@item.SlabID" class="d-none" />
                                @Html.DisplayFor(modelItem => item.Operator)
                                <small id="nameHelp" class="form-text text-muted mt-0" style="font-size:70%">
                                    @Html.Raw(item.IsBBPS ? item.OperatorType + ", BBPS" : item.OperatorType)
                                </small>
                            </td>
                            @{
                                var parentItem = mdlParent.Where(x => x.OID == item.OID && x.SlabID == item.SlabID).FirstOrDefault();
                            }
                            <td colspan="2" style="width:20em;" class="align-middle">
                                <div class="form-inline">
                                    @Html.TextBoxFor(modelItem => item.Comm, new { @id = "txtComAmt_" + i, @class = " text-right", @placeholder = "0.0", @style = "padding-right:2px;width:55%;", @aria_describedby = "helpComAmt_" + i })
                                    <i class="fas fa-info-circle ml-1 text-muted cursor-pointer" data-toggle="tooltip" data-placement="top" title="Last Modified: @item.ModifyDate">&nbsp;&nbsp;</i>
                                    @Html.HiddenFor(modelItem => item.Comm, new { @id = "hidComAmt" + i, @class = " text-right", @placeholder = "0.0", @style = "padding-right:2px;width:5em;" })
                                    <small id="helpComAmt_@i" class="form-text text-danger mt-0 d-none" style="font-size:70%">
                                        error
                                    </small>
                                    <div class="btn-group btn-group-sm">
                                        <span class="btn btn-sm btn-dark active">
                                            @Html.Raw(parentItem.CommType == 0 ? "COM" : "SUR")
                                        </span>
                                    </div>
                                    <div class="btn-group btn-group-sm">
                                        <span class="btn btn-sm btn-dark active">
                                            @Html.Raw(parentItem.AmtType == 0 ? "PER" : "FIX")
                                        </span>
                                    </div>
                                    <small id="helpPComAmt_@i" class="mt-0 text-right text-monospace">
                                        @parentItem.Comm (Received)
                                    </small>
                                </div>
                            </td>
                            <td colspan="2" style="width:20em;">
                                <div class="form-inline">
                                    @Html.TextBoxFor(modelItem => item.RComm, new { @id = "txtRComAmt_" + i, @class = " text-right", @placeholder = "0.0", @style = "padding-right:2px;width:55%;", @aria_describedby = "helpRComAmt_" + i })
                                    <i class="fas fa-info-circle ml-1 text-muted cursor-pointer" data-toggle="tooltip" data-placement="top" title="Last Modified: @item.ModifyDate">&nbsp;&nbsp;</i>
                                    @Html.HiddenFor(modelItem => item.RComm, new { @id = "hidRComAmt" + i, @class = " text-right", @placeholder = "0.0", @style = "padding-right:2px;width:5em;" })
                                    <small id="helpRComAmt_@i" class="form-text text-danger mt-0 d-none" style="font-size:70%">
                                        error
                                    </small>
                                    <div class="btn-group btn-group-sm">
                                        <span class="btn btn-sm btn-dark active">
                                            @Html.Raw(parentItem.RCommType == 0 ? "COM" : "SUR")
                                        </span>
                                    </div>
                                    <div class="btn-group btn-group-sm">
                                        <span class="btn btn-sm btn-dark active">
                                            @Html.Raw(parentItem.RAmtType == 0 ? "PER" : "FIX")
                                        </span>
                                    </div>
                                    <small id="helpRComAmt_@i" class="mt-0 text-right text-monospace">
                                        @parentItem.RComm (Received)
                                    </small>
                                </div>
                            </td>
                        </tr>
                        i++;
                    }
                    else
                    {
                        <tr data-item-id="@item.OID">
                            <th style="width:1em;" scope="row">@i</th>
                            <td style="width:25em;">
                                <input type="hidden" id="hid" value="@item.SlabID" class="d-none" />
                                @Html.DisplayFor(modelItem => item.Operator)
                                <small id="nameHelp" class="form-text text-muted mt-0" style="font-size:70%">@Html.Raw(item.IsBBPS ? item.OperatorType + ", BBPS" : item.OperatorType)</small>
                            </td>
                            <td style="width:20em;">
                                <div class="form-inline">
                                    @Html.TextBoxFor(modelItem => item.Comm, new { @id = "txtComAmt_" + i, @class = " text-right", @placeholder = "0.0", @style = "padding-right:2px;width:5em;", @aria_describedby = "helpComAmt_" + i })
                                    <i class="fas fa-info-circle ml-1 text-muted cursor-pointer" data-toggle="tooltip" data-placement="top" title="Last Modified: @item.ModifyDate"></i>
                                    @Html.HiddenFor(modelItem => item.Comm, new { @id = "hidComAmt" + i, @class = " text-right", @placeholder = "0.0", @style = "padding-right:2px;width:5em;" })
                                </div>
                                <small id="helpComAmt_@i" class="form-text text-danger mt-0 d-none" style="font-size:70%">error</small>
                            </td>
                            <td>
                                <div class="btn-group btn-group-sm btn-toggle" id="btnGroupComType_@i">
                                    <button class="btn btn-sm @Html.Raw(item.CommType==0?"btn-dark active":"btn-outline-dark")">COM</button>
                                    <button class="btn btn-sm @Html.Raw(item.CommType==1?"btn-dark active":"btn-outline-dark")">SUR</button>
                                </div>

                                <div class="btn-group btn-group-sm btn-toggle" id="btnGroupAmtType_@i">
                                    <button class="btn btn-sm @Html.Raw(item.AmtType==0?"btn-dark active":"btn-outline-dark")">PER</button>
                                    <button class="btn btn-sm @Html.Raw(item.AmtType==1?"btn-dark active":"btn-outline-dark")">FIX</button>
                                </div>
                            </td>
                            @*Real Slab Columns*@
                            <td style="width:20em;">
                                <div class="form-inline">
                                    @Html.TextBoxFor(modelItem => item.RComm, new { @id = "txtRComAmt_" + i, @class = " text-right", @placeholder = "0.0", @style = "padding-right:2px;width:5em;", @aria_describedby = "helpRComAmt_" + i })
                                    <i class="fas fa-info-circle ml-1 text-muted cursor-pointer" data-toggle="tooltip" data-placement="top" title="Last Modified: @item.ModifyDate"></i>
                                    @Html.HiddenFor(modelItem => item.RComm, new { @id = "hidRComAmt" + i, @class = " text-right", @placeholder = "0.0", @style = "padding-right:2px;width:5em;" })
                                </div>
                                <small id="helpRComAmt_@i" class="form-text text-danger mt-0 d-none" style="font-size:70%">error</small>
                            </td>
                            <td>
                                <div class="btn-group btn-group-sm btn-toggle" id="btnGroupRComType_@i">
                                    <button class="btn btn-sm @Html.Raw(item.RCommType==0?"btn-dark active":"btn-outline-dark")">COM</button>
                                    <button class="btn btn-sm @Html.Raw(item.RCommType==1?"btn-dark active":"btn-outline-dark")">SUR</button>
                                </div>

                                <div class="btn-group btn-group-sm btn-toggle" id="btnGroupRAmtType_@i">
                                    <button class="btn btn-sm @Html.Raw(item.RAmtType==0?"btn-dark active":"btn-outline-dark")">PER</button>
                                    <button class="btn btn-sm @Html.Raw(item.RAmtType==1?"btn-dark active":"btn-outline-dark")">FIX</button>
                                </div>
                            </td>
                        </tr>
                        i++;
                    }
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    (() => $('#ddlOType').unbind().on('change', () => loadPartial(@Model.SlabID)))();

    (() => {
        $('#txtAmtForAll').keydown((e) => {
            var k = e.which;
            if (k == 110 || k == 46 || k == 17 || k == 123 || k == 18 || k == 116 || k == 8) {
                return true
            }
            else if ((k < 48 || k > 57) && (k < 96 || k > 105)) {
                e.preventDefault();
                return false;
            }
        })
    })();

    (() => { $('#btnSetAll').on('click', () => {
            if ($('#txtAmtForAll').val() == '' || $('#txtAmtForAll').val() == undefined) {
                $('#txtAmtForAll').focus();
                return false
        }
        const trCount = $('#tblRSD tbody tr').length;
        $('#tblRSD tbody tr').each(function (i) {
            console.log($(this).data().itemId);
                var param = {
                    OID: parseInt($(this).data().itemId),
                    SlabID: parseInt($('#hid').val()),
                    Comm: parseFloat($('#txtAmtForAll').val()),
                    CommType: $('#btnComTypeForAll button.active').text()[0] === 'S' ? 1 : 0,
                    AmtType: $('#btnAmtTypeForAll button.active').text()[0] === 'F' ? 1 : 0,
                    //RComm: parseFloat(Rcomm),
                    //RCommType: RcommType === 'S' ? 1 : 0,
                    //RAmtType: RamtType === 'F' ? 1 : 0,
                    RoleID: parseInt(0)
            }
                _updateBulkCommision(param);
            if (trCount == (i + 1)) {
                $('button.close span,#mdlCancel').click();
            }
            });
    })
    })();

</script>