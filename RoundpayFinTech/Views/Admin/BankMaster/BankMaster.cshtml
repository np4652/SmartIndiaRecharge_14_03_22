@{
    ViewData["Title"] = "BankMaster";
}

<div aria-label="breadcrumb" class="breadcrumb" id="page-header">
    <div class="container-fluid">
        <h5 class="float-left"><i class="fa fa-users"></i> @ViewData["Title"]</h5>
        <ol class="breadcrumb float-right">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item">Setting</li>
            <li class="breadcrumb-item active">Bank Master</li>
        </ol>
    </div>
</div>
<div class="main-temp-body">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card mt-2">
                    <div class="card-header bg-gradientorange text-white">
                        <div class="row">
                            <div class="col-sm-7 line-height-34">
                                <i class="fas fa-link"></i> Bank Master
                            </div>
                            <div class="col-md-5 col-sm-5 col-xs-5">
                                <div class="input-group">
                                    <input id="txtSearch" maxlength="10" class="form-control text-left" aria-describedby="helpSearch" placeholder="Search Bank/IFSC/Branch" />
                                    <small id="helpSearch" class="form-text text-danger d-none"></small>
                                    <div class="input-group-append">
                                        <button id="btnNew" class="btn btn-default font-bold btn-sm pl-3 pr-3">NEW</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped" id="tblBankMaster">
                                <thead class="bg-tableth">
                                    <tr>
                                        <th scope="col" style="width:1%;">#</th>
                                        <th scope="col" style="width:4%;">Action</th>
                                        <th scope="col" style="width:30%;">BankName</th>
                                        <th scope="col" style="width:20%;">BranchName</th>
                                        <th scope="col" style="width:15%;">AccountHolder</th>
                                        <th scope="col" style="width:5%;">AccountNumber</th>
                                        <th scope="col" style="width:5%;">IfscCode</th>
                                        <th scope="col" style="width:5%;">Billing Info</th>
                                        <th scope="col" style="width:10%;">BankLogo</th>
                                        <th scope="col" style="width:10%;">BankQR</th>
                                        <th scope="col" style="width:10%;">OnWebsite</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>
        $(document).ready(function () {
            darkAnimBtn($('#btnNew'));
            _load();
        });

        $(document).on('click', '#chbIsbankLogo', function (e) {
            if ($('#chbIsbankLogo').is(':checked')) {
                $('#showQRCode').removeClass('d-none');
                if ($('#BankQR img').index() == -1) {
                    $('#BankQR').html('<img src="../../image/BankQR/DefultQR.png" style="width:171px">')
                }
                else {
                    $('#BankQR img').show();
                }
            }
            else {
                $('#showQRCode').addClass('d-none');
                $('#BankQR img').hide();
            }
        });

        var _togglebtnUpload = function () {
            if ($('#BankQR img').index() > -1) {
                $('#showQRCode').removeClass('d-none');
            }
        }
        
        var _load = function () {
            preloader.load();
            $.post('/bm-lst')
                .done(function (result) {
                    $('#tblBankMaster tbody').html(result);
                    $(".dropdown-toggle").dropdown();
                    setTimeout(function () {
                        $('#txtSearch').focus();
                        $(".dropdown-toggle").dropdown();
                        $("#txtSearch").on("keyup", function () {
                            var value = $(this).val().toLowerCase();
                            $('#tblBankMaster tbody tr').filter(function () {
                                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                            });
                        });
                    }, 500);
                    an.autoClose = 5;
                    $('#btnNew,tr div.dropdown-menu a.dropdown-item').click(function () {
                        if ($.inArray($(this).text(), ['Edit', 'NEW', 'Delete']) < 0) {
                            return true;
                        }
                        var id = 0;
                        if ($.inArray($(this).text(), ['Edit', 'Delete']) > -1) {
                            id = $(this).closest('tr').data().itemId;
                        }
                        if ($.inArray($(this).text(), ['Edit', 'NEW']) > -1) {
                            preloader.load();
                            $.post('/bm-cu', { ID: id })
                                .done(function (result) {
                                    mdlA.id = 'bankmodel';
                                    mdlA.content = result;
                                    mdlA.alert(mdlA.size.large);
                                    $("#imageUpload").change(function () {
                                        readURL(this);
                                    });
                                    $("#imageUploadQR_").change(function () {
                                        readQRURL(this);
                                    });
                                    $('button.close span,#mdlCancel').click(() => mdlA.dispose());
                                    $('#chbIsCDM').on('change', () => ToggleCDMSection());
                                    $('#chbIsUPI').on('click', () => onUPIToggle());
                                    var ct = {
                                        ddlBnk: $('#ddlBankName'), txtBranch: $('#txtBranchName'), txtAcHold: $('#txtAccHolder'),
                                        txtAccNum: $('#txtAccNumber'), txtIFSC: $('#txtIFSC'), txtCharge: $('#txtCharges'),
                                        btn: $('#btnSave'), hidID: $('#hidID'), isLogo: $('#chbIsbankLogo'), IsNeft: $('#chbIsNeft'),
                                        IsThirdPartyTransfer: $('#chbIsThirdPartyTransfer'),
                                        IsCashDeposit: $('#chbIsCashDeposit'), IsGCC: $('#chbIsGCC'), IsCheck: $('#chbIsCheck'),
                                        IsScanPay: $('#chbIsScanPay'), IsUPI: $('#chbIsUPI'), IsExchange: $('#chbIsExchange'),
                                        txtUPINumber: $('#txtUpiNum'), IsVirtual: $('#chbIsVir'), Remark: $('#txtRemark'), cdm: $('#chbIsCDM'), txtCDMCharge: $('#txtCDMCharges'),
                                    }
                                    ct.ddlBnk.change(() => setImg($('#ddlBankName :selected').val()));
                                    an.autoClose = 5;
                                    var btnTxt = ct.btn.html();
                                    ct.btn.click(function () {
                                        if (btnTxt !== ct.btn.html())
                                            return false;
                                        btnLdr.addClass = 'btn-dark';
                                        btnLdr.removeClass = 'btn-outline-dark';
                                        btnLdr.Start(ct.btn, ct.hidID.val() === '0' ? 'Saving...' : 'Updating...');
                                        var IsE = { ddlBnk: ct.ddlBnk.prop('selectedIndex') < 1, txtBranch: (ct.txtBranch.val().trim() === '' || ct.txtBranch.val().trim().length > 100), txtAcHold: ct.txtAcHold.val().trim() === '' || ct.txtAcHold.val().trim().length > 150, txtAccNum: ct.txtAccNum.val().trim() === '' || ct.txtAccNum.val().trim().length > 18, txtIFSC: (ct.txtIFSC.val().trim() === '' || ct.txtIFSC.val().trim().length !== 11) }
                                        $v.showErrorFor(ct.ddlBnk, 'Select Bank Name.', IsE.ddlBnk);
                                        $v.showErrorFor(ct.txtBranch, 'Enter valid branch name, length not more than 100.', IsE.txtBranch);
                                        $v.showErrorFor(ct.txtAcHold, 'Enter valid account holder name, length not more than 100.', IsE.txtAcHold);
                                        $v.showErrorFor(ct.txtAccNum, 'Enter valid account number, length not more than 18.', IsE.txtAccNum);
                                        $v.showErrorFor(ct.txtIFSC, 'Enter valid IFSC, length should be 11.', IsE.txtIFSC);
                                        IsE.err = (IsE.ddlBnk || IsE.txtBranch || IsE.txtAcHold || IsE.txtAccNum || IsE.txtIFSC)
                                        if (IsE.err) {
                                            btnLdr.Stop(ct.btn);
                                            return false;
                                        }

                                        var isbankLogoAvailable = IsAv;
                                        var Bank = {
                                            ID: ct.hidID.val(), BankID: ct.ddlBnk.val(), BranchName: ct.txtBranch.val(),
                                            AccountHolder: ct.txtAcHold.val(), AccountNo: ct.txtAccNum.val(),
                                            IFSCCode: ct.txtIFSC.val(), Charge: ct.txtCharge.val(),
                                            ISQRENABLE: ct.isLogo.is(':checked'), IsbankLogoAvailable: isbankLogoAvailable,
                                            NeftID: ct.IsNeft.closest('div').data().itemModeid, NeftStatus: ct.IsNeft.is(':checked'),
                                            ThirdPartyTransferID: ct.IsThirdPartyTransfer.closest('div').data().itemModeid,
                                            ThirdPartyTransferStatus: ct.IsThirdPartyTransfer.is(':checked'),
                                            CashDepositID: ct.IsCashDeposit.closest('div').data().itemModeid,
                                            CashDepositStatus: ct.IsCashDeposit.is(':checked'),
                                            GCCID: ct.IsGCC.closest('div').data().itemModeid,
                                            GCCStatus: ct.IsGCC.is(':checked'),
                                            ChequeID: ct.IsCheck.closest('div').data().itemModeid,
                                            ChequeStatus: ct.IsCheck.is(':checked'),
                                            ScanPayID: ct.IsScanPay.closest('div').data().itemModeid,
                                            ScanPayStatus: ct.IsScanPay.is(':checked'),
                                            UPIID: ct.IsUPI.closest('div').data().itemModeid,
                                            UPIStatus: ct.IsUPI.is(':checked'),
                                            ExchangeID: ct.IsExchange.closest('div').data().itemModeid,
                                            ExchangeStatus: ct.IsExchange.is(':checked'),
                                            UPINUmber: ct.txtUPINumber.val(),
                                            IsVirtual: ct.IsVirtual.is(':checked'),
                                            Remark: ct.Remark.val(),
                                            CDMID: ct.cdm.closest('div').data().itemModeid,
                                            CDM: ct.cdm.is(':checked'),
                                            CDMType: $("input:radio[name='rdoCDMType']:checked").val(), CDMCharges :  ct.txtCDMCharge.val()
                                        }
                                        if ($('#PreStatusofQR').val() == 0) {
                                            if ($('#imageUploadQR_').get(0).files.length === 0 && Bank.ISQRENABLE) {
                                                an.content = 'Please Select Bank QR !';
                                                an.alert(an.type.failed);
                                                btnLdr.Stop(ct.btn);
                                                return false;
                                            }
                                        }
                                        preloader.load();
                                        UploadFile(Bank)
                                    });
                                }).fail(xhr => {
                                    an.title = 'Oops';
                                    an.content = xhr.status == 0 ? 'Internet Connection was broken' : 'Server error';
                                    an.alert(an.type.failed);
                                }).always(() => preloader.remove());
                        }
                        else {
                            $.post('/remove-bank', { ID: id })
                                .done(result => {
                                    an.title = result.statuscode == an.type.success ? "Well done" : "Oops";
                                    an.content = result.msg;
                                    an.alert(result.statuscode);
                                    if (result.statuscode == an.type.success) {
                                        $('tr[data-item-id="' + id + '"]').remove();
                                    }
                                }).fail(xhr => {
                                    an.title = 'Oops';
                                    an.content = xhr.status == 0 ? 'Internet Connection was broken' : 'Server error';
                                    an.alert(an.type.failed);
                                }).always(() => preloader.remove());
                        }
                    });
                })
                .fail(xhr => {
                    an.title = 'Oops';
                    an.content = xhr.status == 0 ? 'Internet Connection was broken' : 'Server error';
                    an.alert(an.type.failed);
                })
                .always(() => preloader.remove());
        }

        var _SaveAndUpdate = function (Bank, result) {
            if (result != undefined) {
                Bank.RImageUrl = result.commonStr
            }
            else {
                var _QrName;
                if ($('#BankQR img').attr('src') != undefined) {
                    _QrName = $('#BankQR img').attr('src').split('/');
                    if (_QrName.length > 1) {
                        Bank.RImageUrl = _QrName[2];
                    }
                }
            }
            
            $.ajax({
                type: 'POST',
                url: '/add-bank',
                data: JSON.stringify(Bank),
                dataType: 'json',
                contentType: 'application/json',
                success: function (result) {
                    if (result.statuscode == an.type.success) {
                        if ($('#chbIsbankLogo').is(':checked')) {
                            preloader.remove();
                        }
                        mdlA.dispose(() => _load());
                    }
                    an.content = result.msg;
                    an.alert(result.statuscode);
                    preloader.remove();
                    btnLdr.Stop($('#btnSave'));
                },
                error: function (xhr, result) {
                    an.title = "Oops! Error";
                    an.content = xhr.status === 404 ? "Requested path not find" : (xhr.status === 0 ? "Internet is not connected" : "Server error");
                    an.alert(an.type.failed);
                    if (result === 'parsererror') {
                        reload();
                    }
                    btnLdr.Stop($('#btnSave'));
                    preloader.remove();
                }
            });
        };


        var readURL = function (input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    setImg('', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        var IsAv = 0;

        var setImg = function (name, url) {

            url = url === undefined ? '../../image/BankLogo/' + encodeURIComponent(name) + '.png' : url;
            isUrlExists(url, function (status) {
                console.log(url)
                if (status === 200) {
                    $('#imagePreview').attr('src', url).addClass('bank-icon');
                    IsAv=1
                }
                else if (status === 404) {

                    $('#imagePreview').attr('src', '../../image/BankLogo/' + encodeURIComponent('NO LOGO') + '.png');
                    IsAv=0

                }
            });
            $('#imagePreview').hide();
            $('#imagePreview').fadeIn(10);

        }

        var fileTypes = ['png'];

        var readQRURL = function (input) {
            if (input.files && input.files[0]) {
                var extension = input.files[0].name.split('.').pop().toLowerCase(),
                    isSuccess = fileTypes.indexOf(extension) > -1;
                if (isSuccess) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        setImgQR('', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
                else {
                    an.content = 'Only Png File Upload!';
                    an.alert(an.type.failed);
                }
            }
        }

        var setImgQR = function (name, url) {
            url = url === undefined ? '../../image/BankQR/' + encodeURIComponent(name) + '.png' : url;
            isUrlExists(url, function (status) {
                if (status === 200) {
                    $('#BankQR').html('<img src="' + url + '" style="width:171px;">');
                }
                else if (status === 404) {
                    $('#BankQR').html('<img src="../../image/BankQR/DefultQR.png" style="width:171px;">');
                }
            });
            $('#imagePreviewQR').hide();
            $('#imagePreviewQR').fadeIn(10);
        }

        var onUPIToggle = function () {
            if ($('#chbIsUPI').is(':checked')){
                $('div.UpiNum').removeClass('d-none');
            }
            else {
                $('div.UpiNum').addClass('d-none');
            }
        }

        var ToggleCDMSection = () => {
            if ($('#chbIsCDM').is(':checked')) {
                $('#dvCDM').removeClass('d-none');
                $('#dvCDMC').removeClass('d-none');
            }
            else {
                $('#dvCDM').addClass('d-none');
                $('#dvCDMC').addClass('d-none');
            }
        }

        function UploadFile(Bank) {
            var id = 'QR_' + Bank.BankID;
            if ($('#imageUploadQR_').val() != "" && $('#imageUploadQR_').val() != undefined) {
                var formData = new FormData();
                formData.append('file', $('#imageUploadQR_')[0].files[0]);
                formData.append('FileName', id);
                formData.append('PreStatusofQR', $('#PreStatusofQR').val());
                $.ajax({
                    type: 'POST',
                    url: '/upload-QRCode',
                    processData: false,
                    contentType: false,
                    data: formData,
                    success: function (result) {
                        if (result.statuscode === -1) {
                            an.title = 'Oops';
                            an.content = result.msg;
                            an.alert(an.type.failed);
                        } else {
                            _SaveAndUpdate(Bank, result);
                        }
                    },
                    statusCode: {
                        500: function () {
                            an.title = 'Oops';
                            an.content = 'Server error';
                            an.alert(an.type.failed);
                        },
                        0: function () {
                            an.title = 'Oops';
                            an.content = 'Internet Connection was broken';
                            an.alert(an.type.failed);
                        }
                    },
                    error: function (result) {
                        checkError(result);
                        an.title = 'Oops';
                        an.content = 'An error occured!';
                        an.alert(an.type.failed);
                    },
                    complete: function () {
                        preloader.remove();
                    }
                });
            }
            else {
                _SaveAndUpdate(Bank);
            }
        };
    </script>
}
