@using Fintech.AppCode.StaticModel
@using RoundpayFinTech.AppCode.StaticModel
@model UserListModel;
@{
    ViewData["Title"] = "User List";

}
<div aria-label="breadcrumb" class="breadcrumb" id="page-header">
    <div class="container-fluid">
        <h5 class="float-left"><i class="fa fa-users"></i> @ViewData["Title"]</h5>
        <ol class="breadcrumb float-right">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item">User Management</li>
            <li class="breadcrumb-item active">User List</li>
        </ol>
    </div>
</div>
<div id="__p" class="main-temp-body">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card mt-4">
                    <div class="card-header bg-gradientorange text-white">
                        <i class="fas fa-link"></i> User List
                    </div>

                    <div class="card-body" style="">
                        <div class="form-inline row sbxU" id="sbxU">
                            <div class="input-group mb-2 col-md-3">
                                <select class="form-control" asp-items="@Model.selectListItems" id="ddlRole" aria-describedby="roleHelp">
                                </select>
                            </div>
                            <div class="input-group mb-2 col-md-3">
                                <select class="form-control" id="ddlCriteria" aria-describedby="roleHelp">
                                    <option value="0">:: Choose Criteria ::</option>
                                    <option value="@Criteria.UserID">User ID</option>
                                    <option value="@Criteria.OutletMobile">Outlet Mobile</option>
                                    <option value="@Criteria.EmailID">EmailID</option>
                                    <option value="@Criteria.Name">Name</option>
                                </select>
                            </div>
                            <div class="input-group mb-2 col-md-6">
                                <input type="text" id="txtSearch" class="form-control" aria-label="Text input with segmented dropdown button" placeholder="Search">
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-outline-secondary" id="btnSearch">Search</button>
                                    <button type="button" class="btn btn-outline-secondary dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" id="btnPrefDDL">
                                        <span class="sr-only">Toggle Dropdown for preferences</span>
                                    </button>
                                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="btnPrefDDL">
                                        <h5 class="dropdown-header text-center">Preferences</h5>
                                        <div class="dropdown-item">
                                            <div class="form-inline">
                                                <div class="col-md">
                                                    <div class="form-check">
                                                        <input class="form-check-input" type="radio" name="rdoByDate" id="rdoByDate" value="0" checked>
                                                        <label class="form-check-label" for="rdoByDate">By Date</label>
                                                    </div>
                                                    <div class="form-check">
                                                        <input class="form-check-input" type="radio" name="rdoByDate" id="rdoByName" value="1">
                                                        <label class="form-check-label" for="rdoByName">By Name</label>
                                                    </div>
                                                    <div class="dropdown-divider"></div>
                                                    <div class="form-check">
                                                        <input class="form-check-input" type="radio" name="rdoSortBy" id="rdoAsc" value="0" checked>
                                                        <label class="form-check-label" for="rdoAsc">By Ascending</label>
                                                    </div>
                                                    <div class="form-check">
                                                        <input class="form-check-input" type="radio" name="rdoSortBy" id="rdoDsc" value="1">
                                                        <label class="form-check-label" for="rdoDsc">By Descending</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped table-responsive-sm" id="tblUserList">
                                <thead class="bg-tableth">
                                    <tr>
                                        <th scope="col">#</th>
                                        <th scope="col">Actions</th>
                                        <th scope="col">OutletName</th>
                                        <th scope="col">MobileNo</th>

                                        <th class="text-right">@Wallet._Prepaid</th>
                                        <th class="text-right">@Wallet._PrepaidCapping</th>
                                        @if (Model.userBalnace.IsUBalance)
                                        {
                                            <th class="text-right">@Wallet._Utility</th>
                                            <th class="text-right">@Wallet._UtilityCapping</th>
                                        }
                                        @if (Model.userBalnace.IsBBalance)
                                        {
                                            <th class="text-right">@Wallet._Bank</th>
                                            <th class="text-right">@Wallet._BankCapping</th>
                                        }
                                        @if (Model.userBalnace.IsIDBalance)
                                        {
                                            <th class="text-right">@Wallet._RegID</th>
                                            <th class="text-right">@Wallet._RegIDCapping</th>
                                        }
                                        @if (Model.userBalnace.IsPacakgeBalance)
                                        {
                                            <th class="text-right">@Wallet._Package</th>
                                            <th class="text-right">@Wallet._PackageCapping</th>
                                        }
                                        @if (Model.userBalnace.IsCBalance)
                                        {
                                            <th class="text-right">@Wallet._Card</th>
                                            <th class="text-right">@Wallet._CardCapping</th>
                                        }
                                        <th scope="col">Slab</th>
                                        <th scope="col">JoinDate</th>
                                        <th scope="col">JoinBy</th>
                                        <th scope="col">IsActive</th>
                                        <th scope="col">IsOTP</th>
                                        <th scope="col">KYC Status</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>
        var statuscode = { SUCCESS: 1, ERROR: -1, INFO: 2 }
        var $v = $validator;
        $(document).ready(function () {
            an.autoClose = 5;
            $('#btnPrefDDL').click();
            GetU();
            $('#btnSearch').click(function () {
                GetU();
            });
            $("#txtSearch").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $('#tblUserList tbody tr').filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });


        var GetU = function () {
            preloader.load();
            var CommonFilter = { Criteria: 0, CriteriaText: '', RoleID: 0, SortByID: false, IsDesc: true };
            CommonFilter.CriteriaText = $('#sbxU input[type="text"]').val();
            CommonFilter.SortByID = $('input[name=rdoByDate]:checked').val() === "1" ? true : false;
            CommonFilter.IsDesc = $('input[name=rdoSortBy]:checked').val() === "1" ? true : false;
            CommonFilter.RoleID = $('#ddlRole').val();
            CommonFilter.Criteria = $('#ddlCriteria').val();

            console.log(CommonFilter);
            $.ajax({
                type: 'POST',
                url: '/FOS_U_List',
                contentType: 'application/json',
                data: JSON.stringify(CommonFilter),
                success: function (result) {
                    if (result.length === 2) {
                        an.title = 'Oops';
                        an.content = 'No record found for this searching criteria!';
                        an.alert(an.type.warning);
                        an.autoClose = 5;
                    }
                    $('#__p tbody').html(result);
                    $('#sbxU input[type="text"]').focus();
                    $(".dropdown-toggle").dropdown();

                    $('tr div.dropdown-menu a.dropdown-item').click(function () {
                        if ($(this).text() === "Fund Transfer") {
                            preloader.load();
                            var itemID = $(this).closest('tr').data().itemId;
                            var nam = $($(this).closest('tr').find('td')[1]).html();
                            var mobc = $($(this).closest('tr').find('td')[2]).html();
                            var commsn = $($(this).closest('tr').find('td')[7]).find('[type="hidden"]').val();
                            var cSelctr = $(this);
                            $.post('/F-T', { pid: 0, uid: itemID}, function (result) {
                                resultReload(result);
                                $('#' + an.id).remove();
                                mdlA.id = 'mymodal';
                                mdlA.content = result;
                                mdlA.options.backdrop = 'static';
                                mdlA.options.keyboard = false;
                                mdlA.alert(mdlA.size.default);
                                $('[name="options"]').on('change', function () {
                                    var bType = $(this).data().btype;
                                    var lbltxt = $(this).data().text;
                                    $('#btnBType').val(bType);
                                });
                                $('#spnNam').html(nam);
                                $('#spnMob').html(mobc);
                                var amt = $('#txtAmount');
                                var comm = $('#txtCommission');
                                if (comm.val()==0)
                                comm.val(commsn);
                                var amtCom = $('#txtAmount,#txtCommission');
                                var ttl = 0;
                                setTimeout(function () {
                                    amt.focus();
                                }, 350);
                                var tamt = $('#spnRup');
                                var oType = 0;
                                var remk = $('#txtRemark');
                                var stk = $('#txtSecKey');
                                var btnT = $('#bT');
                                var btnTxt = btnT.html();
                                var wt = 1;
                                $('#btnGroup').click(function () {
                                    $(this).find('.btn').toggleClass('active');
                                    if ($(this).find('.btn-dark').length > 0) {
                                        $(this).find('.btn').toggleClass('btn-dark');
                                    }
                                    if ($(this).find('.btn-outline-dark').length > 0) {
                                        $(this).find('.btn').toggleClass('btn-outline-dark');
                                    }
                                    amt.focus();
                                    if ($('#btnGroup.btn-toggle').find('.btn.active').text() === 'Credit') {
                                        comm.removeAttr('disabled').val(0);
                                        $('#spnT').html('Transferable');
                                        btnT.html('Transfer');
                                        oType = 0;
                                    } else {
                                        oType = 1;
                                        btnT.html('Deduct');
                                        comm.attr('disabled', 'true').val(0);
                                        $('#spnT').html('Deductible');
                                    }
                                    btnTxt = btnT.html();
                                });
                                $('#btnGroupUType').click(function () {
                                    $(this).find('.btn').toggleClass('active');
                                    if ($(this).find('.btn-dark').length > 0) {
                                        $(this).find('.btn').toggleClass('btn-dark');
                                    }
                                    if ($(this).find('.btn-outline-dark').length > 0) {
                                        $(this).find('.btn').toggleClass('btn-outline-dark');
                                    }
                                    amt.focus();
                                    btnTxt = btnT.html();
                                });
                                amtCom.on('keyup', function () {
                                    if (!$v.$IsNum(amt.val())) {
                                        amt.val(0);
                                    }
                                    var am = parseInt(amt.val());
                                    amt.val(am);
                                    var cm = comm.val();
                                    try {
                                        cm = cm.split('.').length - 1 > 1 ? parseFloat(cm) : cm;
                                        if (cm.split('.').length - 1 == 1) {
                                            cm = cm.split('.')[0] == '' ? 0 + cm : cm;
                                            cm = cm.split('.')[1] == '' ? cm + 0 : cm;
                                            cm = $v.$numOnly(cm.split('.')[0]) + '.' + $v.$numOnly(cm.split('.')[1]);
                                            cm = cm;
                                        } else {
                                            cm = $v.$numOnly(parseInt(cm));
                                        }
                                    } catch (e) {

                                    }
                                    cm = cm == '' || cm == null ? '0' : cm;
                                    comm.val(cm);
                                    ttl = (parseFloat(cm) !== 0 ? (am + (am * parseFloat(cm) / 100)) : am);
                                    tamt.text(ttl);
                                });
                                $('button.close span,#mdlCancel').click(function () {
                                    mdlA.dispose();
                                });
                                an.autoClose = 5;
                                btnT.click(function () {
                                    if (btnTxt !== btnT.html())
                                        return false;
                                    btnLdr.addClass = 'btn-dark';
                                    btnLdr.removeClass = 'btn-outline-dark';
                                    btnLdr.Start(btnT, oType === 0 ? 'Tranfering...' : 'Deducting...');
                                    if (ttl < 1) {
                                        an.title = 'Info';
                                        an.content = 'Enter amount!';
                                        an.alert(an.type.info);
                                        btnLdr.Stop(btnT);
                                        return false;
                                    }
                                    wt = parseInt($('#btnBType').val());
                                    var FundProcessReq = { UserID: itemID, Amount: ttl, OType: oType, Remark: remk.val(), WalletType: wt, SecurityKey: stk.val(), IsMarkCredit: $('#chbIsMarkCredit').is(':checked') }
                                    preloader.load();
                                    $.ajax({
                                        type: 'POST',
                                        url: '/FT',
                                        dataType: 'json',
                                        contentType: 'application/json',
                                        data: JSON.stringify(FundProcessReq),
                                        success: function (result) {
                                            resultReload(result);
                                            an.autoClose = 5;
                                            if (result.statuscode === -1) {
                                                an.title = 'Oops';
                                                an.content = result.msg;
                                                an.alert(an.type.failed);
                                            } else {

                                                an.title = oType === 0 ? 'Transfered' : 'Deducted';
                                                an.content = result.msg.replace('{User}', '<b>' + nam + '</b>');
                                                an.alert(oType === 0 ? an.type.success : an.type.info);
                                                try {
                                                    $(cSelctr.closest('tr').find('td')[4]).html((oType === 0 ? (parseFloat($(cSelctr.closest('tr').find('td')[4]).html()) + ttl) : (parseFloat($(cSelctr.closest('tr').find('td')[4]).html()) - ttl)));
                                                } catch (e) {
                                                    console.log(e)
                                                }
                                                mdlA.dispose();
                                            }
                                        },
                                        statusCode: {
                                            500: function () {
                                                an.title = 'Oops';
                                                an.content = 'Server error';
                                                an.alert(an.type.failed);
                                            },
                                            0: function () {
                                                an.title = 'Oops';
                                                an.content = 'Internet Connection was broken';
                                                an.alert(an.type.failed);
                                            }
                                        },
                                        error: function (result) {
                                            an.title = 'Oops';
                                            an.content = 'An error occured!';
                                            an.alert(an.type.failed);
                                        },
                                        complete: function () {
                                            btnLdr.Stop(btnT);
                                            preloader.remove();
                                        }
                                    });
                                });
                            }).fail(function (xhr) {
                                if (xhr.status == 500) {
                                    an.title = 'Oops';
                                    an.content = 'Server error';
                                    an.alert(an.type.failed);
                                }
                                if (xhr.status == 0) {
                                    an.title = 'Oops';
                                    an.content = 'Internet Connection was broken';
                                    an.alert(an.type.failed);
                                }
                            }).always(function () {
                                preloader.remove();
                            });;
                            return false;
                        }
                    });

                },
                statusCode: {
                    500: function () {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    },
                    0: function () {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                },
                error: function (result) {
                    console.log(result);
                },
                complete: function () {
                    preloader.remove();
                }
            });
        }

        function ChildSearch(ctr) {
            mdlA.dispose();
            $('#txtSearch').val($(ctr).html());
            $("#ddlCriteria option[value=1]").attr('selected', 'selected');
            $('#btnSearch').click();
        }

    </script>
}
