@using RoundpayFinTech.AppCode.Model.Shopping;
@model RoundpayFinTech.AppCode.Model.Shopping.OrderHistory

@if (Model.Orders.Any())
{
    <div class="table-responsive">
        <table class="table table-striped table-condensed" id="tblOrder">
            <thead style="background: #5756a7;color:#fff">
                <tr>
                    <th>SrNo</th>
                    <th>OrderNo</th>
                    <th>Quantity</th>
                    <th class="text-nowrap">Total Cost</th>
                    <th class="text-nowrap">Total Shipping</th>
                    <th class="text-nowrap">Retailer Name</th>
                    <th class="text-nowrap">Retailer Mobile</th>
                    <th class="text-nowrap">Outlet Name</th>
                    <th class="text-nowrap">Customer Name</th>
                    <th class="text-nowrap">MobileNo</th>
                    <th>Opening</th>
                    <th>Deduction</th>
                    <th>Closing</th>
                    <th>Delivery Address</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int counter = 1;
                    var enumData = from OrderStatus e in Enum.GetValues(typeof(OrderStatus))
                                   select new
                                   {
                                       Value = (int)e,
                                       Text = e.ToString()
                                   };
                    var statusList = new SelectList(enumData, "Value", "Text");
                    foreach (var item in Model.Orders)
                    {
                        <tr data-Order-Id="@item.OrderId">
                            <td><a href="#" class="btn-link btnDetail">@counter</a></td>
                            <td><a href="#" class="btn-link btnDetail">ORD-@item.OrderId</a></td>
                            <td>@item.Quantity</td>
                            <td>@item.TotalCost</td>
                            <td>@item.TotalShipping</td>
                            <td>@item.RetailerName</td>
                            <td>@item.RetailerMobile</td>
                            <td>@item.OutletName</td>
                            <td>@item.CustomerName</td>
                            <td>@item.MobileNo</td>
                            <td>@item.Opening</td>
                            <td>@item.Deduction</td>
                            <td>@item.Closing</td>
                            <td>
                                <span data-toggle="tooltip" data-placement="top" title="@item.DeliveryAddress" class="cursor-pointer text-overflow-ellipsis"><label class="address" data-item-Address="@item.DeliveryAddress">@item.DeliveryAddress</label></span>
                            </td>
                            <td>
                                @if (item.Status == (int)OrderStatus.Closed)
                                {
                                    <span class="text-monospace text-danger">Closed</span>
                                }
                                else
                                {
                                    <span class="text-monospace text-info">Open</span>
                                }
                            </td>
                            @*<td class="text-center">
                                @if (Model.Role == Fintech.AppCode.StaticModel.Role.Admin)
                                {
                                    if (item.Status != (int)OrderStatus.Disapproved && item.Status != (int)OrderStatus.Cancel)
                                    {
                                        <select class="form-control ddlStatus" asp-items="@statusList"></select>
                                    }
                                    else
                                    {
                                        <span class='text-monospace text-danger'>Cancelled</span>
                                    }
                                }
                                else
                                {
                                    if (item.Status == (int)OrderStatus.OrderPlaced)
                                    {
                                        <button class='btn btn-sm btn-outline-danger btnCancel'>Cancel</button>
                                    }
                                    if (item.Status == (int)OrderStatus.Disapproved || item.Status == (int)OrderStatus.Cancel)
                                    {
                                        <span class='text-monospace text-danger'>Cancelled</span>
                                    }
                                    if (item.Status == (int)OrderStatus.Approved)
                                    {
                                        <span class='text-monospace text-info'>Order Approved</span>
                                    }
                                    if (item.Status == (int)OrderStatus.Dispatched)
                                    {
                                        <span class='text-monospace text-primary'>Order Dispatched</span>
                                    }
                                    if (item.Status == (int)OrderStatus.Delivered)
                                    {
                                        <span class='text-monospace text-success'>Order Delivered</span>
                                    }
                                }
                            </td>*@
                        </tr>
                        counter++;
                    }
                }
            </tbody>
        </table>
    </div>
}
else
{
    <h4 class="text-danger">No Order Found!!</h4>
}
<script>
    $('[data-toggle="tooltip"]').tooltip();
    var changeStatus = e => {
        preloader.load();
        let param = {
            CommonInt: $(e.currentTarget).closest('tr').data().orderId,
            CommonInt2: $(e.currentTarget).get(0).tagName === 'BUTTON' ? 4 : $(e.currentTarget).val()
        };
        $.post('/ChangeOrderStatus', param)
            .done(result => {
                an.title = result.statuscode === an.type.success ? 'Well done' : 'Oops';
                an.content = result.msg;
                an.alert(result.statuscode);
            }).fail(xhr => {
                an.title = 'Oops';
                an.content = xhr.status == 0 ? 'Internet Connection was broken' : 'Server error';
                an.alert(an.type.failed);
            }).always(() => preloader.remove())
    };


    $('.btnDetail').unbind().click(e => {
        preloader.load();
        $.post('/_OrderDetailList', { OrderId: $(e.currentTarget).closest('tr').data().orderId })
            .done(result => {
                mdlA.id = "OrderList";
                mdlA.title = "Detail List";
                mdlA.content = result;
                mdlA.modal(mdlA.size.xxlarge);
            }).fail(xhr => {
                an.title = 'Oops';
                an.content = xhr.status == 0 ? 'Internet Connection was broken' : 'Server error';
                an.alert(an.type.failed);
            }).always(() => preloader.remove());
    });
    $('.btnCancel').unbind().click(e => changeStatus(e));
    $('.ddlStatus').unbind().change(e => changeStatus(e));

    $('.address').unbind().click(e => {
        mdlA.title = 'Address';
        mdlA.id = "Address";
        mdlA.content = `<div class="col-sm-12"><div class="form-group text-monospace">${$(e.currentTarget).data().itemAddress}</div></div>`;
        mdlA.modal(mdlA.size.small);
    });
</script>