@model bool

<div class="col-md-12">
    @if (!Model)
    {
        <button type="button" class="close" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    }
    <h4 class="text-info text-monospace"><small class="text-muted">Change Password</small></h4>
    <hr />

    <div class="form-group">
        <label class="lbl" for="txtOldPassword"> Enter Old Password</label>
        <input aria-describedby="amountHelp" class="form-control" id="txtOldPassword" name="txtOldPassword" placeholder="Enter Old Password" tabindex="1" type="password" value="">
        <small id="amountHelp" class="form-text text-muted d-none"></small>
    </div>
    <div class="form-group">
        <label class="lbl" for="txtNewPassword">Enter New Password</label>
        <input aria-describedby="remHelp" class="form-control" id="txtNewPassword" name="txtNewPassword" placeholder="Enter New Password" tabindex="3" type="password" value="">
        <small id="remHelp" class="form-text text-muted d-none"></small>
    </div>
    <div class="form-group">
        <label class="lbl" for="txtConfirmPassword">Enter Confirm Password</label>
        <input aria-describedby="remConfirm" class="form-control" id="txtConfirmPassword" name="txtConfirmPassword" placeholder="Enter Confirm Password" tabindex="3" type="password" value="">
        <small id="remConfirm" class="form-text text-muted d-none"></small>
    </div>
    <button class="btn btn-outline-dark" id="btnChangePass">Change Password</button>
    @if (!Model)
    {
        <button class="btn btn-dark" id="mdlCancel">Cancel</button>
    }
</div>

<script>
    $("#btnChangePass").click(function () {
        let $v = $validator;
        let ct = {
            oldp: $("#txtOldPassword"), newp: $('#txtNewPassword'), confirmp: $("#txtConfirmPassword")
        };
        let IsE = { oldp: (ct.oldp.val().trim() === ''), newp: (ct.newp.val().trim() === ''), confirmp: (ct.confirmp.val().trim() === ''), samep: (ct.newp.val().trim() === ct.oldp.val().trim()), notsameconfirm: (ct.newp.val().trim() !== ct.confirmp.val().trim()) };
        $v.showErrorFor(ct.oldp, 'Enter Old Password', IsE.oldp);
        $v.showErrorFor(ct.newp, 'Enter New Password', IsE.newp);
        $v.showErrorFor(ct.confirmp, 'Enter Confirm Password', IsE.confirmp);


        IsE.err = IsE.oldp || IsE.newp || IsE.confirmp;
        if (IsE.err) {
            return false;
        }
        $v.showErrorFor(ct.newp, 'New Password Cannot Be Same As Old Password', IsE.samep);
        IsE.err = IsE.samep;
        if (IsE.err) {
            return false;
        }
        $v.showErrorFor(ct.confirmp, 'Confirm Password Do Not Match', IsE.notsameconfirm);
        IsE.err = IsE.notsameconfirm
        if (IsE.err) {
            return false;
        }
        let UserData = {
            UserId: "",
            OldPassword: ct.oldp.val().trim(),
            NewPassword: ct.newp.val().trim()
        };
        $.post('/Employee/ChangePassword', UserData)
            .done(result => {
                an.title = result.statuscode === an.type.success ? "Well done" : "Oops";
                an.content = result.msg;
                an.alert(result.statuscode);
                if (result.statuscode === an.type.success) {
                    mdlA.dispose();
                }
            }).fail(xhr => {
                an.title = "Oops! Error";
                an.content = xhr.status === 404 ? "Requested path not find" : (xhr.status === 0 ? "Internet is not connected" : "Server error");
                an.alert(an.type.failed);
            }).always(() => btnLdr.Stop(ct.btn))
    });
</script>