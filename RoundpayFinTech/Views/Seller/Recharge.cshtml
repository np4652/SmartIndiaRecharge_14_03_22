@using Fintech.AppCode.StaticModel;
@model int
@{
    ViewData["Title"] = "Recharge";
    if (Model == OPTypes.AEPS)
    {
        ViewData["Title"] = nameof(OPTypes.AEPS);
    }
    if (Model == OPTypes.Prepaid)
    {
        ViewData["Title"] = nameof(OPTypes.Prepaid);
    }
    if (Model == OPTypes.PSA)
    {
        ViewData["Title"] = nameof(OPTypes.PSA);
    }
    if (Model == OPTypes.PublicEServices)
    {
        ViewData["Title"] = "Public E Services";
    }
    if (Model == OPTypes.Landline)
    {
        ViewData["Title"] = nameof(OPTypes.Landline);
    }
    if (Model == OPTypes.SDBOX)
    {
        ViewData["Title"] = "SD BOX";
    }
    if (Model == OPTypes.HDBOX)
    {
        ViewData["Title"] = "HD BOX";
    }
    if (Model == OPTypes.Water)
    {
        ViewData["Title"] = nameof(OPTypes.Water);
    }
    if (Model == OPTypes.Postpaid)
    {
        ViewData["Title"] = nameof(OPTypes.Postpaid);
    }
    if (Model == OPTypes.Electricity)
    {
        ViewData["Title"] = nameof(OPTypes.Electricity);
    }
    if (Model == OPTypes.DMR)
    {
        ViewData["Title"] = "DMT";
    }
    if (Model == OPTypes.DTH)
    {
        ViewData["Title"] = nameof(OPTypes.DTH);
    }
    if (Model == OPTypes.Gas)
    {
        ViewData["Title"] = nameof(OPTypes.Gas);
    }
    if (Model == OPTypes.Broadband)
    {
        ViewData["Title"] = nameof(OPTypes.Broadband);
    }
    if (Model == OPTypes.BikeInsurance)
    {
        ViewData["Title"] = nameof(OPTypes.BikeInsurance);
    }
    if (Model == OPTypes.FourWheelerInsurance)
    {
        ViewData["Title"] = nameof(OPTypes.FourWheelerInsurance);
    }
    if (Model == OPTypes.DTHConnection)
    {
        ViewData["Title"] = nameof(OPTypes.DTHConnection);
    }
    if (Model == OPTypes.DTHComplain)
    {
        ViewData["Title"] = nameof(OPTypes.DTHComplain);
    }
}

<div aria-label="breadcrumb" class="breadcrumb" id="page-header">
    <div class="container-fluid">
        <h5 class="float-left"><i class="fa fa-globe"></i> @ViewData["Title"]</h5>
        <ol class="breadcrumb float-right">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item active"> Our Services</li>
        </ol>
    </div>
</div>
<div class="main-temp-body">
    <div class="container-fluid">
        <div class="row" id="parentContainer">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card mt-4" style="margin-bottom:30px;min-height:300px;"></div>
                    </div>
                    <div class="col-md-6">
                        <div class="card mt-4" style="min-height:470px;"></div>
                    </div>
                </div>
            </div>
        </div>
        <input type="hidden" id="hidLat" data-isbbpsinstaging="@(ApplicationSetting.IsBBPSInStaging)" />
        <input type="hidden" id="hidLong" />
        <input type="hidden" id="hidIsLoc" />
    </div>
</div>

@section scripts{
    @*<script src="~/lib/jquery/dist/moment.min.js"></script>*@
    <script src="~/lib/bootstrap/calendar/datepicker/js/bootstrap-datetimepicker.min.js"></script>
    <script src="~/js/datepickerHelper.js"></script>
    <script>

        var StatusText = { FAIL: -1, PENDING: 1, SUCCESS: 2, FAILED: 3 };
        $(document).ready(function () {
            var l = location.href.split('/');
            var s = l[l.length - 1];
            rech(s);
            if ($('#DivTopFive').length) {
                TopFive(s);
            }
            LocationUpdate();
        });
        var doDTHComplain = (sender) => {
            btnLdr.addClass = 'btn-dark';
            btnLdr.removeClass = 'btn-outline-dark';
            btnLdr.Start($(sender), 'Sending...');

            var Btn = $('#btnDTHComp').val()
            preloader.load();
            var DthConn = {
                Name: $('#txtnameC').val(), Mobile: $('#txtmobileC').val(), OID: $('#ddlOperator').val(), Remark: $('#txtRemark').val()
            }
            $.ajax({
                type: 'POST',
                url: '/dth-Complain',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify(DthConn),
                success: function (result) {
                    resultReload(result);
                    mdlA.dispose();
                    if (result.statuscode === -1) {
                        an.title = 'Oops';
                        an.content = result.msg;
                        an.alert(an.type.failed);
                        an.autoClose = 2;
                        btnLdr.Stop(Btn);
                    }
                    else {
                        an.title = 'Welldone!';
                        an.content = result.msg;
                        an.alert(an.type.success);
                        mdlA.dispose();
                        btnLdr.Stop(Btn);
                    }
                }
            }).catch(function (x) {
            }).fail(function (xhr) {
                $(_this).attr('checked', Is == false);
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                    btnLdr.Stop(Btn);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                    btnLdr.Stop($(sender));
                }
            }).always(function () {
                preloader.remove();
                try {
                    btnLdr.Stop($(sender));
                } catch (e) {

                }
            });
        }

        var LoadOperatorBanner = function () {
            preloader.load();
            an.autoClose = 5;
            $.post('/get-OperatorBannerSeller', { Name: $('#ddlOperator').val() })
                .done(function (result) {
                    $('#__LOID tbody').html(result);
                })
                .catch(function (xhr, e, msg) {

                })
                .fail(function (xhr) {
                    $(this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                })
                .always(function () {
                    preloader.remove();
                });
        }
        var LocationUpdate = function () {
            $('#hidIsLoc').val("-1");
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    $('#hidLat').val(position.coords.latitude.toFixed(4))
                    $('#hidLong').val(position.coords.longitude.toFixed(4))
                }, function (err) {
                    $('#hidIsLoc').val(err.code);
                });

            }
        }
        var rech = function (s) {
            preloader.load();
            $.post('/rech', { s: s }, function (result) {
                resultReload(result);
                preloader.remove();
                $('#parentContainer').html(result);
                if ($('[id^=dmton_]').attr('id') != undefined) {
                    var dmtonID = $('[id^=dmton_]').attr('id');
                    CallOnboarding(dmtonID.split('_')[1], '', 0, '', false, 0);
                }
                else if ($('[id^=aeps_]').attr('id') != undefined) {
                    var aepsID = $('[id^=aeps_]').attr('id');
                    CallOnboarding(aepsID.split('_')[1], '', 0, '', false, 0);
                }
                else if ($('[id^=insur_]').attr('id') != undefined) {
                    var insurID = $('[id^=insur_]').attr('id');
                    CallOnboarding(insurID.split('_')[1], '', 0, '', false, 0);
                }
                else if ($('[id^=pes_]').attr('id') != undefined) {
                    var pesID = $('[id^=pes_]').attr('id');
                    CallOnboarding(pesID.split('_')[1], '', 0, '', false, 0);
                } else {
                    $('#btnPay').unbind().click(function () {
                        var IsQuickPay = $('#btnPay').attr('data-isquickpay') == 'true' || $('#btnPay').attr('data-isquickpay') == 'True';
                        let isBBPSInStaging = $('#hidLat').attr('data-isbbpsinstaging');
                        if (isBBPSInStaging != null && isBBPSInStaging != undefined && isBBPSInStaging === 'True' && $('#btnPay').attr("data-confirmed") === undefined && IsQuickPay === true) {
                            $.post('/BPConfirm', { IsQuickPay: true }, function (result) {
                                resultReload(result);
                                mdlA.id = 'mdlBPConfirm';
                                mdlA.content = result;
                                mdlA.alert(mdlA.size.default);
                                $('button.close span,#mdlCancel').unbind().click(function () {
                                    mdlA.dispose();
                                });
                                $('#btnBPConfirm').click(function () {
                                    $('#btnPay').attr("data-confirmed", 'confirmed');
                                    $('#btnPay').attr('data-bccf', $('#txtBCCF').val());
                                    mdlA.dispose(function () {
                                        $('#btnPay').click();
                                    });
                                });
                                $('#lblBiller').html($('#ddlOperator option:selected').text());
                                $('#lblBillerID').html($('#txtMobileNo').attr('data-biilerid'));
                                let amountName = 'Bill Amount';
                                let payModes = 'CASH';
                                $('[for="lblBillAmount"]').html(amountName);
                                $('#lblPayMode').html(payModes);
                                $('#lblBillAmount').html($('#txtAmount').val());
                                $('#lblAmountBill').html($('#txtAmount').val());
                                $('#btnPay').attr('data-paymode', payModes);
                            }).catch(function () {
                            }).fail(function (xhr) {
                                $(_this).attr('checked', Is == false);
                                if (xhr.status == 500) {
                                    an.title = 'Oops';
                                    an.content = 'Server error';
                                    an.alert(an.type.failed);
                                }
                                if (xhr.status == 0) {
                                    an.title = 'Oops';
                                    an.content = 'Internet Connection was broken';
                                    an.alert(an.type.failed);
                                }
                            }).always(function () {
                            });
                        } else {
                            $('#btnPay').removeAttr("data-confirmed");
                            Dorech($('#btnPay').html());
                        } lat

                    });
                    $('#txtMobileNo').unbind().change(function () {
                        if ($('#Aplan').attr('id') != undefined) {
                            if ($(this).val().length > 4)
                                checkCircle($(this).val(), function (o, c) {
                                    $('#ddlOperator').val(o);
                                    $('#opImg img').attr("src", "/Image/operator/" + o + ".png");
                                    $('#ddlCircle').val(c);
                                    OpDetail(o);
                                });
                        }
                    });
                    $('#Aplan').unbind().click(function () {
                        if ($('#ddlOperator').val() == "0") {
                            $v.showErrorFor($('#ddlOperator'), 'Select Operator', true);
                            return;
                        }
                        $v.showErrorFor($('#ddlOperator'), 'Select Operator', false);

                        if ($('#ddlCircle').val() == "0") {
                            $v.showErrorFor($('#ddlCircle'), 'Select Circle', true);
                            return;
                        }
                        $v.showErrorFor($('#ddlCircle'), '', false);
                        openPlan($('#ddlOperator').val(), $('#ddlCircle').val());
                    });
                    $('#Cashback').unbind().click(function () {
                        if ($('#ddlOperator').val() == "0") {
                            $v.showErrorFor($('#ddlOperator'), 'Select Operator', true);
                            return;
                        }
                        $v.showErrorFor($('#ddlOperator'), 'Select Operator', false);

                        if ($('#ddlCircle').val() == "0") {
                            $v.showErrorFor($('#ddlCircle'), 'Select Circle', true);
                            return;
                        }
                        $v.showErrorFor($('#ddlCircle'), '', false);
                        openCashback($('#ddlOperator').val());
                    });
                    $('#roffer').unbind().click(function () {
                        if ($('#txtMobileNo').val().length != 10) {
                            $v.showErrorFor($('#txtMobileNo'), 'Invalid Mobile Number', true);
                            return;
                        }
                        $v.showErrorFor($('#txtMobileNo'), '', false);
                        if ($('#ddlOperator').val() == "0") {
                            $v.showErrorFor($('#ddlOperator'), 'Select Operator', true);
                            return;
                        }
                        $v.showErrorFor($('#ddlOperator'), 'Select Operator', false);
                        openRoffer($('#ddlOperator').val(), $('#txtMobileNo').val());
                    });
                    $('#dthinfo').unbind().click(function () {
                        if ($('#txtMobileNo').val().length == 0) {
                            $v.showErrorFor($('#txtMobileNo'), 'Invalid ' + $('#txtMobileNo').attr('placeholder'), true);
                            return;
                        }
                        $v.showErrorFor($('#txtMobileNo'), '', false);
                        if ($('#ddlOperator').val() == "0") {
                            $v.showErrorFor($('#ddlOperator'), 'Select Operator', true);
                            return;
                        }
                        $v.showErrorFor($('#ddlOperator'), 'Select Operator', false);
                        openDthCustInfo($('#ddlOperator').val(), $('#txtMobileNo').val());
                    });
                    $('#dthPlan').unbind().click(function () {
                        if ($('#ddlOperator').val() == "0") {
                            $v.showErrorFor($('#ddlOperator'), 'Select Operator', true);
                            return;
                        }
                        $v.showErrorFor($('#ddlOperator'), 'Select Operator', false);
                        openDthPlan($('#ddlOperator').val());
                    });
                    $('#heavyRefresh').unbind().click(function () {
                        if ($('#txtMobileNo').val().length == 0) {
                            $v.showErrorFor($('#txtMobileNo'), 'Invalid ' + $('#txtMobileNo').attr('placeholder'), true);
                            return;
                        }
                        $v.showErrorFor($('#txtMobileNo'), '', false);
                        if ($('#ddlOperator').val() == "0") {
                            $v.showErrorFor($('#ddlOperator'), 'Select Operator', true);
                            return;
                        }
                        $v.showErrorFor($('#ddlOperator'), 'Select Operator', false);
                        openDTHHeavyRefresh($('#ddlOperator').val(), $('#txtMobileNo').val());
                    });
                    $('#ddlOperator').unbind().on('change', function () {
                        var OId = $(this).val();
                        var iscallOB = $(this).data().iscallob;
                        if (iscallOB !== undefined && iscallOB == true)
                            CallOnboarding(OId, '', 0, '', false, 0);
                        else
                            OpDetail(OId);
                        $('#opImg img').attr("src", "/Image/operator/" + OId + ".png");
                        var IsDMT = $('#ddlOperator').data().isdmt == undefined ? false : $('#ddlOperator').data().isdmt;
                        if (IsDMT == true) {
                            $('#txtSearch').val('');
                            $('#DivCtDetail').css("display", "none");
                            $('#DivbeniList').html('');
                        }
                    });
                    if ($('#ddlOperator').length && $('#ddlOperator').val() !== '0' && $('#ddlOperator').val() !== null) {
                        var OId = $('#ddlOperator').val();
                        var iscallOB = $('#ddlOperator').data().iscallob;
                        if (iscallOB !== undefined && iscallOB == true)
                            CallOnboarding(OId, '', 0, '', false, 0);
                        else
                            OpDetail(OId);
                        $('#opImg img').attr("src", "/Image/operator/" + OId + ".png");
                        var IsDMT = $('#ddlOperator').data().isdmt == undefined ? false : $('#ddlOperator').data().isdmt;
                        if (IsDMT == true) {
                            $('#txtSearch').val('');
                            $('#DivCtDetail').css("display", "none");
                            $('#DivbeniList').html('');
                        }
                    }
                    $('[data-toggle="tooltip"]').tooltip();
                    $("#ddlpes").change(function () {
                        _ShowForm();
                    });
                    $('#btnUPIPay').click(function () {
                        var IsE = {
                            txtAmount: ($('#txtAmount').val() === null || !$v.$numOnly($('#txtAmount').val())),
                            txtVPA: ($('#txtVPA').val() === null || $('#txtVPA').val().indexOf('@@') == -1 || $('#txtVPA').val().length < 8 || $('#txtVPA').val().length > 60),
                            txtBeneName: ($('#txtBeneName').val() === null || $('#txtBeneName').val().length < 4 || $('#txtBeneName').val().length > 100)
                        }
                        $v.showErrorFor($('#txtVPA'), 'UPI ID or VPA is mandatory field', IsE.txtVPA);
                        $v.showErrorFor($('#txtBeneName'), 'Beneficiary Name is mandatory field', IsE.txtBeneName);
                        $v.showErrorFor($('#txtAmount'), 'Amount is  numeric mandatory field', IsE.txtAmount);
                        doUPIPayment(this);
                    });
                    $('#Dthcomplain').click(function () {
                        rech(66);
                    });
                    $('#Dthconn').click(function () {
                        rech(65);
                    });
                    $('#DthOffer').click(function () {
                        LoadOperatorBanner();
                    });
                    $('#btnDTHConn').click(function () {
                        debugger;
                        var ct = {
                            mob: $('#txtmobile'), nam: $('#txtname'), btn: $('#btnDTHConn')
                        };
                        var btnTxt = $('#btnDTHConn').html();
                        if (btnTxt !== ct.btn.html())
                            return false;
                        btnLdr.addClass = 'btn-dark';
                        btnLdr.removeClass = 'btn-outline-dark';
                        btnLdr.Start(ct.btn, 'Requesting');
                        var len = 10, lenMax = 13
                        // var Emailreg = /^([A-Za-z0-9_\-\.])+\@@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
                        //var validateEmail = (Emailreg.test(ct.email.val()));
                        var isValidLength = ct.mob.val().length >= len && (ct.mob.val().length <= lenMax || lenMax == 0)
                        var IsE = {
                            txtname: ($('#txtname').val() === null || $('#txtname').val().length < 4 || $('#txtname').val().length > 100),
                            mob: !isValidLength,
                        }

                        if ($('#ddlOperator').val() == "0") {
                            btnLdr.Stop(ct.btn);

                            $v.showErrorFor($('#ddlOperator'), 'Select Operator', true);

                        }
                        $v.showErrorFor(ct.nam, 'Name is mandatory field', IsE.txtname);
                        $v.showErrorFor(ct.mob, 'Mobile number is mandatory field and length should be between ' + len + ' and ' + lenMax, IsE.mob)
                        //if ((ct.email.val() != null || ct.email.val() != "")) {
                        //    if (!validateEmail) {
                        //        IsE.email = true;

                        //        $v.showErrorFor(ct.email, 'Please enter a valid email Id', $('#txtname').val())

                        //    }
                        //    else {
                        //        document.getElementById("EmailHelp").innerHTML = "";
                        //    }
                        //}


                        IsE.err = (IsE.txtname || IsE.mob);
                        if (IsE.err) {
                            btnLdr.Stop(ct.btn);
                            return false;
                        }
                        btnLdr.Stop(ct.btn);
                        doDTHconnection(this);

                    });
                    $('#btnDTHComp').click(function () {
                        var ct = {
                            mob: $('#txtmobileC'), nam: $('#txtnameC'), btn: $('#btnDTHComp'), Rmk: $('#txtRemark')
                        };
                        var btnTxt = $('#btnDTHComp').html();
                        if (btnTxt !== ct.btn.html())
                            return false;
                        btnLdr.addClass = 'btn-dark';
                        btnLdr.removeClass = 'btn-outline-dark';
                        btnLdr.Start(ct.btn, 'Requesting');
                        var len = 10, lenMax = 13;

                        var isValidLength = ct.mob.val().length >= len && (ct.mob.val().length <= lenMax || lenMax == 0)
                        var IsE = {
                            txtname: ($('#txtnameC').val() === null || $('#txtnameC').val().length < 4 || $('#txtnameC').val().length > 100),
                            txtRemark: ($('#txtRemark').val() === null || $('#txtRemark').val().length < 1 || $('#txtRemark').val().length > 1000),
                            mob: !isValidLength,
                        }


                        if ($('#ddlOperator').val() == "0") {
                            btnLdr.Stop(ct.btn);
                            $v.showErrorFor($('#ddlOperator'), 'Select Operator', true);
                        }
                        $v.showErrorFor(ct.nam, 'Name is mandatory field', IsE.txtname);
                        $v.showErrorFor(ct.mob, 'Mobile number is mandatory field and length should be between ' + len + ' and ' + lenMax, IsE.mob)
                        $v.showErrorFor(ct.Rmk, 'Remark number is mandatory field', IsE.txtRemark)

                        IsE.err = (IsE.txtname || IsE.mob || IsE.txtRemark);
                        if (IsE.err) {
                            btnLdr.Stop(ct.btn);
                            return false;
                        }
                        btnLdr.Stop(ct.btn);

                        doDTHComplain(this);

                    });
                }

            }).catch(function () {
                preloader.remove();
                console.clear();
            }).fail(function (xhr) {
                preloader.remove();
                $(_this).attr('checked', Is == false);
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {

            });
        }
        var TopFive = function (s) {
            preloader.load();
            $.post('/TopFive', { ID: s }, function (result) {
                resultReload(result);
                $('#DivTopFive').html(result);
            }).catch(function () {
                console.clear();
            }).fail(function (xhr) {
                $(_this).attr('checked', Is == false);
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
            });
        }
        var OpDetail = function (s) {
            preloader.load();
            $.post('/OpDetail', { ID: s }, function (result) {
                resultReload(result);
                $('#imgIsBPPS').addClass('d-none');
                $('#btnFetchBill').remove();
                $('#btnPay').removeClass('d-none');
                $('#btnPay').attr('data-isquickpay', (result.isBBPS === true && result.isBilling === false));
                $('#btnPay').attr('data-isbbps', (result.isBBPS === true));
                if (result.isBBPS) {
                    $('#imgIsBPPS').removeClass('d-none');
                    $('#btnPay').removeClass('d-none');
                    $("#txtAmount").closest('div').removeClass('d-none');
                    if (result.isBilling) {
                        $('#btnPay').addClass('d-none');
                        $('#txtMobileNo').focus();
                        $('<button class="btn btn-outline-danger" onclick="fetchBill()" id="btnFetchBill">Fetch Bill</button>').insertAfter('#btnPay');
                        if (!result.isPartial) {
                            $("#txtAmount").closest('div').addClass('d-none');
                        }
                    }
                }
                $('#lblremark').html(result.accountRemak);
                $('#lnkSampleImg').attr("href", "../Image/SampleImg/" + s + ".jpg");
                $('#txtMobileNo').attr("placeholder", result.accountName);
                $('label[for^="txtMobileNo"]').html(result.accountName);
                $('#txtMobileNo').attr("data-length", result.length);
                $('#txtMobileNo').attr("data-lengthMax", result.lengthMax);
                $('#txtMobileNo').attr("data-regxAcc", result.regExAccount);
                $('#txtMobileNo').attr("data-customerNoKey", result.customerNoKey);
                $('#txtMobileNo').attr("data-isTakeCustomerNum", result.isTakeCustomerNum);
                $('#txtMobileNo').attr("data-biilerID", result.billerID);
                $('#txtMobileNo').attr("data-accountremak", result.accountRemak);
                $('#MobileHelp').html(result.accountRemak);
                OpOption(s);
            }).catch(function () {
                //console.clear();
            }).fail(function (xhr) {
                $(_this).attr('checked', Is == false);
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
            });
        }
        var CallOnboarding = function (s, o, refid, PidData, isBio, BioAuthtype, f) {
            debugger;
            preloader.load();
            $.post('/OnBoradUser', { ID: s, OTP: o, OTPRefID: refid, PidData, BioAuthtype, isBio, BioAuthtype }, function (result) {
                resultReload(result);
                if (f != undefined) {
                    f();
                }
                preloader.remove();
                if (result.isBioMetricRequired == true) {
                    $('button.close span,#mdlCancel').click();
                    setTimeout(function () {
                        OpenBioMetric(s, refid, (BioAuthtype == 0 ? result.bioAuthType : BioAuthtype));
                    }, 500);
                    return;
                }
                if (result.isTakeCustomerNum == false)
                    $('#dvCustNum').addClass('d-none');
                else
                    $('#dvCustNum').removeClass('d-none');

                if (result.isShowMsg == false) {

                    OpDetail(s);
                }
                else {
                    var MessageBox = { MBType: 0, Title: '', Message: '', ButtonText: '', ButtonID: '', IsCancel: false, CancelText: '', CancelID: '', IsOTP: false }
                    if (result.isOTPRequired == true) {
                        MessageBox.IsOTP = true;
                        MessageBox.OTPRefID = result.otpRefID;
                        MessageBox.Title = 'Enter OTP';
                        if (o != '') {
                            MessageBox.Message = 'Enter a valid OTP';
                        } else {
                            MessageBox.Message = 'OTP required to activate this service';
                        }
                    }
                    else if (result.inInterface == true) {
                        AEPSInterfaceN(result.interfaceType, s);
                        return;
                    }
                    else if (result.isEKYCRequired == true) {
                        EKYCPopup(result.aadhar);
                        return;
                    }
                    else {
                        MessageBox.IsCancel = false;
                        MessageBox.ButtonID = 'btnCancel';
                        MessageBox.ButtonText = 'Cancel';
                        if (result.isDown == true) {
                            MessageBox.MBType = MessageBoxType.SERVICEDOWN;
                            MessageBox.Title = 'Service Down';
                        }
                        else if (result.isWaiting == true) {
                            MessageBox.MBType = MessageBoxType.UNDERSCREENING;
                            MessageBox.Title = 'Under Screening';
                        }
                        else if (result.isRejected == true) {
                            MessageBox.MBType = MessageBoxType.REJECT;
                            MessageBox.ButtonID = 'btnRedirect';
                            MessageBox.ButtonText = 'Redirect To Profile';
                            MessageBox.Title = 'Rejected and Redirecting';
                        }
                        else if (result.isIncomplete == true) {
                            MessageBox.MBType = MessageBoxType.INCOMPLETE;
                            MessageBox.ButtonID = 'btnRedirect';
                            MessageBox.ButtonText = 'Redirect To Profile';
                            MessageBox.Title = 'Incomplete and Redirecting';
                        }
                        else if (result.isUnathorized == true) {
                            MessageBox.MBType = MessageBoxType.UNAUTHORISED;
                            MessageBox.Title = 'Not Authorized';
                        }
                        else if (result.statuscode == 1) {
                            MessageBox.MBType = MessageBoxType.SUCCESS;
                            MessageBox.Title = 'Service is active';
                            if (result.commonStr4 != null) {
                                $('#spHidden').val('S');
                                $('#spHidden').attr('data-psaid', result.commonStr4);
                                $('#ViewCrediential').click(function () {
                                    PSACredentials();
                                });
                                $('#btnPurchaseToken').click(function () {
                                    PurchageToken();
                                });
                            }
                        }
                        else {
                            MessageBox.MBType = MessageBoxType.FAILED;
                            MessageBox.Title = 'Confirmation';
                        }
                        MessageBox.Message = result.msg;
                    }
                    if (MessageBox.IsOTP == true) {
                        MessageBoxAlert(MessageBox, false, '', false, s);
                    }
                    else if (result.isConfirmation == true && !result.isRedirection) {
                        MessageBoxAlert(MessageBox, false, '', false, s);
                    }
                    else if (result.isRedirectToExternal) {
                        window.open(result.commonStr);
                        return;
                    }
                    else if (result.isRedirection) {
                        if ($('[id^=insur_]').html() == undefined) {
                            MessageBoxAlert(MessageBox, true, result.commonStr, false, s);
                        } else {
                            window.open(result.commonStr2);
                        }
                    }
                    else if (result.commonStr2 !== null) {
                        MessageBoxAlert(MessageBox, true, result.commonStr2, true, s);
                    }
                    else if (result.statuscode == 1) {
                        MessageBoxAlert(MessageBox, false, '', false, s)
                    }
                    else if (s != 0) {
                        OpDetail(s);
                    }
                }
            }).catch(function () {
                preloader.remove();
                console.clear();
            }).fail(function (xhr) {
                preloader.remove();
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {

            });
        }
        var OpenBioMetric = function (oid, refid, BioAuthtype) {
            preloader.load();
            $.post('/OpenBiometric', { ID: oid, OTPRefID: refid, BioAuthtype }, function (result) {
                resultReload(result);
                mdlA.id = 'mdlBiometric';
                mdlA.content = result;
                mdlA.alert(mdlA.size.large);
                $('button.close span,#mdlCancel').unbind().click(function () {
                    mdlA.dispose();
                });

            }).catch(function () {
                //console.clear();
            }).fail(function (xhr) {
                $(_this).attr('checked', Is == false);
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
            });
        }
        var EKYCPopup = function (a) {
            preloader.load();
            $.post('/OpenEKYC', { a }, function (result) {
                resultReload(result);
                mdlA.id = 'mdlMsgbx';
                mdlA.content = result;
                mdlA.options.backdrop = 'static';
                mdlA.alert(mdlA.size.default);
                $('#mdlCancel').click(function () {
                    mdlA.dispose();
                });
            }).catch(function () {
                console.clear();
            }).fail(function (xhr) {
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
            });
        }
        var AEPSInterface = function (t, o) {
            preloader.load();
            $.post('/aeps-interface', { t, o }, function (result) {
                resultReload(result);
                $('#aepsinterface').html(result);

            }).catch(function () {
                console.clear();
            }).fail(function (xhr) {
                $(_this).attr('checked', Is == false);
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
            });
        }
        var AEPSInterfaceN = function (t) {
            preloader.load();
            $.post('/aeps-interface-n', { t }, function (result) {
                resultReload(result);
                $('#aepsinterface').html(result);

            }).catch(function () {
                console.clear();
            }).fail(function (xhr) {
                $(_this).attr('checked', Is == false);
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
            });
        }
        var PSACredentials = function () {
            if ($('#spHidden').val() == 'S') {
                preloader.load();
                $.post('/PSA-Credential', {}, function (result) {
                    resultReload(result);
                    $('#psaSubView').html(result);
                    $('#credCancel').click(function () {
                        $('#psaSubView').html('');
                    });
                    $('#txtUserId').val($('#spHidden').data().psaid);
                    $('#txtPassword').val($('#spHidden').data().psaid);

                }).catch(function () {
                    console.clear();
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
        }
        var PurchageToken = function () {
            preloader.load();
            $.post('/PurchargeToken', function (result) {
                resultReload(result);
                $('#psaSubView').html(result);
                $('#credCancel').click(function () {
                    $('#psaSubView').html('');
                });
                $('#btnPSAToken').unbind().click(function () {
                    DoPSA($(this).html());
                });
            }).catch(function (e) {
            }).fail(function (xhr) {
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
            });

        }
        var MessageBoxAlert = function (MessageBox, IsRedirection, RedirectionURL, IsAutoRedirection, s) {
            preloader.load();
            MessageBox.H = $$host;
            $.ajax({
                type: 'POST',
                url: '/mbox.jsf',
                contentType: 'application/json',
                data: JSON.stringify(MessageBox),
                success: function (result) {
                    resultReload(result);
                    mdlA.id = 'mdlMsgbx';
                    mdlA.content = result;
                    mdlA.options.backdrop = 'static';
                    if (MessageBox.IsOTP === true) {
                        mdlA.alert(mdlA.size.default);
                        $('#btnOTPSubmit').click(function () {
                            if ($('#txtOTP').val() != '') {
                                CallOnboarding(s, $('#txtOTP').val(), $('#txtOTP').data().refid, '',false, 0);
                            }
                            else {
                                $('#txtOTPHelp').html("Enter a valid OTP");
                            }
                        });
                        $('#mdlCancel').click(function () {
                            mdlA.dispose();
                        });
                    } else {
                        mdlA.alert(mdlA.size.large);
                        if (MessageBox.IsCancel == true) {
                            $('#' + MessageBox.CancelID).click(function () {
                                mdlA.dispose();
                            });
                        }
                        if (MessageBox.MBType == MessageBoxType.SUCCESS) {
                            setTimeout(function () {
                                mdlA.dispose();
                            }, 1000);
                        }
                        else {
                            $('#' + MessageBox.ButtonID).click(function () {
                                mdlA.dispose();
                            });
                        }
                        if (IsRedirection == true && RedirectionURL.length > 0) {

                            if (IsAutoRedirection == true) {
                                window.open(RedirectionURL);
                            }
                            else {
                                $('#' + MessageBox.ButtonID).click(function () {
                                    location.href = RedirectionURL;
                                });
                            }
                        } else {
                            if (MessageBox.IsCancel == false) {
                                $('#' + MessageBox.ButtonID).click(function () {
                                    mdlA.dispose();
                                });
                            } else {
                                $('#' + MessageBox.CancelID).click(function () {
                                    mdlA.dispose();
                                });
                            }
                        }
                    }
                },
                statusCode: {
                    500: function () {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    },
                    0: function () {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                },
                error: function (xhr, result) {
                    an.title = "Oops";
                    an.content = result;
                    an.alert(an.type.failed);
                },
                complete: function () {
                    preloader.remove();
                }
            });
        }
        var OpOption = function (s) {
            preloader.load();
            $.post('/OpOptional', { ID: s }, function (result) {
                resultReload(result);
                $('#DivOpOption').html(result);
                if ($('#h2IsCusomerNo').length) {
                    if ($('#txtCust').length) {
                        $($('#txtCust').parent()).remove();
                    }
                } else {
                    if ($('#divCust').length == true) {
                        if ($('#txtCust').length == false) {
                            let $parent = '<div class="form-group"><label class="lbl" for= "txtCust">Customer Mobile Number</label><input aria-describedby="CustomerHelp" class="form-control " id="txtCust" name="txtCust" placeholder="Enter Customer Number" tabindex="1" type="text" value=""><small id="CustomerHelp" class="form-text text-danger  d-none">Invalid Customer</small></div>';
                            $('#divCust').html($parent);
                        }
                    }
                }
            }).catch(function () {
                console.clear();
            }).fail(function (xhr) {
                $(_this).attr('checked', Is == false);
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
            });
        }
        var Dorech = function (btnTxt) {
            if ($('#hidIsLoc').val() !== "-1" && $('#hidIsLoc').val() !== "1") {
                an.title = "Location Error! ";
                an.content = "Please allow location";
                an.alert(an.type.failed);
                LocationUpdate();
                return false;
            }

            var secKey = '';
            var ct = {
                amt: $('#txtAmount'), op: $('#ddlOperator'), mob: $('#txtMobileNo'), btn: $('#btnPay'), o1: $('#txtOption1'), o2: $('#txtOption2'), o3: $('#txtOption3'), o4: $('#txtOption4'), txtSecKey: $('#txtSecKey')
            };

            if (btnTxt !== ct.btn.html())
                return false;
            btnLdr.addClass = 'btn-dark';
            btnLdr.removeClass = 'btn-outline-dark';
            btnLdr.Start(ct.btn, 'Requesting');
            var IsCustNoValidate = $('#txtMobileNo').attr("data-istakecustomernum");
            let IsOptionalIsCustomer = false;
            var len = 0, lenMax = 0, regXAccount = '';
            len = ct.mob.attr('data-length');
            lenMax = ct.mob.attr('data-lengthMax');
            regXAccount = ct.mob.attr('data-regxacc') != undefined ? ct.mob.attr('data-regxacc') : '';

            var isValidLength = ct.mob.val().length >= len && (ct.mob.val().length <= lenMax || lenMax == 0)
            if (regXAccount != '' && isValidLength === true) {
                var patt = new RegExp(regXAccount);
                isValidLength = patt.test(ct.mob.val());
            }
            var IsE = {
                mob: !isValidLength,
                amt: (ct.amt.val() === null || !$v.$numOnly(ct.amt.val())),
                op: ct.op.val() === null || ct.op.val() == 0,
                o1: ct.o1.val() === undefined ? false : (ct.o1.val() == null || ct.o1.val() == '' ? true : false),
                o2: ct.o2.val() === undefined ? false : (ct.o2.val() == null || ct.o2.val() == '' ? true : false),
                o3: ct.o3.val() === undefined ? false : (ct.o3.val() == null || ct.o3.val() == '' ? true : false),
                o4: ct.o4.val() === undefined ? false : (ct.o4.val() == null || ct.o4.val() == '' ? true : false),
                custNo: IsCustNoValidate === true ? $('#txtCust').val() == "" : IsCustNoValidate,
                txtSecKey: ct.txtSecKey.val() === undefined ? false : (ct.txtSecKey.val() == null || ct.txtSecKey.val() == '' ? true : false)
            }

            $v.showErrorFor(ct.amt, 'Amount is  numeric mandatory field', IsE.amt);
            if (IsE.amt === false) {
                let exactness = parseInt($('#txtAmount').attr('data-exactness'));
                let exactamount = parseInt($('#txtAmount').attr('data-exactamount'));
                let IsExactErr = false;
                let exactMsg = '';
                if (exactness == 1) {
                    if (parseInt($('#txtAmount').val()) !== exactamount) {
                        IsExactErr = true;
                        exactMsg = 'Only exact Amount ' + exactamount + ' is allowed';
                    }
                } else if (exactness == 2) {
                    if (parseInt($('#txtAmount').val()) < exactamount) {
                        IsExactErr = true;
                        exactMsg = 'Only exact and above from Amount ' + exactamount + ' is allowed';
                    }
                }
                else if (exactness == 3) {
                    if (parseInt($('#txtAmount').val()) > exactamount) {
                        IsExactErr = true;
                        exactMsg = 'Only exact and below from Amount ' + exactamount + ' is allowed';
                    }
                }
                if (IsExactErr === true) {
                    $v.showErrorFor(ct.amt, exactMsg, IsExactErr);
                    return;
                }
            }
            $v.showErrorFor(ct.op, 'Operator is required, select Operator from list! (<i>In case of list is empty add Operator first</i>)', IsE.op);
            let AccountParamMsg = 'Please enter a valid ' + $('label[for^="txtMobileNo"]').html() + '.';
            if ($('#txtMobileNo').attr("data-accountremak") != '') {
                AccountParamMsg = $('#txtMobileNo').attr("data-accountremak");
            } else {

                if (len > 0 && lenMax > 0) {
                    if (len == lenMax) {
                        AccountParamMsg = AccountParamMsg + 'Length should be ' + len;
                    }
                    else {
                        AccountParamMsg = AccountParamMsg + 'Length should be between ' + len + ' and ' + lenMax;
                    }
                }
                else {
                    if (len > 0) {
                        AccountParamMsg = AccountParamMsg + 'Length is greater than or equal to ' + len;
                    }
                    if (lenMax > 0) {
                        AccountParamMsg = AccountParamMsg + 'Length is less than or equal to ' + lenMax;
                    }
                }
            }

            $v.showErrorFor(ct.mob, AccountParamMsg, IsE.mob);
            //$v.showErrorFor(ct.mob, 'Mobile number is mandatory field and length should be between ' + len + ' and ' + lenMax, IsE.mob);
            var O1 = '', O2 = '', O3 = '', O4 = '', custNo = '';
            if (ct.o1.val() !== undefined) {
                let paramMsg = $('[for="' + ct.o1.attr('id') + '"]').html() + '  is mandatory';
                if ($('#txtOption1').data().params !== undefined) {
                    let paramData = $('#txtOption1').data().params;
                    IsOptionalIsCustomer = IsOptionalIsCustomer == false ? $('#txtOption1').data().params.isCustomerNo : IsOptionalIsCustomer;
                    if (IsOptionalIsCustomer == true && custNo == '') {
                        custNo = $('#txtOption1').val();
                    }
                    if (paramData.regEx !== '') {
                        let patt = new RegExp(paramData.regEx);
                        if (!patt.test(ct.o1.val())) {
                            IsE.o1 = true;
                        }
                    }
                    else {
                        IsE.o1 = !(ct.o1.val().length >= paramData.minLength && (ct.o1.val().length <= paramData.maxLength || paramData.maxLength == 0))
                    }
                    paramMsg = 'Please enter a valid ' + paramData.paramName + '. ';

                    if (paramData.minLength > 0 && paramData.maxLength > 0) {
                        if (paramData.minLength == paramData.maxLength) {
                            paramMsg += 'Length should be ' + paramData.minLength;
                        }
                        else {
                            paramMsg += 'Length should be between ' + paramData.minLength + ' and ' + paramData.maxLength;
                        }
                    }
                    else {
                        if (paramData.minLength > 0) {
                            paramMsg += 'Length is greater than or equal to ' + paramData.minLength;
                        }
                        if (paramData.maxLength > 0) {
                            paramMsg += 'Length is less than or equal to ' + paramData.maxLength;
                        }
                    }
                    if (paramData.remark != '') {
                        paramMsg = paramData.remark;
                    }
                }
                $v.showErrorFor(ct.o1, paramMsg, IsE.o1);
                O1 = ct.o1.val();
            }
            if (ct.o2.val() !== undefined) {
                let paramMsg = $('[for="' + ct.o2.attr('id') + '"]').html() + '  is mandatory';
                if ($('#txtOption2').data().params !== undefined) {
                    let paramData = $('#txtOption2').data().params;
                    IsOptionalIsCustomer = IsOptionalIsCustomer == false ? $('#txtOption2').data().params.isCustomerNo : IsOptionalIsCustomer;
                    if (IsOptionalIsCustomer == true && custNo == '') {
                        custNo = $('#txtOption2').val();
                    }
                    if (paramData.regEx !== '') {
                        let patt = new RegExp(paramData.regEx);
                        if (!patt.test(ct.o2.val())) {
                            IsE.o2 = true;
                        }
                    }
                    else {
                        IsE.o2 = !(ct.o2.val().length >= paramData.minLength && (ct.o2.val().length <= paramData.maxLength || paramData.maxLength == 0))
                    }
                    paramMsg = 'Please enter a valid ' + paramData.paramName + '. ';

                    if (paramData.minLength > 0 && paramData.maxLength > 0) {
                        if (paramData.minLength == paramData.maxLength) {
                            paramMsg += 'Length should be ' + paramData.minLength;
                        }
                        else {
                            paramMsg += 'Length should be between ' + paramData.minLength + ' and ' + paramData.maxLength;
                        }
                    }
                    else {
                        if (paramData.minLength > 0) {
                            paramMsg += 'Length is greater than or equal to ' + paramData.minLength;
                        }
                        if (paramData.maxLength > 0) {
                            paramMsg += 'Length is less than or equal to ' + paramData.maxLength;
                        }
                    }
                    if (paramData.remark != '') {
                        paramMsg = paramData.remark;
                    }
                }
                $v.showErrorFor(ct.o2, paramMsg, IsE.o2);
                O2 = ct.o2.val();
            }
            if (ct.o3.val() !== undefined) {
                let paramMsg = $('[for="' + ct.o3.attr('id') + '"]').html() + '  is mandatory';
                if ($('#txtOption3').data().params !== undefined) {
                    let paramData = $('#txtOption3').data().params;
                    IsOptionalIsCustomer = IsOptionalIsCustomer == false ? $('#txtOption3').data().params.isCustomerNo : IsOptionalIsCustomer;
                    if (IsOptionalIsCustomer == true && custNo == '') {
                        custNo = $('#txtOption3').val();
                    }
                    if (paramData.regEx !== '') {
                        let patt = new RegExp(paramData.regEx);
                        if (!patt.test(ct.o3.val())) {
                            IsE.o3 = true;
                        }
                    }
                    else {
                        IsE.o3 = !(ct.o3.val().length >= paramData.minLength && (ct.o3.val().length <= paramData.maxLength || paramData.maxLength == 0))
                    }
                    paramMsg = 'Please enter a valid ' + paramData.paramName + '. ';

                    if (paramData.minLength > 0 && paramData.maxLength > 0) {
                        if (paramData.minLength == paramData.maxLength) {
                            paramMsg += 'Length should be ' + paramData.minLength;
                        }
                        else {
                            paramMsg += 'Length should be between ' + paramData.minLength + ' and ' + paramData.maxLength;
                        }
                    }
                    else {
                        if (paramData.minLength > 0) {
                            paramMsg += 'Length is greater than or equal to ' + paramData.minLength;
                        }
                        if (paramData.maxLength > 0) {
                            paramMsg += 'Length is less than or equal to ' + paramData.maxLength;
                        }
                    }
                    if (paramData.remark != '') {
                        paramMsg = paramData.remark;
                    }
                }
                $v.showErrorFor(ct.o3, paramMsg, IsE.o3);
                O3 = ct.o3.val();
            }
            if (ct.o4.val() !== undefined) {
                let paramMsg = $('[for="' + ct.o4.attr('id') + '"]').html() + '  is mandatory';
                if ($('#txtOption4').data().params !== undefined) {
                    let paramData = $('#txtOption4').data().params;
                    IsOptionalIsCustomer = IsOptionalIsCustomer == false ? $('#txtOption4').data().params.isCustomerNo : IsOptionalIsCustomer;
                    if (IsOptionalIsCustomer == true && custNo == '') {
                        custNo = $('#txtOption4').val();
                    }
                    if (paramData.regEx !== '') {
                        let patt = new RegExp(paramData.regEx);
                        if (!patt.test(ct.o4.val())) {
                            IsE.o4 = true;
                        }
                    }
                    else {
                        IsE.o4 = !(ct.o4.val().length >= paramData.minLength && (ct.o4.val().length <= paramData.maxLength || paramData.maxLength == 0))
                    }
                    paramMsg = 'Please enter a valid ' + paramData.paramName + '. ';

                    if (paramData.minLength > 0 && paramData.maxLength > 0) {
                        if (paramData.minLength == paramData.maxLength) {
                            paramMsg += 'Length should be ' + paramData.minLength;
                        }
                        else {
                            paramMsg += 'Length should be between ' + paramData.minLength + ' and ' + paramData.maxLength;
                        }
                    }
                    else {
                        if (paramData.minLength > 0) {
                            paramMsg += 'Length is greater than or equal to ' + paramData.minLength;
                        }
                        if (paramData.maxLength > 0) {
                            paramMsg += 'Length is less than or equal to ' + paramData.maxLength;
                        }
                    }
                    if (paramData.remark != '') {
                        paramMsg = paramData.remark;
                    }
                }
                $v.showErrorFor(ct.o4, paramMsg, IsE.o4);
                O4 = ct.o4.val();
            }
            if (IsCustNoValidate === true && IsOptionalIsCustomer == false) {
                let patt = new RegExp('^[0-9]{10}$');
                if (!patt.test($('#txtCust').val())) {
                    IsE.custNo = true;
                }
                $v.showErrorFor($('#txtCust'), $('[for="txtCust"]').html() + ' is mandatory', IsE.custNo);
            }
            if (IsOptionalIsCustomer == false) {
                custNo = $('#txtCust').val();
            } else {
                IsE.custNo = false;
            }

            if (ct.txtSecKey.val() !== undefined) {
                $v.showErrorFor(ct.txtSecKey, 'SecureKey is mandatory', IsE.custNo);
                secKey = ct.txtSecKey.val();
            }

            IsE.err = (IsE.amt || IsE.op || IsE.mob || IsE.o1 || IsE.o2 || IsE.o3 || IsE.o4 || IsE.custNo || IsE.txtSecKey);
            if (IsE.err == true) {
                btnLdr.Stop(ct.btn);
                return false;
            }
            if ($('#billfetchdiv #dv_CName span').length) {
                if ($('#billfetchdiv #dv_CName span').text().trim() != '' && O4 == '') {
                    O4 = $('#billfetchdiv #dv_CName span').text().trim();
                }
            }
            if ($('[name="chbBillDates"]:checked').length) {
                Amt = $('[name="chbBillDates"]:checked').data().amount;
                O1 = $('[name="chbBillDates"]:checked').data().duedate;
                O2 = $('[name="chbBillDates"]:checked').data().datevalue;
                if ($('[name="chbBillDates"]:checked').data().isfull == true) {
                    O1 = $('#billfetchdiv #dv_DueDate span').html().trim();
                }
            }
            var fetchBillID = $('#billfetchdiv').attr('data-fbid') === undefined ? 0 : $('#billfetchdiv').attr('data-fbid');
            let bccf = 0;
            if ($('#btnPay').attr('data-bccf') != undefined) {
                bccf = parseInt($('#btnPay').attr('data-bccf'));
            }
            let PaymentMode = '';
            if ($('#ddlBPayModes').length == 1) {
                PaymentMode = $('#ddlBPayModes').val();
            }
            var RechReq =
            {
                OID: ct.op.val(), Mob: ct.mob.val(), Amt: ct.amt.val(), O1: O1, O2: O2, O3: O3, O4: O4, CustNo: custNo, lat: $('#hidLat').val(), lng: $('#hidLong').val(), SecKey: secKey, ReferenceID: $('#hidReferenceID').val(), FetchBillID: fetchBillID, CCFAmount: bccf, PaymentMode
            }
            an.id = 'myalertPayment';
            an.parent = $('#alertmsg');
            $.ajax({
                type: 'POST',
                url: '/dorech',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify(RechReq),
                success: function (result) {
                    resultReload(result);
                    RechMsg(result);
                    var l = location.href.split('/');
                    var s = l[l.length - 1];
                    $('button.close span,#mdlCancel,#btncancel').unbind().click(function () {
                        rech(s);
                        mdlA.dispose();
                    });
                },
                statusCode: {
                    500: function () {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    },
                    0: function () {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                },
                error: function (xhr, result) {
                    an.title = "Oops! Error";
                    an.content = result;
                    an.alert(an.type.failed);
                    if (result === 'parsererror') {
                        reload();
                    }
                },
                complete: function () {
                    btnLdr.Stop(ct.btn);
                }
            });
        }
        var RechMsg = result => {
            let title = getKeyByValue(StatusText, result.statuscode);
            result.msg = result.msg.indexOf('NRAF-0') > -1 ? `<div>Dear Partner Currently <span class="text-info">${$('#ddlOperator option:selected').text()} </span> Lapu Route is Down.Please enable Real API Route to Recharge <span class="text-info">${$('#ddlOperator option:selected').text()} </span> instantly any time.<br/>प्रिय  विक्रेता   अभी  <span class="text-info">${$('#ddlOperator option:selected').text()}</span> का  रिचार्ज  सिम रूट से बंद है . अभी  रिचार्ज  करने  लिए  Backup Route को  Activate करें.</div><div class="mt-2 mb-2"><span class="btn btn-sm btn-danger" id="btnIsRealAPI">ENABLE REAL API</span></div>` : result.msg;
            let IsBBPSInStaging = $('#txtMobileNo').attr('data-isBBPSInStaging') != undefined ? $('#txtMobileNo').attr('data-isBBPSInStaging') : false;
            let dataPaymode = $('#btnPay').attr('data-paymode');
            let databccf = $('#btnPay').attr('data-bccf');
            var paymentConfirmationModel = { IsBBPSInStaging: IsBBPSInStaging, Statuscode: result.statuscode, Msg: result.msg, title: title, LiveID: result.commonStr2, TransactionID: (IsBBPSInStaging == true ? result.commonStr4 : result.commonStr), Amount: $('#txtAmount').val(), BillerID: $('#txtMobileNo').attr('data-biilerid'), BillerName: $('#ddlOperator option:selected').text(), CustomerName: $('#dv_CName span').text(), CustomerMobile: $('#txtCust').val(), AccountNoKey: $('#txtMobileNo').attr('placeholder'), AccountNo: $('#txtMobileNo').val(), TransactionDate: result.commonStr3, PayMode: (dataPaymode == undefined ? 'CASH' : dataPaymode), CCF: (databccf == undefined ? 0 : databccf) };
            $.ajax({
                type: 'POST',
                url: '/RechargeConfirmationPopUp',
                contentType: 'application/json',
                data: JSON.stringify(paymentConfirmationModel),
                success: function (result) {
                    mdlA.id = "RechMsg";
                    mdlA.content = result;
                    mdlA.alert(mdlA.size.default);
                    setTimeout(function () {
                        $('button.close span,#btncancel').unbind().click(function () {
                            reload();
                            mdlA.dispose();
                        });
                    }, 500);

                },
                statusCode: {
                    500: function () {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    },
                    0: function () {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                },
                error: function (xhr, result) {
                    an.title = "Oops! Error";
                    an.content = result;
                    an.alert(an.type.failed);

                },
                complete: function () {
                    // btnLdr.Stop(ct.btn);
                }
            });


            $('#btncancel').click(() => mdlA.dispose());
            $('#btnIsRealAPI').click(() => {
                $.post('/RealAPI-Status', param = true)
                    .done(function (result) {
                        if (result.statuscode === an.type.failed) {
                            an.title = "Oops";
                            an.content = result.msg;
                            an.alert(result.statuscode);
                        }
                        else if (result.statuscode === an.type.success) {
                            an.title = "Well done";
                            an.content = result.msg;
                            an.alert(result.statuscode);
                            $('#btnIsRealAPI').toggleClass('btn-success btn-danger');
                            $('#btnIsRealAPI').html(param.status == true ? "DISABLE REAL API" : "ENABLE REAL API");
                            $('#btncancel').click();
                        }
                    })
            });
        };
        var DoPSA = function (btnTxt) {

            var secKey = '';
            var ct = {
                amt: $('#txtNoOfToken'), op: $('input[name=tokentype]:checked'), btn: $('#btnPSAToken')
            };
            if (btnTxt !== ct.btn.html())
                return false;
            btnLdr.addClass = 'btn-dark';
            btnLdr.removeClass = 'btn-outline-dark';
            btnLdr.Start(ct.btn, 'Requesting');
            var psaid = $('#spHidden').data().psaid;
            var IsE = {
                amt: (ct.amt.val() === null || !$v.$numOnly(ct.amt.val())) || parseInt(ct.amt.val()) < 1,
                op: ct.op.val() == undefined || ct.op.val() === null,
                psa: psaid == undefined || psaid == null || psaid == ''
            }
            $v.showErrorFor($('#hidopHelp'), 'Choose Token Type!', IsE.op);
            $v.showErrorFor(ct.amt, 'No of Token required !', IsE.amt);
            $v.showErrorFor(ct.op, 'Currently PSA is not active!', IsE.psa);
            IsE.err = (IsE.amt || IsE.op || IsE.psa);
            if (IsE.err) {
                btnLdr.Stop(ct.btn);
                return false;
            }
            var RechReq =
            {
                OID: ct.op.val(), Mob: psaid, Amt: ct.amt.val()
            }
            an.id = 'myalert';

            an.parent = $('#alertmsg');
            $.ajax({
                type: 'POST',
                url: '/dopsa',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify(RechReq),
                success: function (result) {
                    resultReload(result);
                    var msg = '<h4 class="alert-heading ' + an.getTColor(result.statuscode) + '"> ' + result.commonStr + '!</h4><p class="mb-0 font-weight-bold">' + result.msg + '</p>';
                    mdlA.id = 'mymodal1';
                    mdlA.content = '<div class="col-md-12"><button type ="button" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></button>'
                        + msg + '</div>';
                    mdlA.options.keyboard = false;
                    mdlA.alert(mdlA.size.small);
                    $('button.close span,#mdlCancel').unbind().click(function () {
                        mdlA.dispose();
                    });
                    var l = location.href.split('/');
                    var s = l[l.length - 1];
                    TopFive(s);
                },
                statusCode: {
                    500: function () {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    },
                    0: function () {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                },
                error: function (xhr, result) {
                    an.title = "Oops! Error";
                    an.content = result;
                    an.alert(an.type.failed);
                    if (result === 'parsererror') {
                        reload();
                    }
                },
                complete: function () {
                    btnLdr.Stop(ct.btn);
                }
            });
        }
        var openPlan = function (o, c) {
            preloader.load();
            $.post('/RechSimpPlans', { o: o, c: c }, function (result) {
                resultReload(result);
                mdlA.id = 'mdlcircle';
                mdlA.content = result;
                mdlA.alert(mdlA.size.large);
                $('button.close span,#mdlCancel').unbind().click(function () {
                    mdlA.dispose();
                });
                $('[id^=spnOferAmt]').unbind().click(function () {
                    var amt = 0;
                    amt = $(this).attr('id').split('_')[1];
                    $('#txtAmount').val(amt);
                    mdlA.dispose();
                    setTimeout(function () {
                        $('#txtAmount').focus();
                    }, 1000);

                });
            }).catch(function () {
                //console.clear();
            }).fail(function (xhr) {
                $(_this).attr('checked', Is == false);
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
            });

        }
        var openRoffer = function (o, a) {
            preloader.load();
            $.post('/roffer', { o, a }, function (result) {
                resultReload(result);
                mdlA.id = 'mdlroffer';
                mdlA.content = result;
                mdlA.alert(mdlA.size.default);
                $('button.close span,#mdlCancel').unbind().click(function () {
                    mdlA.dispose();
                });
                $('[id^=spnOferAmt]').unbind().click(function () {
                    var amt = 0;
                    amt = $(this).attr('id').split('_')[1];
                    $('#txtAmount').val(amt);
                    mdlA.dispose();
                    setTimeout(function () {
                        $('#txtAmount').focus();
                    }, 1000);

                });
            }).catch(function () {
                //console.clear();
            }).fail(function (xhr) {
                $(_this).attr('checked', Is == false);
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
            });

        }
        var openDthPlan = function (o) {
            preloader.load();
            $.post('/dthsimplan', { o }, function (result) {
                resultReload(result);
                mdlA.id = 'mdlCustInfo';
                mdlA.content = result;
                mdlA.alert(mdlA.size.xlarge);
                $('button.close span,#mdlCancel').unbind().click(function () {
                    mdlA.dispose();
                });
                $('[id^=spnOferAmt]').unbind().click(function () {
                    var amt = 0;
                    amt = $(this).attr('id').split('_')[1];
                    $('#txtAmount').val(amt);
                    mdlA.dispose();
                    setTimeout(function () {
                        $('#txtAmount').focus();
                    }, 1000);

                });
            }).catch(function () {
                //console.clear();
            }).fail(function (xhr) {
                $(_this).attr('checked', Is == false);
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
            });

        }
        var openDthCustInfo = function (o, a) {
            preloader.load();
            $.post('/dthcust', { o, a }, function (result) {
                resultReload(result);
                mdlA.id = 'mdlCustInfo';
                mdlA.content = result;
                mdlA.alert(mdlA.size.default);
                $('button.close span,#mdlCancel').unbind().click(function () {
                    mdlA.dispose();
                });
            }).catch(function () {
                //console.clear();
            }).fail(function (xhr) {
                $(_this).attr('checked', Is == false);
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
            });

        }
        var checkCircle = function (n, f) {
            preloader.load();
            $.post('/check-num-s', { n })
                .done(function (result) {
                    resultReload(result);
                    if (result.statuscode !== undefined) {
                        if (result.statuscode == an.type.failed) {
                            an.title = "Oops";
                            an.content = result.msg;
                            an.alert(result.statuscode);
                        }
                        else if (result.statuscode == an.type.success) {
                            if (f != undefined)
                                f(result.o, result.c);
                        }
                    }
                })
                .catch(function (xhr, e, msg) {
                    an.title = 'Oops';
                    an.content = 'An error has been occured during request.Reload again!'
                    an.alert(an.type.failed);
                })
                .fail(function (xhr) {
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                })
                .always(function () {
                    preloader.remove();
                });
        }
        var fetchBill = function () {
            $('#billfetchdiv').attr('data-fbid', '');
            if ($('#hidIsLoc').val() !== "-1" && $('#hidIsLoc').val() !== "1") {
                an.title = "Location Error! ";
                an.content = "Please allow location";
                an.alert(an.type.failed);
                LocationUpdate();
                return false;
            }
            var ct = {
                op: $('#ddlOperator'), mob: $('#txtMobileNo'), btn: $('#btnFetchBill'), o1: $('#txtOption1'), o2: $('#txtOption2'), o3: $('#txtOption3'), o4: $('#txtOption4'), txtCust: $('#txtCust')
            };
            btnLdr.addClass = 'btn-dark';
            btnLdr.removeClass = 'btn-outline-dark';
            btnLdr.Start(ct.btn, 'Fetching !');
            var len = 0;
            var len = 0, lenMax = 0, regXAccount = '';
            len = ct.mob.attr('data-length');
            lenMax = ct.mob.attr('data-lengthMax');
            regXAccount = ct.mob.attr('data-regxacc') != undefined ? ct.mob.attr('data-regxacc') : '';

            var isValidLength = ct.mob.val().length >= len && (ct.mob.val().length <= lenMax || lenMax == 0)
            if (regXAccount != '' && isValidLength === true) {
                var patt = new RegExp(regXAccount);
                isValidLength = patt.test(ct.mob.val());
            }
            var IsE = {
                mob: !isValidLength,
                op: ct.op.val() === null || ct.op.val() == 0,
                o1: ct.o1.val() === undefined ? false : (ct.o1.val() == null || ct.o1.val() == '' ? true : false),
                o2: ct.o2.val() === undefined ? false : (ct.o2.val() == null || ct.o2.val() == '' ? true : false),
                o3: ct.o3.val() === undefined ? false : (ct.o3.val() == null || ct.o3.val() == '' ? true : false),
                o4: ct.o4.val() === undefined ? false : (ct.o4.val() == null || ct.o4.val() == '' ? true : false),
                Cno: ct.txtCust.val() != undefined ? false : (ct.txtCust.val() == null || ct.txtCust.val() == '' ? true : false)
            }
            $v.showErrorFor(ct.op, 'Operator is required, select Operator from list! (<i>In case of list is empty add Operator first</i>)', IsE.op);

            let AccountParamMsg = 'Please enter a valid ' + $('label[for^="txtMobileNo"]').html() + '.';
            if (regXAccount !== '') {
                let patt = new RegExp(regXAccount);
                if (!patt.test(ct.mob.val())) {
                    IsE.mob = true;
                }
            }
            if ($('#txtMobileNo').attr("data-accountremak") != '') {
                AccountParamMsg = $('#txtMobileNo').attr("data-accountremak");
            } else {
                if (len > 0 && lenMax > 0) {
                    if (len == lenMax) {
                        AccountParamMsg = AccountParamMsg + 'Length should be ' + len;
                    }
                    else {
                        AccountParamMsg = AccountParamMsg + 'Length should be between ' + len + ' and ' + lenMax;
                    }
                }
                else {
                    if (len > 0) {
                        AccountParamMsg = AccountParamMsg + 'Length is greater than or equal to ' + len;
                    }
                    if (lenMax > 0) {
                        AccountParamMsg = AccountParamMsg + 'Length is less than or equal to ' + lenMax;
                    }
                }
            }

            $v.showErrorFor(ct.mob, AccountParamMsg, IsE.mob);
            let IsOptionalIsCustomer = false;
            var O1 = '', O2 = '', O3 = '', O4 = '', Cno = '';
            if (ct.o1.val() !== undefined) {
                let paramMsg = 'Please enter a valid ' + $('[for="' + ct.o1.attr('id') + '"]').html() + '.';
                if ($('#txtOption1').data().params !== undefined) {
                    let paramData = $('#txtOption1').data().params;
                    IsOptionalIsCustomer = IsOptionalIsCustomer == false ? $('#txtOption1').data().params.isCustomerNo : IsOptionalIsCustomer;
                    if (IsOptionalIsCustomer == true && Cno == '') {
                        Cno = $('#txtOption1').val();
                    }
                    if (paramData.regEx !== '') {
                        let patt = new RegExp(paramData.regEx);
                        if (!patt.test(ct.o1.val())) {
                            IsE.o1 = true;
                        }
                    }
                    else {
                        IsE.o1 = !(ct.o1.val().length >= paramData.minLength && (ct.o1.val().length <= paramData.maxLength || paramData.maxLength == 0))
                    }
                    paramMsg = 'Please enter a valid ' + paramData.paramName + '. ';

                    if (paramData.minLength > 0 && paramData.maxLength > 0) {
                        if (paramData.minLength == paramData.maxLength) {
                            paramMsg += 'Length should be ' + paramData.minLength;
                        }
                        else {
                            paramMsg += 'Length should be between ' + paramData.minLength + ' and ' + paramData.maxLength;
                        }
                    }
                    else {
                        if (paramData.minLength > 0) {
                            paramMsg += 'Length is greater than or equal to ' + paramData.minLength;
                        }
                        if (paramData.maxLength > 0) {
                            paramMsg += 'Length is less than or equal to ' + paramData.maxLength;
                        }
                    }
                    if (paramData.remark != '') {
                        paramMsg = paramData.remark;
                    }
                }
                $v.showErrorFor(ct.o1, paramMsg, IsE.o1);
                O1 = ct.o1.val();
            }
            if (ct.o2.val() !== undefined) {
                let paramMsg = 'Please enter a valid ' + $('[for="' + ct.o2.attr('id') + '"]').html() + '  is mandatory';
                if ($('#txtOption2').data().params !== undefined) {
                    let paramData = $('#txtOption2').data().params;
                    IsOptionalIsCustomer == false ? $('#txtOption2').data().params.isCustomerNo : IsOptionalIsCustomer;
                    if (IsOptionalIsCustomer == true && Cno == '') {
                        Cno = $('#txtOption2').val();
                    }
                    if (paramData.regEx !== '') {
                        let patt = new RegExp(paramData.regEx);
                        if (!patt.test(ct.o2.val())) {
                            IsE.o2 = true;
                        }
                    }
                    else {
                        IsE.o2 = !(ct.o2.val().length >= paramData.minLength && (ct.o2.val().length <= paramData.maxLength || paramData.maxLength == 0))
                    }
                    paramMsg = 'Please enter a valid ' + paramData.paramName + '. ';

                    if (paramData.minLength > 0 && paramData.maxLength > 0) {
                        if (paramData.minLength == paramData.maxLength) {
                            paramMsg += 'Length should be ' + paramData.minLength;
                        }
                        else {
                            paramMsg += 'Length should be between ' + paramData.minLength + ' and ' + paramData.maxLength;
                        }
                    }
                    else {
                        if (paramData.minLength > 0) {
                            paramMsg += 'Length is greater than or equal to ' + paramData.minLength;
                        }
                        if (paramData.maxLength > 0) {
                            paramMsg += 'Length is less than or equal to ' + paramData.maxLength;
                        }
                    }
                    if (paramData.remark != '') {
                        paramMsg = paramData.remark;
                    }
                }
                $v.showErrorFor(ct.o2, paramMsg, IsE.o2);
                O2 = ct.o2.val();
            }
            if (ct.o3.val() !== undefined) {
                let paramMsg = $('[for="' + ct.o3.attr('id') + '"]').html() + '  is mandatory';
                if ($('#txtOption3').data().params !== undefined) {
                    let paramData = $('#txtOption3').data().params;
                    IsOptionalIsCustomer == false ? $('#txtOption3').data().params.isCustomerNo : IsOptionalIsCustomer;
                    if (IsOptionalIsCustomer == true && Cno == '') {
                        Cno = $('#txtOption3').val();
                    }
                    if (paramData.regEx !== '') {
                        let patt = new RegExp(paramData.regEx);
                        if (!patt.test(ct.o3.val())) {
                            IsE.o3 = true;
                        }
                    }
                    else {
                        IsE.o3 = !(ct.o3.val().length >= paramData.minLength && (ct.o3.val().length <= paramData.maxLength || paramData.maxLength == 0))
                    }
                    paramMsg = 'Please enter a valid ' + paramData.paramName + '. ';

                    if (paramData.minLength > 0 && paramData.maxLength > 0) {
                        if (paramData.minLength == paramData.maxLength) {
                            paramMsg += 'Length should be ' + paramData.minLength;
                        }
                        else {
                            paramMsg += 'Length should be between ' + paramData.minLength + ' and ' + paramData.maxLength;
                        }
                    }
                    else {
                        if (paramData.minLength > 0) {
                            paramMsg += 'Length is greater than or equal to ' + paramData.minLength;
                        }
                        if (paramData.maxLength > 0) {
                            paramMsg += 'Length is less than or equal to ' + paramData.maxLength;
                        }
                    }
                    if (paramData.remark != '') {
                        paramMsg = paramData.remark;
                    }
                }
                $v.showErrorFor(ct.o3, paramMsg, IsE.o3);
                O3 = ct.o3.val();
            }
            if (ct.o4.val() !== undefined) {
                let paramMsg = $('[for="' + ct.o4.attr('id') + '"]').html() + '  is mandatory';
                if ($('#txtOption4').data().params !== undefined) {
                    let paramData = $('#txtOption3').data().params;
                    IsOptionalIsCustomer == false ? $('#txtOption4').data().params.isCustomerNo : IsOptionalIsCustomer;
                    if (IsOptionalIsCustomer == true && Cno == '') {
                        Cno = $('#txtOption4').val();
                    }
                    if (paramData.regEx !== '') {
                        let patt = new RegExp(paramData.regEx);
                        if (!patt.test(ct.o4.val())) {
                            IsE.o4 = true;
                        }
                    }
                    else {
                        IsE.o4 = !(ct.o4.val().length >= paramData.minLength && (ct.o4.val().length <= paramData.maxLength || paramData.maxLength == 0))
                    }
                    paramMsg = 'Please enter a valid ' + paramData.paramName + '. ';

                    if (paramData.minLength > 0 && paramData.maxLength > 0) {
                        if (paramData.minLength == paramData.maxLength) {
                            paramMsg += 'Length should be ' + paramData.minLength;
                        }
                        else {
                            paramMsg += 'Length should be between ' + paramData.minLength + ' and ' + paramData.maxLength;
                        }
                    }
                    else {
                        if (paramData.minLength > 0) {
                            paramMsg += 'Length is greater than or equal to ' + paramData.minLength;
                        }
                        if (paramData.maxLength > 0) {
                            paramMsg += 'Length is less than or equal to ' + paramData.maxLength;
                        }
                    }
                    if (paramData.remark != '') {
                        paramMsg = paramData.remark;
                    }
                }
                $v.showErrorFor(ct.o4, paramMsg, IsE.o4);
                O4 = ct.o4.val();
            }
            if (IsOptionalIsCustomer == false) {
                if (ct.txtCust.val() != undefined) {
                    let patt = new RegExp('^[0-9]{10}$');
                    if (!patt.test($('#txtCust').val())) {
                        IsE.Cno = true;
                    }
                    $v.showErrorFor(ct.txtCust, 'Customer number is mandatory', IsE.Cno);
                    Cno = ct.txtCust.val();
                }
            } else {
                IsE.Cno = false;
            }
            if ($('#hidLat').val() == '' || $('#hidLong').val() == '') {
                btnLdr.Stop(ct.btn);
                an.title = 'Oops';
                an.content = 'Allow location from your browser';
                an.alert(an.type.failed);
                return false;
            }

            IsE.err = (IsE.amt || IsE.op || IsE.mob || IsE.o1 || IsE.o2 || IsE.o3 || IsE.o4 || IsE.Cno);
            if (IsE.err == true) {
                btnLdr.Stop(ct.btn);
                return false;
            }
            /*validations*/
            $('#dv_AInfo').addClass('d-none');
            var TransactionServiceReq = new Object();
            TransactionServiceReq.OID = $('#ddlOperator').val();
            TransactionServiceReq.AccountNo = $('#txtMobileNo').val();
            TransactionServiceReq.Optional1 = O1;
            TransactionServiceReq.Optional2 = O2;
            TransactionServiceReq.Optional3 = O3;
            TransactionServiceReq.Optional4 = O4;
            TransactionServiceReq.CustomerNumber = Cno;
            TransactionServiceReq.GEOCode = $('#hidLat').val() + ',' + $('#hidLong').val();
            $.ajax({
                type: 'POST',
                url: '/FetchBill',
                contentType: 'application/json',
                data: JSON.stringify(TransactionServiceReq),
                success: function (result) {
                    resultReload(result);
                    //Logic For Dispaly FetchBill Response
                    $('#billfetchdiv .PDAx').removeClass('d-none');
                    $('#billfetchdiv #showBillMsg').addClass('d-none');
                    $('#billfetchdiv #dv_CName').addClass('d-none');
                    $('#billfetchdiv #dv_DueDate').addClass('d-none');
                    $('#billfetchdiv #dv_BillNo').addClass('d-none');
                    $('#billfetchdiv #dv_BillDate').addClass('d-none');
                    $('#billfetchdiv #dv_BillPeriod').addClass('d-none');
                    $("#txtAmount").closest('div').addClass('d-none');
                    $('#txtAmount').attr('disabled', 'disabled');
                    $('#hidReferenceID').val(result.refferenceID);
                    $('#btnPay').addClass('d-none');
                    $('#btnFetchBill').removeClass('d-none');
                    $('#billfetchdiv').attr('data-fbid', result.fetchBillID);

                    if (result.customerName != '' && result.customerName != null) {
                        $('#billfetchdiv #dv_CName').removeClass('d-none');
                        $('#billfetchdiv #dv_CName span').html(result.customerName);
                    }
                    if (result.billNumber != '' && result.billNumber != null) {
                        $('#billfetchdiv #dv_BillNo').removeClass('d-none');
                        $('#billfetchdiv #dv_BillNo span').html(result.billNumber);
                    }
                    if (result.billDate != '' && result.billDate != null) {
                        $('#billfetchdiv #dv_BillDate').removeClass('d-none');
                        $('#billfetchdiv #dv_BillDate span').html(result.billDate);
                    }
                    if (result.dueDate != '' && result.dueDate != null) {
                        $('#billfetchdiv #dv_DueDate').removeClass('d-none');
                        $('#billfetchdiv #dv_DueDate span').html(result.dueDate);
                    }
                    if (result.billPeriod != '' && result.billPeriod != null) {
                        $('#billfetchdiv #dv_BillPeriod').removeClass('d-none');
                        $('#billfetchdiv #dv_BillPeriod span').html(result.billPeriod);
                    }
                    $('#dv_BillPeriod').addClass('d-none');
                    $('#dv_BillMonth').addClass('d-none');
                    $('#dv_BPaymentMode').addClass('d-none');
                    $('#dv_BillerID').addClass('d-none');

                    $('#dv_BillerID span').html(ct.mob.attr('data-biilerid') != undefined ? ct.mob.attr('data-biilerid') : '');
                    if (result.billDates != null && result.billDates.length > 0) {
                        for (let iBD = 0; iBD < result.billDates.length; iBD++) {
                            var dvRow = document.createElement('div');
                            dvRow.setAttribute("class", "row");
                            var dvBD = document.createElement('div');
                            dvBD.setAttribute('class', 'col-md-4');
                            dvBD.setAttribute('style', 'padding-left: 0');
                            var dvBD1 = document.createElement('div');
                            dvBD1.setAttribute('class', 'col-md-8');

                            var CE = document.createElement("input");
                            CE.setAttribute("type", "radio");
                            if (iBD == 0) {
                                CE.setAttribute("checked", "checked");
                            }
                            CE.setAttribute("name", "chbBillDates");
                            CE.setAttribute("id", "chbBillDates_" + iBD);
                            CE.setAttribute("data-dueDate", result.billDates[iBD].dueDate);
                            CE.setAttribute("data-amount", result.billDates[iBD].amount);
                            CE.setAttribute("data-dateValue", result.billDates[iBD].dateValue);
                            CE.setAttribute("data-isfull", result.billDates[iBD].isFull);
                            dvBD.append(CE);
                            var lblBD = document.createElement('label');
                            lblBD.setAttribute("for", "chbBillDates_" + iBD);
                            lblBD.innerText = result.billDates[iBD].dueDate;

                            dvBD.append(lblBD);
                            dvRow.append(dvBD);
                            dvBD1.innerHTML = result.billDates[iBD].remark;
                            dvRow.append(dvBD1);
                            document.getElementById('dv_DateSelection').append(dvRow);
                        }
                        $('[id^=chbBillDates_]').unbind().on('change', function () {
                            $('#txtAmount').val($(this).data().amount);
                        });
                        $('#btnPay').removeClass('d-none');
                        $('#btnFetchBill').addClass('d-none');
                        $('#btnPay').unbind().click(function () {
                            Dorech($('#btnPay').html());
                        });
                    }
                    if (result.billAdditionalInfo != null) {
                        if (result.billAdditionalInfo.length > 0) {
                            for (let ainfo = 0; ainfo < result.billAdditionalInfo.length; ainfo++) {
                                let dvRow = document.createElement('div');
                                dvRow.setAttribute("class", "row");
                                let dvBD = document.createElement('div');
                                dvBD.setAttribute('class', 'col-md-4');
                                dvBD.setAttribute('style', 'padding-left: 0');
                                let dvBD1 = document.createElement('div');
                                dvBD1.setAttribute('class', 'col-md-8');

                                let CE = document.createElement("h6");
                                CE.innerHTML = result.billAdditionalInfo[ainfo].infoName;
                                dvBD.append(CE);
                                let CE2 = document.createElement("h6");
                                CE2.innerHTML = result.billAdditionalInfo[ainfo].infoValue;
                                dvBD1.append(CE2);
                                dvRow.append(dvBD);
                                dvRow.append(dvBD1);
                                document.getElementById('dv_AInfo').append(dvRow);
                            }
                            $('#dv_AInfo').removeClass('d-none');
                        }
                    }
                    if (result.isBBPSInStaging === true) {
                        $('#dv_BillPeriod').removeClass('d-none');
                        $('#dv_BillMonth').removeClass('d-none');
                        $('#dv_BPaymentMode').removeClass('d-none');
                        $('#dv_BillerID').removeClass('d-none')

                        $('#billfetchdiv #dv_BillPeriod span').html(result.billPeriod);
                        $('#billfetchdiv #dv_BillMonth span').html(result.billMonth);
                        if (result.billerPaymentModes != '' && result.billerPaymentModes != null) {
                            let slctItem = document.getElementById('ddlBPayModes');
                            $('#ddlBPayModes').find('option').remove().end();

                            let billerPModes = result.billerPaymentModes.split(',');
                            for (let bpmnt = 0; bpmnt < billerPModes.length; bpmnt++) {
                                if (billerPModes[bpmnt] != '') {
                                    var z = document.createElement("option");
                                    z.setAttribute("value", billerPModes[bpmnt]);
                                    var t = document.createTextNode(billerPModes[bpmnt]);
                                    z.appendChild(t);
                                    slctItem.appendChild(z);
                                }
                            }
                            $('#billfetchdiv #dv_BPaymentMode span').append(slctItem);
                        } else {
                            $('#billfetchdiv #dv_BPaymentMode span').html('Cash');
                        }

                        if (result.billAmountOptions != null && result.billAmountOptions.length > 0) {
                            var DrawAmountOptions = function (_index, amountName, amountValue, billAmountKey) {
                                let dvRow = document.createElement('div');
                                dvRow.setAttribute("class", "row");
                                let dvBD = document.createElement('div');
                                dvBD.setAttribute('class', 'col-md-8');
                                dvBD.setAttribute('style', 'padding-left: 0');
                                let dvBD1 = document.createElement('div');
                                dvBD1.setAttribute('class', 'col-md-4');

                                let CE = document.createElement("input");
                                CE.setAttribute("type", "radio");
                                if (amountName == billAmountKey) {
                                    CE.setAttribute("checked", "checked");
                                }
                                CE.setAttribute("name", "chbBillAmounts");
                                CE.setAttribute("id", "chbBillAmounts_" + _index);
                                CE.setAttribute("data-amount", amountValue);
                                dvBD.append(CE);
                                let lblBA = document.createElement('label');
                                lblBA.setAttribute("for", "chbBillAmounts_" + _index);
                                lblBA.innerText = amountName;

                                dvBD.append(lblBA);
                                dvRow.append(dvBD);
                                dvBD1.innerHTML = amountValue;
                                dvRow.append(dvBD1);
                                document.getElementById('dv_AmountSelection').append(dvRow);
                                $('[name="chbBillAmounts"]').unbind().on('change', function () {
                                    $('#txtAmount').val($(this).attr('data-amount'));
                                });
                            }
                            for (let iBA = 0; iBA < result.billAmountOptions.length; iBA++) {
                                DrawAmountOptions(iBA, result.billAmountOptions[iBA].amountName, result.billAmountOptions[iBA].amountValue, result.billAmountKey);
                                if (iBA == result.billAmountOptions.length - 1) {
                                    iBA = iBA + 1;
                                    let amountName = 'Bill Amount';
                                    result.billAmountKey = result.billAmountKey == null || result.billAmountKey == '' ? amountName : result.billAmountKey; DrawAmountOptions(iBA, amountName, result.amount, result.billAmountKey);
                                }
                            }

                        }
                    }
                    $('#txtAmount').attr('data-exactness', result.exactness);
                    $('#txtAmount').attr('data-exactamount', result.amount);
                    if (result.isEditable == true && result.exactness !== 1) {

                        $('#txtAmount').removeAttr('disabled');
                        $("#txtAmount").closest('div').removeClass('d-none');
                    }
                    if (result.statuscode == -1) {
                        $('#billfetchdiv .PDAx').addClass('d-none');
                        if (result.isShowMsgOnly == true) {
                            $('#billfetchdiv #showBillMsg').removeClass('d-none');
                            $('#billfetchdiv #showBillMsg').html(result.errorMsg);
                        }
                    }
                    else {
                        if (result.amount != '' && result.amount != null) {
                            $('#txtAmount').val(result.amount);
                            $("#txtAmount").closest('div').removeClass('d-none');
                        }
                    }
                    if (result.isEnablePayment == true) {
                        if (result.isBBPSInStaging == true) {
                            $('#btnPay').attr('data-isBBPSInStaging', result.isBBPSInStaging);
                            $('#txtMobileNo').attr('data-isBBPSInStaging', result.isBBPSInStaging);
                        }
                        $('#btnPay').removeClass('d-none');
                        $('#btnFetchBill').addClass('d-none');
                        $('#btnPay').unbind().click(function () {
                            let isBBPSInStaging = $('#hidLat').attr('data-isbbpsinstaging');
                            if (isBBPSInStaging != null && isBBPSInStaging != undefined && (isBBPSInStaging === 'True' || isBBPSInStaging === 'true') && $('#btnPay').attr("data-confirmed") === undefined) {
                                $.post('/BPConfirm', { IsQuickPay: false }, function (result) {
                                    resultReload(result);
                                    mdlA.id = 'mdlBPConfirm';
                                    mdlA.content = result;
                                    mdlA.alert(mdlA.size.default);
                                    $('button.close span,#mdlCancel').unbind().click(function () {
                                        mdlA.dispose();
                                    });
                                    $('#btnBPConfirm').click(function () {
                                        $('#btnPay').attr("data-confirmed", 'confirmed');
                                        $('#btnPay').attr('data-bccf', $('#txtBCCF').val());

                                        mdlA.dispose(function () {
                                            $('#btnPay').click();
                                        });
                                    });
                                    $('#lblBiller').html($('#ddlOperator option:selected').text());
                                    $('#lblBillerID').html($('#txtMobileNo').attr('data-biilerid'));


                                    let amountName = 'Bill Amount';
                                    let payModes = 'CASH';
                                    $('#lblCustomerName').html($('#dv_CName span').text());
                                    $('#lblDueDate').html($('#dv_DueDate span').text());
                                    $('#lblBillDate').html($('#dv_BillDate span').text());
                                    amountName = $('[for="' + $('[name="chbBillAmounts"]:checked').attr('id') + '"]').html();
                                    payModes = $('#ddlBPayModes').val();
                                    $('[for="lblBillAmount"]').html(amountName);
                                    $('#lblPayMode').html(payModes);
                                    $('#lblBillAmount').html($('#txtAmount').val());
                                    $('#lblAmountBill').html($('#txtAmount').val());
                                    $('#btnPay').attr('data-paymode', payModes);
                                }).catch(function () {
                                }).fail(function (xhr) {
                                    $(_this).attr('checked', Is == false);
                                    if (xhr.status == 500) {
                                        an.title = 'Oops';
                                        an.content = 'Server error';
                                        an.alert(an.type.failed);
                                    }
                                    if (xhr.status == 0) {
                                        an.title = 'Oops';
                                        an.content = 'Internet Connection was broken';
                                        an.alert(an.type.failed);
                                    }
                                }).always(function () {
                                });
                            } else {
                                $('#btnPay').removeAttr("data-confirmed");
                                Dorech($('#btnPay').html());
                            }
                        });
                    }
                },
                statusCode: {
                    500: function () {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    },
                    0: function () {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                },
                error: function (xhr, result) {
                    an.title = "Oops! Error";
                    an.content = result;

                    an.alert(an.type.failed);
                },
                complete: function () {
                    btnLdr.Stop(ct.btn);
                }
            });

        }
        var openDTHHeavyRefresh = function (o, a) {
            preloader.load();
            $.post('/dthheavyref', { o, a }, function (result) {
                resultReload(result);
                mdlA.id = 'mdlCustInfo';
                mdlA.content = result;
                mdlA.alert(mdlA.size.default);
                $('button.close span,#mdlCancel').unbind().click(function () {
                    mdlA.dispose();
                });
            }).catch(function () {
                //console.clear();
            }).fail(function (xhr) {
                $(_this).attr('checked', Is == false);
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
            });

        }
        var openCashback = function (o) {
            preloader.load();
            $.post('/_cashback', { OID: o }, function (result) {
                resultReload(result);
                mdlA.id = 'mdlCashback';
                mdlA.content = result;
                mdlA.alert(mdlA.size.large);
                $('button.close span,#mdlCancel').unbind().click(function () {
                    mdlA.dispose();
                });
                $('.denomination').click(function () {
                    $('#txtAmount').val($(this).find('span.txtDenom').text())
                    $('#spanNotifyCashback').remove();
                    $('<small id="spanNotifyCashback">You are eligible for ' + $(this).find('span.txtComm').text() + ' Cash Back</small>').insertAfter('#txtAmount');
                    mdlA.dispose();
                })
            }).catch(function () {
            }).fail(function (xhr) {
                $(_this).attr('checked', Is == false);
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
            });
        }
        function DMRReceipt(GroupID) {
            preloader.load();
            $.post('/DMR-Receipt', { GroupID: GroupID, IsInvoice: true }, function (result) {
                resultReload(result);
                $('#' + an.id).remove();
                mdlA.id = 'dmrReceiptModel';
                mdlA.content = result;
                mdlA.options.backdrop = 'static';
                mdlA.options.keyboard = false;
                mdlA.alert(mdlA.size.large);
                $('button.close span,#mdlCancel').click(function () {
                    mdlA.dispose();
                });
                $('#hddGroupID').val(GroupID);
                $('#btnPrint').click(function () {
                    var win = window.open('/DMRReceipt/?GroupID=' + GroupID + '&IsInvoice=true&convenientFee=' + 0, '_blank');
                    win.focus();
                });
            }).catch(function () {
                console.clear();
            }).fail(function (xhr) {
                $(_this).attr('checked', Is == false);
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
            });
        }
        function Print() {
            var GroupID = $('#hddGroupID').val();
            var win = window.open('/DMRReceipt/?GroupID=' + GroupID, '_blank');
            win.focus();
        }
        function ChangeBank() {
            var ifsc = $('#ddlBank').val();
            var txt = $('#txtIFSC');
            if (ifsc == '0')
                txt.val('');
            else
                txt.val(ifsc);
        }
    </script>
    <script>
        var doUPIPayment = function (sender) {
            if ("Payment" !== $(sender).html())
                return false;
            btnLdr.addClass = 'btn-dark';
            btnLdr.removeClass = 'btn-outline-dark';
            btnLdr.Start($(sender), 'Sending...');
            preloader.load();
            var SendMoney = {
                AccountNo: $('#txtVPA').val(), Amount: $('#txtAmount').val(), BeneName: $('#txtBeneName').val()
            }
            $.ajax({
                type: 'POST',
                url: '/upi-pmt',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify(SendMoney),
                success: function (result) {
                    resultReload(result);
                    mdlA.dispose();
                    if (result.statuscode == 3 && result.tid == 0) {
                        var msg = '<h4 class="alert-heading ' + an.getTColor(result.statuscode) + '"> ' + result.status + '!</h4><p>' + result.liveID + '</p><hr><p class="mb-0 font-weight-bold">' + result.msg + '</p>';
                        mdlA.id = 'mymodal1';
                        mdlA.content = '<div class="col-md-12"><button type ="button" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></button>'
                            + msg + '</div>';
                        mdlA.options.keyboard = false;
                        mdlA.alert(mdlA.size.small);
                        $('button.close span,#mdlCancel').unbind().click(function () {
                            mdlA.dispose();
                        });
                    }
                    else {
                        $('#txtAmount').val(0);
                        var upiPayResp = `<div class="row text-center">
                                                                                                                                                                                                                <div class="col-md-12">
                                                                                                                                                                                                                    <button type="button" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                                                                                                                                                                                                    <h5 class="text-info">Transaction Info</h5><hr />
                                                                                                                                                                                                                </div>
                                                                                                                                                                                                                <div class="col-md-12">
                                                                                                                                                                                                                    <label class="${result.statuscode === 3 || result.statuscode === 0 ? `h5 text-danger` : `text-success`}">${result.status}</label >
                                                                                                                                                                                                                    <div class="form-group">
                                                                                                                                                                                                                        <label>${result.msg}</label>
                                                                                                                                                                                                                    </div>
                                                                                                                                                                                                                    ${result.statuscode === 1 || result.statuscode === 2 ? `<div class="form-group">
                                                                                                                                                                                                                                                     </div>
                                                                                                                                                                                                                                                 <div class="form-group">
                                                                                                                                                                                                                                                    <label>Transaction ID : ${result.transactionID}</label>
                                                                                                                                                                                                                                                 </div>
                                                                                                                                                                                                                                                 <div class="form-group">
                                                                                                                                                                                                                                                    <label>Live ID : ${result.liveID}</label>
                                                                                                                                                                                                                                                 </div>`: ``}
                                                                                                                                                                                                                </div>
                                                                                                                                                                                                            </div>`;
                        setTimeout(function () {
                            mdlA.id = 'mdlMsgbx';
                            mdlA.content = upiPayResp;
                            mdlA.options.backdrop = 'static';
                            mdlA.alert(mdlA.size.default);
                            $('button.close').click(() => mdlA.dispose());
                        }, 500);

                    }
                }
            }).catch(function (x) {
            }).fail(function (xhr) {
                $(_this).attr('checked', Is == false);
                if (xhr.status == 500) {
                    an.title = 'Oops';
                    an.content = 'Server error';
                    an.alert(an.type.failed);
                }
                if (xhr.status == 0) {
                    an.title = 'Oops';
                    an.content = 'Internet Connection was broken';
                    an.alert(an.type.failed);
                }
            }).always(function () {
                preloader.remove();
                try {
                    btnLdr.Stop($(sender));
                } catch (e) {

                }
            });
        }
    </script>
    @if (ApplicationSetting.IsDMTWithPIPE == false)
    {
        <script>
            function GetSender() {
                var mob = $('#txtSearch').val();
                if (mob.length < 10) {
                    return;
                }
                preloader.load();
                $.post('/SenderGet', { MobileNo: $('#txtSearch').val() }, function (result) {
                    resultReload(result);
                    $('#btnKYC').addClass('d-noone');
                    if (result.statuscode == undefined || result.statuscode == "undefined") {
                        $('#' + an.id).remove();
                        mdlA.id = 'mymodal';
                        mdlA.content = result;
                        mdlA.options.backdrop = 'static';
                        mdlA.options.keyboard = false;
                        mdlA.alert(mdlA.size.default);
                        $('button.close span,#mdlCancel').click(function () {
                            mdlA.dispose();
                        });
                        $('#DivCtDetail').css("display", "none");
                        let _date = new Date()
                        _date.setYear(_date.getFullYear() - 15);
                        var FDate = DTPicker($('#txtDob'), _date.toDateString(), function () { },
                            function () {
                                //$('dp').addClass('d-none');
                                //var fdate = new Date($('#txtDob').val()), fy = fdate.getFullYear(), fm = fdate.getMonth();
                                //var lastDay_f = new Date(fy, fm + 1, 0);

                                //var tdate = new Date($('#dtToDate').val()), ty = tdate.getFullYear(), tm = tdate.getMonth();

                                //if (fdate > tdate) {
                                //    $('#dtToDate').val($('#txtDob').val());
                                //} else {
                                //    if (fy == ty) {
                                //        var curDate = new Date(moment(new Date()).format('D MMM YYYY')), cm = curDate.getMonth();
                                //        if (cm == fm) {
                                //            if (curDate == fdate && fdate != tdate) {
                                //                $('#dtToDate').val(moment(curDate).format('D MMM YYYY'));
                                //            } else if (fdate < curDate) {
                                //                curDate = curDate.setDate(curDate.getDate() - 1)
                                //                $('#dtToDate').val(moment(curDate).format('D MMM YYYY'));
                                //            }
                                //        }
                                //        else if (tm > fm) {
                                //            $('#dtToDate').val(moment(lastDay_f).format('D MMM YYYY'));
                                //        }
                                //    } else if (fy < ty) {
                                //        $('#dtToDate').val(moment(lastDay_f).format('D MMM YYYY'));
                                //    }
                                //}
                            });
                    }
                    else {
                        if (result.statuscode == an.type.failed) {
                            an.title = "Oops! Error";
                            an.content = result.msg;
                            an.alert(result.statuscode);
                        }
                        else if (result.statuscode == an.type.success) {
                            an.title = "Well done!";
                            an.content = result.msg + ((result.link != undefined) ? '<br/>To complete user profile <a href="' + result.link + '" class="' + an.linkClass + '">Click here</a>' : '');
                            an.alert(result.statuscode)
                            $('#lblCtName').html("Reamining:<i class= 'fas fa-rupee-sign'></i > " + result.commonStr);
                            $('#lblCtWallet').html("Name: " + result.commonStr2);
                            $('#DivCtDetail').css("display", "");
                            $('#hidSenderID').val(result.reffID);
                            if (result.status == 1 || result.status == 4) {
                                $('#btnKYC').removeClass('d-none');
                                $('#btnKYC').unbind().click(function () {
                                    preloader.load();
                                    $.post('/SenderKYC', {}, function (result) {
                                        resultReload(result);
                                        mdlA.id = 'senderKYCModel';
                                        mdlA.content = result;
                                        mdlA.options.backdrop = 'static';
                                        mdlA.options.keyboard = false;
                                        mdlA.alert(mdlA.size.default);
                                        $('button.close span,#mdlCancel').click(function () {
                                            mdlA.dispose();
                                        });
                                        $('#btnDoKYC').click(function () {
                                            var formData = new FormData();
                                            formData.append('m', $('#txtSearch').val())
                                            formData.append('name', $('#txtName').val())
                                            formData.append('aaharno', $('#txtAadhar').val())
                                            formData.append('panno', $('#txtPanNo').val())
                                            formData.append('fileAddhar1', $('#fileAddhar1')[0].files[0]);
                                            formData.append('fileAddhar2', $('#fileAddhar2')[0].files[0]);
                                            formData.append('filePic', $('#filePic')[0].files[0]);
                                            formData.append('filePAN', $('#filePAN')[0].files[0]);
                                            $.ajax({
                                                type: 'POST',
                                                url: '/SenderDoKYC',
                                                processData: false,
                                                contentType: false,
                                                data: formData,
                                                success: function (result) {
                                                    resultReload(result);
                                                    an.title = result.statuscode == an.type.failed ? 'Oops' : 'Wow';
                                                    an.content = result.msg;
                                                    an.alert(result.statuscode);
                                                },
                                                error: function (result) {
                                                    checkError(result);
                                                    an.title = 'Oops';
                                                    an.content = 'An error occured!';
                                                    an.alert(an.type.failed);
                                                },
                                                complete: function () {
                                                    preloader.remove();
                                                }
                                            });
                                        });
                                    }).catch(function () {
                                        console.clear();
                                    }).fail(function (xhr) {
                                        $(_this).attr('checked', Is == false);
                                        if (xhr.status == 500) {
                                            an.title = 'Oops';
                                            an.content = 'Server error';
                                            an.alert(an.type.failed);
                                        }
                                        if (xhr.status == 0) {
                                            an.title = 'Oops';
                                            an.content = 'Internet Connection was broken';
                                            an.alert(an.type.failed);
                                        }
                                    }).always(function () {
                                        preloader.remove();
                                    });
                                });
                            }
                            GetBeni($('#txtSearch').val());
                        }
                    }
                    if (result.statuscode == -1) {
                        $(_this).attr('checked', Is == false);
                    }
                }).catch(function () {
                    console.clear();
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
            function createBeni() {
                preloader.load();
                var Bank = $("#ddlBank option:selected").text();
                var BankID = $("#ddlBank option:selected").data().bankId;
                var SID = $('#hidSenderID').val();
                var CreateBeni = { mobileNo: $('#txtMobileNo').val(), BeneName: $('#txtName').val(), IFSC: $('#txtIFSC').val(), AccountNo: $('#txtAccount').val(), BankName: Bank, BankID: BankID, SendermobileNo: $('#txtSearch').val(), SID }

                $.ajax({
                    type: 'POST',
                    url: '/CreateBeni',
                    dataType: 'json',
                    contentType: 'application/json',
                    data: JSON.stringify(CreateBeni),
                    success: function (result) {
                        resultReload(result);
                        if (result.statuscode == undefined || result.statuscode == "undefined") {
                            $('#' + an.id).remove();
                            mdlA.id = 'mymodal';
                            mdlA.content = result;
                            mdlA.options.backdrop = 'static';
                            mdlA.options.keyboard = false;
                            mdlA.alert(mdlA.size.small);
                            $('button.close span,#mdlCancel').click(function () {
                                mdlA.dispose();
                            });
                        }
                        else {
                            if (result.statuscode == an.type.failed) {
                                an.title = "Oops! Error";
                                an.content = result.msg;
                                an.alert(result.statuscode);
                            }
                            else if (result.statuscode == an.type.success) {
                                GetBeni($('#txtSearch').val());
                                an.title = "Well done!";
                                an.content = result.msg + ((result.link != undefined) ? '<br/>To complete user profile <a href="' + result.link + '" class="' + an.linkClass + '">Click here</a>' : '');
                                an.alert(result.statuscode);
                                mdlA.dispose();
                            }
                        }
                    }
                }).catch(function () {
                    //console.clear();
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
            var GetBeni = function (s) {
                preloader.load();
                var SID = $('#hidSenderID').val();
                $.post('/GetBeni', { MobileNo: s, SID }, function (result) {
                    resultReload(result);
                    $('#DivbeniList').html(result);
                }).catch(function () {
                    console.clear();
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
            function AddBene() {
                preloader.load();
                $.post('/AddBene', {}, function (result) {
                    resultReload(result);
                    $('#' + an.id).remove();
                    mdlA.id = 'mymodal';
                    mdlA.content = result;
                    mdlA.options.backdrop = 'static';
                    mdlA.options.keyboard = false;
                    mdlA.alert(mdlA.size.default);
                    $('button.close span,#mdlCancel').click(function () {
                        mdlA.dispose();
                    });
                    //$('.selectpicker').selectpicker('refresh');
                }).catch(function () {
                    console.clear();
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
            function CreateSender() {
                preloader.load();
                $.post('/CreateSender', { Name: $('#txtName').val(), Add: $('#txtAdd').val(), Dob: $('#txtDob').val(), MobileNo: $('#txtSearch').val(), Pincode: $('#txtPinCode').val(), LastName: $('#txtLName').val() },
                    function (result) {
                        resultReload(result);
                        if (result.statuscode == undefined || result.statuscode == "undefined") {
                            $('#' + an.id).remove();
                            mdlA.id = 'mymodal';
                            mdlA.content = result;
                            mdlA.options.backdrop = 'static';
                            mdlA.options.keyboard = false;
                            mdlA.alert(mdlA.size.small);
                            $('button.close span,#mdlCancel').click(function () {
                                mdlA.dispose();
                            });
                        }
                        else {
                            if (result.statuscode == an.type.failed) {
                                an.title = "Oops! Error";
                                an.content = result.msg;
                                an.alert(result.statuscode);
                            }
                            else if (result.statuscode == an.type.success) {
                                an.title = "Well done!";
                                an.content = result.msg + ((result.link != undefined) ? '<br/>To complete user profile <a href="' + result.link + '" class="' + an.linkClass + '">Click here</a>' : '');
                                an.alert(result.statuscode);
                            }
                        }
                    }).catch(function () {

                        //console.clear();
                    }).fail(function (xhr) {
                        $(_this).attr('checked', Is == false);
                        if (xhr.status == 500) {
                            an.title = 'Oops';
                            an.content = 'Server error';
                            an.alert(an.type.failed);
                        }
                        if (xhr.status == 0) {
                            an.title = 'Oops';
                            an.content = 'Internet Connection was broken';
                            an.alert(an.type.failed);
                        }
                    }).always(function () {
                        preloader.remove();
                    });
            }
            function VerifySender() {
                var refid = $('#hidReffID').val();
                refid = refid === undefined ? '' : refid;
                preloader.load();
                $.post('/VerifySender', { MobileNo: $('#txtSearch').val(), OTP: $('#txtOTP').val(), ReffID: refid },
                    function (result) {
                        resultReload(result);
                        if (result.statuscode == an.type.failed) {
                            an.title = "Oops! Error";
                            an.content = result.msg;
                            an.alert(result.statuscode);
                        }
                        else if (result.statuscode == an.type.success) {
                            an.title = "Well done!";
                            an.content = result.msg;
                            an.alert(result.statuscode);
                            mdlA.dispose(function () {
                                GetSender();
                            });
                        }
                    }).catch(function () {
                        console.clear();
                    }).fail(function (xhr) {
                        $(_this).attr('checked', Is == false);
                        if (xhr.status == 500) {
                            an.title = 'Oops';
                            an.content = 'Server error';
                            an.alert(an.type.failed);
                        }
                        if (xhr.status == 0) {
                            an.title = 'Oops';
                            an.content = 'Internet Connection was broken';
                            an.alert(an.type.failed);
                        }
                    }).always(function () {
                        preloader.remove();
                    });
            }
            var ResendSenderOTP = function () {
                preloader.load();
                var SID = $('#hidSenderID').val();
                $.post('/SReOTP', { MobileNo: $('#txtSearch').val(), SID },
                    function (result) {
                        resultReload(result);
                        if (result.statuscode == an.type.failed) {
                            an.title = "Oops! Error";
                            an.content = result.msg;
                            an.alert(result.statuscode);
                        }
                        else if (result.statuscode == an.type.success) {
                            an.title = "Well done!";
                            an.content = result.msg;
                            an.alert(result.statuscode);
                        }
                    }).catch(function () {
                        console.clear();
                    }).fail(function (xhr) {
                        $(_this).attr('checked', Is == false);
                        if (xhr.status == 500) {
                            an.title = 'Oops';
                            an.content = 'Server error';
                            an.alert(an.type.failed);
                        }
                        if (xhr.status == 0) {
                            an.title = 'Oops';
                            an.content = 'Internet Connection was broken';
                            an.alert(an.type.failed);
                        }
                    }).always(function () {
                        preloader.remove();
                    });
            }
            function DeleteBene(temp, OTP) {
                preloader.load();
                var tr = $(temp).closest("tr");
                var BeneID = $(tr.find('td').eq(1)).data().beneid;

                var SID = $('#hidSenderID').val();
                $.post('/DeleteBene', { MobileNo: $('#txtSearch').val(), BeneID, SID, OTP },
                    function (result) {
                        resultReload(result);
                        if (result.statuscode == undefined || result.statuscode == "undefined") {
                            $('#' + an.id).remove();
                            mdlA.id = 'mymodal';
                            mdlA.content = result;
                            mdlA.options.backdrop = 'static';
                            mdlA.options.keyboard = false;
                            mdlA.alert(mdlA.size.small);
                            $('button.close span,#mdlCancel').click(function () {
                                mdlA.dispose();
                            });
                            $('#btnVerifyB').click(function () {
                                var Op = $('#txtOTP').val();
                                if (Op.length > 0) {
                                    DeleteBene(temp, Op);
                                }
                                else {
                                    an.id = 'anVerifyOTP';
                                    an.title = 'Oops';
                                    an.content = 'OTP can not be empty';
                                    an.alert(an.type.failed);
                                }
                            });
                        }
                        else {
                            mdlA.dispose();
                            if (result.statuscode == an.type.failed) {
                                an.title = "Oops! Error";
                                an.content = result.msg;
                                an.alert(result.statuscode);
                            }
                            else if (result.statuscode == an.type.success) {
                                GetSender();
                                an.title = "Well done!";
                                an.content = result.msg + ((result.link != undefined) ? '<br/>To complete user profile <a href="' + result.link + '" class="' + an.linkClass + '">Click here</a>' : '');
                                an.alert(result.statuscode);
                            }
                        }
                    }).catch(function () {
                        console.clear();
                    }).fail(function (xhr) {
                        $(_this).attr('checked', Is == false);
                        if (xhr.status == 500) {
                            an.title = 'Oops';
                            an.content = 'Server error';
                            an.alert(an.type.failed);
                        }
                        if (xhr.status == 0) {
                            an.title = 'Oops';
                            an.content = 'Internet Connection was broken';
                            an.alert(an.type.failed);
                        }
                    }).always(function () {
                        preloader.remove();
                    });
            }
            function SendMoneyPopUp(itm) {
                preloader.load();
                var tr = $(itm).closest("tr");
                $.post('/SendMoneyPopUp', {}, function (result) {
                    resultReload(result);
                    $('#' + an.id).remove();
                    mdlA.id = 'mymodal';
                    mdlA.content = result;
                    mdlA.options.backdrop = 'static';
                    mdlA.options.keyboard = false;
                    mdlA.alert(mdlA.size.default);
                    $('button.close span,#mdlCancel').click(function () {
                        mdlA.dispose();
                    });
                    $('#HddBeniID').val($(tr.find('td')[1]).data().beneid);
                    $('#HidBankID').val($(tr.find('td')[1]).data().bankid);
                    $('#HidBeneMobile').val($(tr.find('td')[1]).data().bmobile)
                    $('#LblAccount').html(tr.find(".td2").html());
                    $('#LblBank').html(tr.find(".td1").html());
                    $('#LblBeni').html(tr.find(".td3").html());
                    $('#HddIfsc').val(tr.find(".td4").html());

                }).catch(function () {
                    console.clear();
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
            function GetCharge() {
                preloader.load();
                $.post('/GetCharge', { amount: $(txtAmount).val() }, function (result) {
                    resultReload(result);
                    if (result.statuscode == an.type.failed) {
                        an.title = "Oops! Error";
                        an.content = result.msg;
                        an.alert(result.statuscode);
                    }
                    else if (result.statuscode == an.type.success) {
                        $("#txtChargeAmt").html(result.charged);
                        $("#txtTotalAmt").html(parseFloat($(txtAmount).val()) + parseFloat(result.charged));
                        $("#txtAmount").attr("readonly", "readonly");
                        $("#Div_confirm").show();
                        $("#Div_confirmation").hide();
                    }
                }).catch(function () {
                    console.clear();
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
            function SendMoney(temp) {
                preloader.load();
                var trntype = true;
                if ($('#rdoNEFT').is(':checked')) {
                    trntype = false;
                }
                var bank = $("#LblBank").html();
                var secKey = $('#txtSecKey').val() == undefined ? '' : $('#txtSecKey').val();
                var SendMoney = {
                    BeneID: $('#HddBeniID').val(), IFSC: $('#HddIfsc').val(), AccountNo: $('#LblAccount').html(), Channel: trntype, Amount: $('#txtAmount').val(), MobileNo: $('#txtSearch').val(), Bank: bank, BeneName: $('#LblBeni').html(), SecKey: secKey, BankID: $('#HidBankID').val(), BeneMobile: $('#HidBeneMobile').val()
                }
                $.ajax({
                    type: 'POST',
                    url: '/SendMoney',
                    dataType: 'json',
                    contentType: 'application/json',
                    data: JSON.stringify(SendMoney),
                    success: function (result) {
                        resultReload(result);
                        if (result.statuscode == 3 && result.tid == 0) {
                            mdlA.dispose();
                            var msg = '<h4 class="alert-heading ' + an.getTColor(result.statuscode) + '"> ' + result.status + '!</h4><p>' + result.liveID + '</p><hr><p class="mb-0 font-weight-bold">' + result.msg + '</p>';
                            mdlA.id = 'mymodal1';
                            mdlA.content = '<div class="col-md-12"><button type ="button" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></button>'
                                + msg + '</div>';
                            mdlA.options.keyboard = false;
                            mdlA.alert(mdlA.size.small);
                            $('button.close span,#mdlCancel').unbind().click(function () {
                                mdlA.dispose();
                            });
                        }
                        else {
                            DMRReceipt(result.groupID);
                        }
                    }
                }).catch(function (x) {
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
            function DMTVerification() {
                preloader.load();
                var Bank = $("#ddlBank option:selected").text();
                var BankID = $("#ddlBank option:selected").data().bankId;
                $.post('/DMTVerification', { MobileNo: $('#txtSearch').val(), AccountNo: $('#txtAccount').val(), IFSC: $('#txtIFSC').val(), Bank, BankID }, function (result) {
                    resultReload(result);
                    if (result.statuscode == 2) {
                        $('#txtName').val(result.beneName);
                        an.title = "Well done!";
                        an.content = result.msg;
                        an.alert(an.type.success);
                    }
                    else {
                        an.title = "Oops! Error";
                        an.content = result.msg;
                        an.alert(an.type.failed);
                    }
                }).catch(function (e) {
                    console.clear();
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
        </script>
    }
    <script>
        var _ShowForm = function () {

            preloader.load();
            $.post('/ShowForm.php', { OID: $("#ddlpes").val() }, function (result) {
                resultReload(result);
                $("#PESFields").html(result);
                $("#btnSavePESForm").unbind().click(function () {
                    _SavPESForm();
                });
            })
                .catch(function (xhr, e, msg) {
                    an.title = 'Oops';
                    an.content = 'An error has been occured during request.Reload again!'
                    an.alert(an.type.failed);
                })
                .fail(function (xhr) {
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                })
                .always(function () {
                    preloader.remove();
                });
        }
        var _SavPESForm = function () {
            var Iserror = false; var Errmsg = '';
            if ($("#ddlpes").val() != '0') {
                if ($('#cname').val().trim() == '') {
                    var msg = '<div class="text-center"><h4 class="text-danger">Customer name is required !</h4><br/><button class="btn btn-primary" id="btnmsgclose">Close</button></div>';
                    mdlA.content = msg;
                    mdlA.id = 'mymodal';
                    mdlA.options.backdrop = 'static';
                    mdlA.alert(mdlA.size.default);
                    $('#btnmsgclose').unbind().click(function () {
                        mdlA.dispose();
                    });
                    return;
                }
                if ($('#cmobno').val().trim() == '') {
                    var msg = '<div class="text-center"><h4 class="text-danger">Customer mobileno. is required !</h4><br/><button class="btn btn-primary" id="btnmsgclose">Close</button></div>';
                    mdlA.content = msg;
                    mdlA.id = 'mymodal';
                    mdlA.options.backdrop = 'static';
                    mdlA.alert(mdlA.size.default);
                    $('#btnmsgclose').unbind().click(function () {
                        mdlA.dispose();
                    });
                    return;
                }
                var frmdata = new FormData();
                frmdata.append('OID', $("#ddlpes").val());
                $('form').find("input").each(function () {
                    if ($(this).attr('type') == 'file') {

                        if ($(this).attr('required') != undefined) {
                            if ($(this)[0].files[0] == undefined) {

                                Iserror = true;
                                Errmsg = $($(this).siblings()[0]).text();
                            }
                        }
                        frmdata.append($(this).attr('id'), $(this)[0].files[0]);
                    } else {

                        if ($(this).attr('required') !== undefined) {
                            if ($(this).val() == '') {

                                Iserror = true;
                                Errmsg = $($(this).siblings()[0]).text();
                            }
                        }
                        frmdata.append($(this).attr('id'), $(this).val());
                    }
                });
                $('form').find("select").each(function () {
                    if ($(this).attr('required') !== undefined) {
                        if ($(this).val() == '') {

                            Iserror = true;
                            Errmsg = $($(this).siblings()[0]).text();
                        }
                    }
                    frmdata.append($(this).attr('id'), $(this).val());
                });
                $('form').find("textarea").each(function () {
                    if ($(this).attr('required') !== undefined) {
                        if ($(this).val() == '') {

                            Iserror = true;
                            Errmsg = $($(this).siblings()[0]).text();
                        }

                    }
                    frmdata.append($(this).attr('id'), $(this).val());
                });
                if (Iserror === true) {
                    var msg = '<div class="text-center"><h4 class="text-danger">' + Errmsg + ' is required !</h4><br/><button class="btn btn-primary" id="btnmsgclose">Close</button></div>';
                    mdlA.content = msg;
                    mdlA.id = 'mymodal';
                    mdlA.options.backdrop = 'static';
                    mdlA.alert(mdlA.size.default);
                    $('#btnmsgclose').unbind().click(function () {
                        mdlA.dispose();
                    });
                    return;
                }
                if (Iserror !== true) {
                    preloader.load();
                    $.ajax({
                        type: 'POST',
                        url: '/SavePESForm.php',
                        processData: false,
                        contentType: false,
                        data: frmdata,
                        success: function (result) {
                            resultReload(result);
                            if (result.statuscode == an.type.failed) {
                                an.title = "Oops";
                                an.content = result.msg;
                                an.alert(result.statuscode);
                            }
                            else if (result.statuscode == an.type.success) {
                                $('form').find("input, textarea, select").val("");
                                var msg = '<div class="text-center"><h4 class="text-info"><img src="/Image/success.gif" /><br/><span class="text-success font-weight-bold">Yay !</span> Your Application has been submitted successfuly !</h4><br/><h6>You can track your application with transaction id: ' + result.commonStr + '</h5><br/><button class="btn btn-warning btn-block font-weight-bold" id="btnmsgclose">Close</button></div>';
                                mdlA.content = msg;
                                mdlA.id = 'mymodal';
                                mdlA.options.backdrop = 'static';
                                mdlA.alert(mdlA.size.default);
                                $('#btnmsgclose').unbind().click(function () {
                                    mdlA.dispose();
                                });
                            }
                        },
                        statusCode: {
                            500: function () {
                                an.title = 'Oops';
                                an.content = 'Server error';
                                an.alert(an.type.failed);
                            },
                            0: function () {
                                an.title = 'Oops';
                                an.content = 'Internet Connection was broken';
                                an.alert(an.type.failed);
                            }
                        },
                        error: function (result) {
                            checkError(result);
                            an.title = 'Oops';
                            an.content = 'An error occured!';
                            an.alert(an.type.failed);
                        },
                        complete: function () {
                            preloader.remove();
                        }
                    });
                }
            }

            else {
                var msg = '<div class="text-center"><h4 class="text-danger">Please select service first !</h4><br/><button class="btn btn-primary" id="btnmsgclose">Close</button></div>';
                mdlA.content = msg;
                mdlA.id = 'mymodal';
                mdlA.options.backdrop = 'static';
                mdlA.alert(mdlA.size.default);
                $('#btnmsgclose').unbind().click(function () {
                    mdlA.dispose();
                });
            }
        }
    </script>
    @if (ApplicationSetting.IsDMTWithPIPE)
    {
        <script>
            function GetSenderP() {
                let oid = $('#ddlOperator').val();
                var mob = $('#txtSearch').val();
                if (mob.length < 10) {
                    return;
                }
                preloader.load();
                $.post('/SenderGet-p', { MobileNo: $('#txtSearch').val(), o: oid }, function (result) {
                    console.log(result)
                    resultReload(result);
                    $('#btnKYC').addClass('d-none');
                    $('#DivbeniList').empty();
                    if (result.statuscode == undefined || result.statuscode == "undefined") {
                        $('#' + an.id).remove();
                        mdlA.id = 'mymodal';
                        mdlA.content = result;
                        mdlA.options.backdrop = 'static';
                        mdlA.options.keyboard = false;
                        mdlA.alert(mdlA.size.default);
                        $('button.close span,#mdlCancel').click(function () {
                            mdlA.dispose();
                        });
                        $('#DivCtDetail').css("display", "none");
                        let _date = new Date();
                        _date.setYear(_date.getFullYear() - 18);
                        DTPicker($('#txtDob'), _date.toDateString());
                    }
                    else {
                        if (result.statuscode == an.type.failed) {
                            an.title = "Oops! Error";
                            an.content = result.msg;
                            an.alert(result.statuscode);
                        }
                        else if (result.statuscode == an.type.success) {
                            an.title = "Well done!";
                            an.content = result.msg + ((result.link != undefined) ? '<br/>To complete user profile <a href="' + result.link + '" class="' + an.linkClass + '">Click here</a>' : '');
                            an.alert(result.statuscode)
                            $('#lblCtName').html(result.senderName);
                            $('#lblCtWallet').html("<i class= 'fas fa-rupee-sign'></i > " + result.remainingLimit);
                            $('#lblCtLimit').html("<i class= 'fas fa-rupee-sign'></i > " + result.availbleLimit);
                            $('#hidRemain').val(result.remainingLimit);
                            $('#hidTotal').val(result.availbleLimit);
                            $('#hidIsNotchecked').val(result.isNotCheckLimit);
                            $('#DivCtDetail').css("display", "");
                            $('#hidSenderID').val(result.referenceID);
                            $('#hidIsEKYC').val(result.isEKYCAvailable);
                            if (result.status == 1 || result.status == 4) {
                                $('#btnKYC').removeClass('d-none');
                                $('#btnKYC').unbind().click(function () {
                                    preloader.load();
                                    $.post('/SenderKYC-p', {}, function (result) {
                                        resultReload(result);
                                        mdlA.id = 'senderKYCModel';
                                        mdlA.content = result;
                                        mdlA.options.backdrop = 'static';
                                        mdlA.options.keyboard = false;
                                        mdlA.alert(mdlA.size.default);
                                        $('button.close span,#mdlCancel').click(function () {
                                            mdlA.dispose();
                                        });
                                        $('#btnDoKYC').click(function () {
                                            var formData = new FormData();
                                            formData.append('o', $('#ddlOperator').val())
                                            formData.append('m', $('#txtSearch').val())
                                            formData.append('name', $('#txtName').val())
                                            formData.append('aaharno', $('#txtAadhar').val())
                                            formData.append('panno', $('#txtPanNo').val())
                                            formData.append('fileAddhar1', $('#fileAddhar1')[0].files[0]);
                                            formData.append('fileAddhar2', $('#fileAddhar2')[0].files[0]);
                                            formData.append('filePic', $('#filePic')[0].files[0]);
                                            formData.append('filePAN', $('#filePAN')[0].files[0]);
                                            $.ajax({
                                                type: 'POST',
                                                url: '/SenderDoKYC-p',
                                                processData: false,
                                                contentType: false,
                                                data: formData,
                                                success: function (result) {
                                                    resultReload(result);
                                                    an.title = result.statuscode == an.type.failed ? 'Oops' : 'Wow';
                                                    an.content = result.msg;
                                                    an.alert(result.statuscode);
                                                },
                                                error: function (result) {
                                                    checkError(result);
                                                    an.title = 'Oops';
                                                    an.content = 'An error occured!';
                                                    an.alert(an.type.failed);
                                                },
                                                complete: function () {
                                                    preloader.remove();
                                                }
                                            });
                                        });
                                    }).catch(function () {
                                        console.clear();
                                    }).fail(function (xhr) {
                                        $(_this).attr('checked', Is == false);
                                        if (xhr.status == 500) {
                                            an.title = 'Oops';
                                            an.content = 'Server error';
                                            an.alert(an.type.failed);
                                        }
                                        if (xhr.status == 0) {
                                            an.title = 'Oops';
                                            an.content = 'Internet Connection was broken';
                                            an.alert(an.type.failed);
                                        }
                                    }).always(function () {
                                        preloader.remove();
                                    });
                                });
                            }
                            GetBeniP($('#txtSearch').val());
                        }
                    }
                    if (result.statuscode == -1) {
                        $(_this).attr('checked', Is == false);
                    }
                }).catch(function () {
                    console.clear();
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
            function CreateSenderP() {
                preloader.load();
                $.post('/CreateSender-p', { o: $('#ddlOperator').val(), Name: $('#txtName').val(), Add: $('#txtAdd').val(), Dob: $('#txtDob').val(), MobileNo: $('#txtSearch').val(), Pincode: $('#txtPinCode').val(), LastName: $('#txtLName').val() },
                    function (result) {
                        resultReload(result);
                        if (result.statuscode == undefined || result.statuscode == "undefined") {
                            $('#' + an.id).remove();
                            mdlA.id = 'mymodal';
                            mdlA.content = result;
                            mdlA.options.backdrop = 'static';
                            mdlA.options.keyboard = false;
                            mdlA.alert(mdlA.size.small);
                            $('button.close span,#mdlCancel').click(function () {
                                mdlA.dispose();
                            });
                        }
                        else {
                            an.title = result.statuscode == an.type.success ? "Well done!" : "Oops! Error";
                            an.content = result.msg;
                            an.alert(result.statuscode);
                        }
                    }).catch(function () {

                        //console.clear();
                    }).fail(function (xhr) {
                        $(_this).attr('checked', Is == false);
                        if (xhr.status == 500) {
                            an.title = 'Oops';
                            an.content = 'Server error';
                            an.alert(an.type.failed);
                        }
                        if (xhr.status == 0) {
                            an.title = 'Oops';
                            an.content = 'Internet Connection was broken';
                            an.alert(an.type.failed);
                        }
                    }).always(function () {
                        preloader.remove();
                    });
            }
            function VerifySenderP() {
                var refid = $('#hidReffID').val();
                refid = refid === undefined ? '' : refid;
                preloader.load();
                $.post('/VerifySender-p', { o: $('#ddlOperator').val(), MobileNo: $('#txtSearch').val(), OTP: $('#txtOTP').val(), ReffID: refid },
                    function (result) {
                        resultReload(result);
                        if (result.statuscode == an.type.failed) {
                            an.title = "Oops! Error";
                            an.content = result.msg;
                            an.alert(result.statuscode);
                        }
                        else if (result.statuscode == an.type.success) {
                            an.title = "Well done!";
                            an.content = result.msg;
                            an.alert(result.statuscode);
                            mdlA.dispose(function () {
                                GetSenderP();
                            });
                        }
                    }
                ).catch(function () {
                    console.clear();
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
            var ResendSenderOTPP = function () {
                preloader.load();
                var SID = $('#hidReffID').val() == undefined ? $('#hidSenderID').val() : $('#hidReffID').val();

                $.post('/SReOTP-p', { o: $('#ddlOperator').val(), MobileNo: $('#txtSearch').val(), SID },
                    function (result) {
                        resultReload(result);
                        an.title = result.statuscode == an.type.success ? "Well done!" : "Oops! Error";
                        an.content = result.msg;
                        an.alert(result.statuscode);
                    }).catch(function () {
                        console.clear();
                    }).fail(function (xhr) {
                        $(_this).attr('checked', Is == false);
                        if (xhr.status == 500) {
                            an.title = 'Oops';
                            an.content = 'Server error';
                            an.alert(an.type.failed);
                        }
                        if (xhr.status == 0) {
                            an.title = 'Oops';
                            an.content = 'Internet Connection was broken';
                            an.alert(an.type.failed);
                        }
                    }).always(function () {
                        preloader.remove();
                    });
            }
            function AddBeneP() {
                preloader.load();
                $.post('/AddBene-p', {}, function (result) {
                    resultReload(result);
                    $('#' + an.id).remove();
                    mdlA.id = 'beneModel';
                    mdlA.content = result;
                    mdlA.options.backdrop = 'static';
                    mdlA.options.keyboard = false;
                    mdlA.alert(mdlA.size.default);
                    $('button.close span,#mdlCancel').click(function () {
                        mdlA.dispose();
                    });
                    //$('.selectpicker').selectpicker('refresh');
                }).catch(function () {
                    console.clear();
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
            var GetBeniP = function (s) {
                preloader.load();
                var SID = $('#hidSenderID').val();
                $.post('/GetBeni-p', { o: $('#ddlOperator').val(), MobileNo: s, SID }, function (result) {
                    resultReload(result);
                    $('#DivbeniList').html(result);
                }).catch(function () {
                    console.clear();
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
            function createBeniP() {
                preloader.load();
                var Bank = $("#ddlBank option:selected").text();
                var BankID = $("#ddlBank option:selected").data().bankId;
                var SID = $('#hidSenderID').val();
                var ttype = 1;
                if ($('#rdoNEFT').is(':checked')) {
                    ttype = 2;
                }
                $.post('/CreateBeni-p', { OID: $('#ddlOperator').val(), mobileNo: $('#txtMobileNo').val(), BeneName: $('#txtName').val(), IFSC: $('#txtIFSC').val(), AccountNo: $('#txtAccount').val(), BankName: Bank, BankID: BankID, SendermobileNo: $('#txtSearch').val(), SID, ttype }, function (result) {
                    resultReload(result);
                    if (result.statuscode == undefined || result.statuscode == "undefined") {
                        var bmob = $('#txtMobileNo').val();
                        var acnum = $('#txtAccount').val();
                        $('#' + mdlA.id).remove();
                        mdlA.id = 'createBeneModal';
                        mdlA.content = result;
                        mdlA.options.backdrop = 'static';
                        mdlA.options.keyboard = false;
                        mdlA.alert(mdlA.size.small);
                        $('button.close span,#mdlCancel').click(function () {
                            mdlA.dispose();
                        });
                        $('#btnValidateBene').unbind().click(function () {
                            var OTP = $('#txtOTP').val();
                            $('#OTPHelp').addClass('d-none');
                            if (OTP == '') {
                                $('#OTPHelp').removeClass('d-none');
                                $('#OTPHelp').html('Enter a valid OTP');
                                return true;
                            }
                            var SID = $('#hidReffID').val();
                            var BeneID = $('#hidReffID').val();
                            preloader.load();
                            $.post('/ValidateOTPForBene-p', { o: $('#ddlOperator').val(), MobileNo: $('#txtSearch').val(), BMobile: bmob, AccountNo: acnum, OTP, SID, BeneID },
                                function (result) {
                                    resultReload(result);
                                    if (result.statuscode == an.type.failed) {
                                        an.title = "Oops! Error";
                                        an.content = result.msg;
                                        an.alert(result.statuscode);
                                        $('#OTPHelp').removeClass('d-none');
                                        $('#OTPHelp').html(result.msg);
                                    }
                                    else if (result.statuscode == an.type.success) {
                                        an.title = "Well done!";
                                        an.content = result.msg;
                                        an.alert(result.statuscode);
                                        mdlA.dispose(function () {
                                            GetBeniP($('#txtSearch').val());
                                        });
                                    }
                                }).catch(function () {
                                    console.clear();
                                }).fail(function (xhr) {
                                    $(_this).attr('checked', Is == false);
                                    if (xhr.status == 500) {
                                        an.title = 'Oops';
                                        an.content = 'Server error';
                                        an.alert(an.type.failed);
                                    }
                                    if (xhr.status == 0) {
                                        an.title = 'Oops';
                                        an.content = 'Internet Connection was broken';
                                        an.alert(an.type.failed);
                                    }
                                }).always(function () {
                                    preloader.remove();
                                });
                        });
                    }
                    else {
                        if (result.statuscode == an.type.failed) {
                            an.title = "Oops! Error";
                            an.content = result.msg;
                            an.alert(result.statuscode);
                        }
                        else if (result.statuscode == an.type.success) {
                            GetBeniP($('#txtSearch').val());
                            an.title = "Well done!";
                            an.content = result.msg;
                            an.alert(result.statuscode);
                            mdlA.dispose();
                        }
                    }
                }).catch(function () {
                    console.clear();
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
            function DeleteBeneP(temp, OTP) {
                preloader.load();
                var tr = $(temp).closest("tr");
                var BeneID = $(tr.find('td').eq(1)).data().beneid;
                var SID = $('#hidSenderID').val();
                $.post('/DeleteBene-p', { o: $('#ddlOperator').val(), MobileNo: $('#txtSearch').val(), BeneID, SID, OTP },
                    function (result) {
                        resultReload(result);
                        if (result.statuscode == undefined || result.statuscode == "undefined") {
                            $('#' + an.id).remove();
                            mdlA.id = 'delBeneModal';
                            mdlA.content = result;
                            mdlA.options.backdrop = 'static';
                            mdlA.options.keyboard = false;
                            mdlA.alert(mdlA.size.small);
                            $('button.close span,#mdlCancel').click(function () {
                                mdlA.dispose();
                            });
                            $('#btnVerifyB').click(function () {
                                var Op = $('#txtOTP').val();
                                if (Op.length > 0) {
                                    DeleteBeneP(temp, Op);
                                }
                                else {
                                    an.id = 'anVerifyOTP';
                                    an.title = 'Oops';
                                    an.content = 'OTP can not be empty';
                                    an.alert(an.type.failed);
                                }
                            });
                        }
                        else {
                            mdlA.dispose();
                            an.title = result.statuscode == an.type.success ? "Well done!" : "Oops! Error";
                            an.content = result.msg;
                            an.alert(result.statuscode);
                            if (result.statuscode == an.type.success) {
                                GetBeniP($('#txtSearch').val());
                            }
                        }
                    }).catch(function () {
                        console.clear();
                    }).fail(function (xhr) {
                        $(_this).attr('checked', Is == false);
                        if (xhr.status == 500) {
                            an.title = 'Oops';
                            an.content = 'Server error';
                            an.alert(an.type.failed);
                        }
                        if (xhr.status == 0) {
                            an.title = 'Oops';
                            an.content = 'Internet Connection was broken';
                            an.alert(an.type.failed);
                        }
                    }).always(function () {
                        preloader.remove();
                    });
            }
            function DMTVerificationP() {
                preloader.load();
                var Bank = $("#ddlBank option:selected").text();
                var BankID = $("#ddlBank option:selected").data().bankId;
                var SID = $('#hidSenderID').val();
                $.post('/DMTVerification-p', { o: $('#ddlOperator').val(), MobileNo: $('#txtSearch').val(), AccountNo: $('#txtAccount').val(), IFSC: $('#txtIFSC').val(), Bank, BankID, BeneName: $('#txtName').val(), SID }, function (result) {
                    resultReload(result);
                    if (result.statuscode == 2) {
                        $('#txtName').val(result.beneName);
                        an.title = "Well done";
                        an.content = result.msg;
                        an.alert(an.type.success);
                    }
                    else {
                        an.title = "Oops! Error";
                        an.content = result.msg;
                        an.alert(an.type.failed);
                    }
                }).catch(function (e) {
                    console.clear();
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
            function GetChargeP() {
                preloader.load();
                $.post('/GetCharge-p', { o: $('#ddlOperator').val(), amount: $(txtAmount).val() }, function (result) {
                    resultReload(result);
                    if (result.statuscode == an.type.failed) {
                        an.title = "Oops! Error";
                        an.content = result.msg;
                        an.alert(result.statuscode);
                    }
                    else if (result.statuscode == an.type.success) {
                        $("#txtChargeAmt").html(result.charged);
                        $("#txtTotalAmt").html(parseFloat($(txtAmount).val()) + parseFloat(result.charged));
                        $("#txtAmount").attr("readonly", "readonly");
                        $("#Div_confirm").show();
                        $("#Div_confirmation").hide();
                    }
                }).catch(function () {
                    console.clear();
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
            function SendMoneyPopUpP(itm) {
                preloader.load();
                var tr = $(itm).closest("tr");
                $.post('/SendMoneyPopUp-p', {}, function (result) {
                    resultReload(result);
                    $('#' + an.id).remove();
                    mdlA.id = 'smpp';
                    mdlA.content = result;
                    mdlA.options.backdrop = 'static';
                    mdlA.options.keyboard = false;
                    mdlA.alert(mdlA.size.default);
                    $('button.close span,#mdlCancel').click(function () {
                        mdlA.dispose();
                    });
                    $('#HddBeniID').val($(tr.find('td')[1]).data().beneid);
                    $('#HidBankID').val($(tr.find('td')[1]).data().bankid);
                    $('#HidBeneMobile').val($(tr.find('td')[1]).data().bmobile)
                    $('#LblAccount').html(tr.find(".td2").html());
                    $('#LblBank').html(tr.find(".td1").html());
                    $('#LblBeni').html(tr.find(".td3").html());
                    $('#HddIfsc').val(tr.find(".td4").html());

                }).catch(function () {
                    console.clear();
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }
            function SendMoneyP(sender) {
                let remLimit = parseInt($('#hidRemain').val() == '' ? '0' : $('#hidRemain').val());
                let hidTotal = parseInt($('#hidTotal').val() == '' ? '0' : $('#hidTotal').val());
                let hidIsNotchecked = $('#hidIsNotchecked').val() == '' ? false : $('#hidIsNotchecked').val();
                if (hidIsNotchecked == false && (hidTotal > 0 || remLimit > 0)) {
                    if (remLimit < parseInt($('#txtAmount').val())) {
                        an.title = 'Oops';
                        an.content = 'Amount should not be greater than remaining limit';
                        an.alert(an.type.failed);
                        return false;
                    }
                }

                if ("Confirm" !== $(sender).html())
                    return false;
                btnLdr.addClass = 'btn-dark';
                btnLdr.removeClass = 'btn-outline-dark';
                btnLdr.Start($(sender), 'Sending...');
                preloader.load();
                var trntype = true;
                if ($('#rdoNEFT').is(':checked')) {
                    trntype = false;
                }
                var bank = $("#LblBank").html();
                var secKey = $('#txtSecKey').val() == undefined ? '' : $('#txtSecKey').val();
                var SendMoney = {
                    BeneID: $('#HddBeniID').val(), IFSC: $('#HddIfsc').val(), AccountNo: $('#LblAccount').html(), Channel: trntype, Amount: $('#txtAmount').val(), MobileNo: $('#txtSearch').val(), Bank: bank, BeneName: $('#LblBeni').html(), SecKey: secKey, BankID: $('#HidBankID').val(), BeneMobile: $('#HidBeneMobile').val(), o: $('#ddlOperator').val(), RefferenceID: $('#hidSenderID').val()
                }
                $.ajax({
                    type: 'POST',
                    url: '/SendMoney-p',
                    dataType: 'json',
                    contentType: 'application/json',
                    data: JSON.stringify(SendMoney),
                    success: function (result) {
                        resultReload(result);
                        mdlA.dispose();
                        if (result.statuscode == 3 && result.tid == 0) {
                            var msg = '<h4 class="alert-heading ' + an.getTColor(result.statuscode) + '"> ' + result.status + '!</h4><p>' + result.liveID + '</p><hr><p class="mb-0 font-weight-bold">' + result.msg + '</p>';
                            mdlA.id = 'mymodal1';
                            mdlA.content = '<div class="col-md-12"><button type ="button" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></button>'
                                + msg + '</div>';
                            mdlA.options.keyboard = false;
                            mdlA.alert(mdlA.size.small);
                            $('button.close span,#mdlCancel').unbind().click(function () {
                                mdlA.dispose();
                            });
                        }
                        else {
                            $('#txtAmount').val(0);
                            setTimeout(function () { DMRReceipt(result.groupID); }, 500);

                        }
                    }
                }).catch(function (x) {
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                    try {
                        btnLdr.Stop($(sender));
                    } catch (e) {

                    }
                });
            }
        </script>
        <script>
            function SaveLoanServiceLead() {
                debugger;
                let ct = {
                    name: $("#txtName"), mob: $("#txtMobileNo"), email: $("#txtEmail"), pan: $("#txtPan"),
                    LoanAmount: $("#txtAmount"),
                    Comments: $("#txtComments"), btn: $("#btnSubmit")
                }

                var len = 10, maxlength = 12;
                var validateMob = ct.mob.val().length >= len && (ct.mob.val().length <= maxlength) && $v.$IsMob(ct.mob.val()) != ct.mob.val();
                var Emailreg = /^([A-Za-z0-9_\-\.])+\@@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
                var validateEmail = (Emailreg.test(ct.email.val()));
                var IsE = {
                    name: ((ct.name.val() === null || ct.name.val() == "") || ct.name.val().length > 100 || $v.$numOnly(ct.name.val()) == ct.name.val()),
                    mob: !validateMob

                }
                $v.showErrorFor(ct.name, "Customer Name is required or Please required valid Name", IsE.name);
                $v.showErrorFor(ct.mob, "Customer Mobile No. is required and length must be between" + " " + len + " " + "To" + " " + maxlength + " " + "digits", IsE.mob);
                if ((ct.email.val() != null && ct.email.val() != "")) {
                    if (!validateEmail) {
                        IsE.email = true;
                        document.getElementById("EmailHelp").innerHTML = "Please enter a valid email Id";
                    }
                    else {
                        document.getElementById("EmailHelp").innerHTML = "";
                    }
                }
                if ((ct.LoanAmount.val() != null && ct.LoanAmount.val() != "")) {
                    if ($v.$decmalOnly(ct.LoanAmount.val()) != ct.LoanAmount.val()) {
                        IsE.loanAmount = true;
                        document.getElementById("AmountHelp").innerHTML = "Please enter valid amount";
                    }
                    else {
                        document.getElementById("AmountHelp").innerHTML = "";
                    }
                }
                IsE.err = (IsE.name || IsE.mob || IsE.email || IsE.loanAmount)
                if (IsE.err) {
                    btnLdr.Stop(ct.btn);
                    return false;
                }
                var LoanLeadServiceObj = {
                    Name: ct.name.val(),
                    Mobile: ct.mob.val(),
                    Email: ct.email.val(),
                    PAN: ct.pan.val(),
                    LoanTypeID: $("input[name='LoanType']:checked").val(),
                    Amount: ct.LoanAmount.val(),
                    CustomerTypeID: $("input[name='CustomerType']:checked").val(),
                    Comments: ct.Comments.val(),
                    OID: $("#OID").val()
                }
                //console.log(LoanLeadServiceObj)
                if (LoanLeadServiceObj != null) {
                    preloader.load();
                    var req = LoanLeadServiceObj;
                    $.ajax({
                        type: "POST",
                        url: "/SaveLeadService",
                        contentType: "application/json",
                        dataType: "json",
                        data: JSON.stringify(req),
                        success: function (result) {

                            if (result.statuscode == 1) {
                                an.title = result.msg,
                                    an.content = "Loan Service Lead Saved Successfully",
                                    an.alert(an.type.success);
                                ClearLoanServiceLead();
                            }
                            else {
                                an.title = "failed",
                                    an.content = result.msg,
                                    an.alert(an.type.failed);
                            }
                        }

                    }).catch(function (x) {
                    }).fail(function (xhr) {
                        if (xhr.status == 500) {
                            an.title = 'Oops';
                            an.content = 'Server error';
                            an.alert(an.type.failed);
                        }
                        if (xhr.status == 0) {
                            an.title = 'Oops';
                            an.content = 'Internet Connection was broken';
                            an.alert(an.type.failed);
                        }
                    }).always(function () {
                        preloader.remove();
                        try {
                            btnLdr.Stop($(sender));
                        } catch (e) {

                        }
                    });
                }
            }
            //clar loan service lead
            function ClearLoanServiceLead() {
                let ct = {
                    name: $("#txtName"), mob: $("#txtMobileNo"), email: $("#txtEmail"), pan: $("#txtPan"),
                    LoanAmount: $("#txtAmount"),
                    Comments: $("#txtComments"), btn: $("#btnSubmit")
                }
                ct.name.val("");
                ct.mob.val("");
                ct.email.val("");
                ct.pan.val("");
                ct.LoanAmount.val("0");
                ct.Comments.val("");
                $("input[name='LoanType']").prop("checked", false);
                $("input[name='CustomerType']:checked").prop("checked", false);

            }

            //Save Insurance
            function SaveInsuranceServiceLead() {
                debugger;
                let ct = {
                    name: $("#txtName"), mob: $("#txtMobileNo"),
                    Amount: $("#txtAmount"), Age: $("#txtAge"),
                    Comments: $("#txtComments"), btn: $("#btnSubmit")
                }
                var len = 10, maxlength = 12;
                var validateMob = ct.mob.val().length >= len && (ct.mob.val().length <= maxlength) && $v.$IsMob(ct.mob.val()) != ct.mob.val();
                var IsE = {
                    name: ((ct.name.val() === null || ct.name.val() == "") || ct.name.val().length > 100 || $v.$numOnly(ct.name.val()) == ct.name.val()),
                    mob: !validateMob

                }
                $v.showErrorFor(ct.name, "Customer Name is required or Please required valid Name", IsE.name);
                $v.showErrorFor(ct.mob, "Customer Mobile No. is required and length must be between" + " " + len + " " + "To" + " " + maxlength + " " + "digits", IsE.mob);
                if ((ct.Amount.val() != null && ct.Amount.val() != "")) {
                    if ($v.$decmalOnly(ct.Amount.val()) != ct.Amount.val()) {
                        IsE.Amount = true;
                        document.getElementById("AmountHelp").innerHTML = "Please enter valid amount";
                    }
                    else {
                        document.getElementById("AmountHelp").innerHTML = "";
                    }
                }
                if ((ct.Age.val() != null && ct.Age.val() != "")) {
                    if ($v.$numOnly(ct.Age.val()) != ct.Age.val()) {
                        IsE.Age = true;
                        document.getElementById("AgeHelp").innerHTML = "Please enter valid age";
                    }
                    else {
                        document.getElementById("AgeHelp").innerHTML = "";
                    }
                }
                IsE.err = (IsE.name || IsE.mob || IsE.Amount || IsE.Age)
                if (IsE.err) {
                    btnLdr.Stop(ct.btn);
                    return false;
                }
                var InsuranceServiceObj = {
                    Name: ct.name.val(),
                    Mobile: ct.mob.val(),
                    InsuranceTypeID: $("input[name='InsuranceType']:checked").val(),
                    Amount: ct.Amount.val(),
                    RequiredFor: $("input[name='RequiredFor']:checked").val(),
                    Comments: ct.Comments.val(),
                    OID: $("#OID").val(),
                    Age: ct.Age.val()
                }
                //console.log(LoanLeadServiceObj)
                if (InsuranceServiceObj != null) {
                    preloader.load();
                    var req = InsuranceServiceObj;
                    $.ajax({
                        type: "POST",
                        url: "/SaveLeadService",
                        contentType: "application/json",
                        dataType: "json",
                        data: JSON.stringify(req),
                        success: function (result) {

                            if (result.statuscode == 1) {
                                an.title = result.msg,
                                    an.content = "Insurance Service Lead Saved Successfully",
                                    an.alert(an.type.success);
                                ClearInsuranceServiceLead();
                            }
                            else {
                                an.title = "failed",
                                    an.content = result.msg,
                                    an.alert(an.type.failed);
                            }
                        }

                    }).catch(function (x) {
                    }).fail(function (xhr) {
                        if (xhr.status == 500) {
                            an.title = 'Oops';
                            an.content = 'Server error';
                            an.alert(an.type.failed);
                        }
                        if (xhr.status == 0) {
                            an.title = 'Oops';
                            an.content = 'Internet Connection was broken';
                            an.alert(an.type.failed);
                        }
                    }).always(function () {
                        preloader.remove();
                        try {
                            btnLdr.Stop($(sender));
                        } catch (e) {

                        }
                    });
                }
            }
            // Clear Insurance ServiceLead
            function ClearInsuranceServiceLead() {
                let ct = {
                    name: $("#txtName"), mob: $("#txtMobileNo"), age: $("#txtAge"),
                    Amount: $("#txtAmount"),
                    Comments: $("#txtComments"), btn: $("#btnSubmit")
                }
                ct.name.val("");
                ct.mob.val("");
                ct.Amount.val("");
                ct.age.val("");
                ct.Comments.val("");
                $("input[name='InsuranceType']").prop("checked", false);
                $("input[name='RequiredFor']:checked").prop("checked", false);
            }
        </script>
        <script>
            var doDTHconnection = function (sender) {

                btnLdr.addClass = 'btn-dark';
                btnLdr.removeClass = 'btn-outline-dark';
                btnLdr.Start($(sender), 'Sending...');

                var Btn = $('#btnDTHConn').val()
                preloader.load();
                var DthConn = {
                    Name: $('#txtname').val(), Mobile: $('#txtmobile').val(), OID: $('#ddlOperator').val()
                }
                $.ajax({
                    type: 'POST',
                    url: '/Dth-Conn',
                    dataType: 'json',
                    contentType: 'application/json',
                    data: JSON.stringify(DthConn),
                    success: function (result) {
                        resultReload(result);
                        mdlA.dispose();
                        if (result.statuscode === -1) {
                            an.title = 'Oops';
                            an.content = result.msg;
                            an.alert(an.type.failed);
                            an.autoClose = 2;
                            btnLdr.Stop(Btn);
                        }
                        else {
                            an.title = 'Welldone!';
                            an.content = result.msg;
                            an.alert(an.type.success);
                            mdlA.dispose();
                            btnLdr.Stop(Btn);
                        }
                    }
                }).catch(function (x) {
                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                        btnLdr.Stop(Btn);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                        btnLdr.Stop($(sender));
                    }
                }).always(function () {
                    preloader.remove();
                    try {
                        btnLdr.Stop($(sender));
                    } catch (e) {

                    }
                });
            }
            var CouponVocherPatrial = (id) => {
                $.post(`/SellerCouponVoucher/${id}`, {}, function (result) {
                    $('#DivCouponVocher').html('');
                    $('#DivCouponVocher').html(result);
                }).catch(function (err) {

                }).fail(function (xhr) {
                    $(_this).attr('checked', Is == false);
                    if (xhr.status == 500) {
                        an.title = 'Oops';
                        an.content = 'Server error';
                        an.alert(an.type.failed);
                    }
                    if (xhr.status == 0) {
                        an.title = 'Oops';
                        an.content = 'Internet Connection was broken';
                        an.alert(an.type.failed);
                    }
                }).always(function () {
                    preloader.remove();
                });
            }


            $(document).on('keypress', $('#btnNew'), function (event) {
                var keycode = event.keyCode ? event.keyCode : event.which;
                if (keycode === 13) {
                    let isVisible = $('#DivCtDetail').is(':visible');
                    if (isVisible) {
                        $('#btnNew').click()
                    }
                }
            });
        </script>
    }
}
